# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.908 ops/s
# Warmup Iteration   2: 6.966 ops/s
# Warmup Iteration   3: 6.955 ops/s
# Warmup Iteration   4: 6.961 ops/s
# Warmup Iteration   5: 6.972 ops/s
Iteration   1: 6.932 ops/s
Iteration   2: 6.941 ops/s
Iteration   3: 6.968 ops/s
Iteration   4: 6.280 ops/s
Iteration   5: 6.421 ops/s
Iteration   6: 6.923 ops/s
Iteration   7: 7.005 ops/s
Iteration   8: 6.974 ops/s
Iteration   9: 7.062 ops/s
Iteration  10: 7.002 ops/s

# Run progress: 10.00% complete, ETA 00:20:59
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.491 ops/s
# Warmup Iteration   2: 6.754 ops/s
# Warmup Iteration   3: 6.752 ops/s
# Warmup Iteration   4: 6.775 ops/s
# Warmup Iteration   5: 6.353 ops/s
Iteration   1: 6.788 ops/s
Iteration   2: 6.787 ops/s
Iteration   3: 6.772 ops/s
Iteration   4: 6.810 ops/s
Iteration   5: 6.687 ops/s
Iteration   6: 6.544 ops/s
Iteration   7: 6.730 ops/s
Iteration   8: 6.639 ops/s
Iteration   9: 6.864 ops/s
Iteration  10: 6.822 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  6.798 ?(99.9%) 0.177 ops/s [Average]
  (min, avg, max) = (6.280, 6.798, 7.062), stdev = 0.204
  CI (99.9%): [6.620, 6.975] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:18:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.770 ops/s
# Warmup Iteration   2: 6.712 ops/s
# Warmup Iteration   3: 6.723 ops/s
# Warmup Iteration   4: 6.685 ops/s
# Warmup Iteration   5: 6.750 ops/s
Iteration   1: 6.110 ops/s
Iteration   2: 6.774 ops/s
Iteration   3: 6.669 ops/s
Iteration   4: 6.741 ops/s
Iteration   5: 6.723 ops/s
Iteration   6: 6.024 ops/s
Iteration   7: 6.312 ops/s
Iteration   8: 6.774 ops/s
Iteration   9: 6.687 ops/s
Iteration  10: 6.684 ops/s

# Run progress: 30.00% complete, ETA 00:16:39
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.569 ops/s
# Warmup Iteration   2: 6.545 ops/s
# Warmup Iteration   3: 6.641 ops/s
# Warmup Iteration   4: 6.877 ops/s
# Warmup Iteration   5: 6.835 ops/s
Iteration   1: 6.836 ops/s
Iteration   2: 6.874 ops/s
Iteration   3: 6.849 ops/s
Iteration   4: 6.863 ops/s
Iteration   5: 6.616 ops/s
Iteration   6: 6.540 ops/s
Iteration   7: 6.550 ops/s
Iteration   8: 6.820 ops/s
Iteration   9: 6.889 ops/s
Iteration  10: 6.845 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  6.659 ?(99.9%) 0.215 ops/s [Average]
  (min, avg, max) = (6.024, 6.659, 6.889), stdev = 0.247
  CI (99.9%): [6.444, 6.873] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:14:12
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.860 ops/s
# Warmup Iteration   2: 6.154 ops/s
# Warmup Iteration   3: 5.959 ops/s
# Warmup Iteration   4: 6.136 ops/s
# Warmup Iteration   5: 6.217 ops/s
Iteration   1: 6.188 ops/s
Iteration   2: 6.199 ops/s
Iteration   3: 5.670 ops/s
Iteration   4: 6.178 ops/s
Iteration   5: 6.236 ops/s
Iteration   6: 6.209 ops/s
Iteration   7: 6.256 ops/s
Iteration   8: 5.538 ops/s
Iteration   9: 6.096 ops/s
Iteration  10: 6.227 ops/s

# Run progress: 50.00% complete, ETA 00:11:54
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.155 ops/s
# Warmup Iteration   2: 6.165 ops/s
# Warmup Iteration   3: 5.706 ops/s
# Warmup Iteration   4: 6.139 ops/s
# Warmup Iteration   5: 6.110 ops/s
Iteration   1: 5.707 ops/s
Iteration   2: 5.642 ops/s
Iteration   3: 6.148 ops/s
Iteration   4: 6.211 ops/s
Iteration   5: 6.174 ops/s
Iteration   6: 5.761 ops/s
Iteration   7: 5.946 ops/s
Iteration   8: 6.091 ops/s
Iteration   9: 6.102 ops/s
Iteration  10: 6.168 ops/s


Result "com.meylism.databind.Serialization.gson":
  6.037 ?(99.9%) 0.204 ops/s [Average]
  (min, avg, max) = (5.538, 6.037, 6.256), stdev = 0.234
  CI (99.9%): [5.834, 6.241] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:09:33
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.482 ops/s
# Warmup Iteration   2: 6.459 ops/s
# Warmup Iteration   3: 6.620 ops/s
# Warmup Iteration   4: 6.641 ops/s
# Warmup Iteration   5: 6.594 ops/s
Iteration   1: 6.604 ops/s
Iteration   2: 6.584 ops/s
Iteration   3: 6.192 ops/s
Iteration   4: 5.898 ops/s
Iteration   5: 6.696 ops/s
Iteration   6: 6.653 ops/s
Iteration   7: 6.668 ops/s
Iteration   8: 6.648 ops/s
Iteration   9: 5.936 ops/s
Iteration  10: 6.695 ops/s

# Run progress: 70.00% complete, ETA 00:07:11
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6.082 ops/s
# Warmup Iteration   2: 6.033 ops/s
# Warmup Iteration   3: 5.875 ops/s
# Warmup Iteration   4: 5.876 ops/s
# Warmup Iteration   5: 6.255 ops/s
Iteration   1: 6.186 ops/s
Iteration   2: 5.715 ops/s
Iteration   3: 5.777 ops/s
Iteration   4: 5.949 ops/s
Iteration   5: 5.732 ops/s
Iteration   6: 5.459 ops/s
Iteration   7: 5.907 ops/s
Iteration   8: 6.317 ops/s
Iteration   9: 6.249 ops/s
Iteration  10: 6.233 ops/s


Result "com.meylism.databind.Serialization.jackson":
  6.205 ?(99.9%) 0.341 ops/s [Average]
  (min, avg, max) = (5.459, 6.205, 6.696), stdev = 0.393
  CI (99.9%): [5.864, 6.546] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:04:48
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6.052 ops/s
# Warmup Iteration   2: 5.906 ops/s
# Warmup Iteration   3: 6.274 ops/s
# Warmup Iteration   4: 6.360 ops/s
# Warmup Iteration   5: 6.346 ops/s
Iteration   1: 5.820 ops/s
Iteration   2: 6.369 ops/s
Iteration   3: 6.361 ops/s
Iteration   4: 6.019 ops/s
Iteration   5: 6.011 ops/s
Iteration   6: 6.355 ops/s
Iteration   7: 6.379 ops/s
Iteration   8: 6.362 ops/s
Iteration   9: 6.137 ops/s
Iteration  10: 5.596 ops/s

# Run progress: 90.00% complete, ETA 00:02:24
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.753 ops/s
# Warmup Iteration   2: 6.178 ops/s
# Warmup Iteration   3: 6.235 ops/s
# Warmup Iteration   4: 5.858 ops/s
# Warmup Iteration   5: 5.680 ops/s
Iteration   1: 6.284 ops/s
Iteration   2: 6.247 ops/s
Iteration   3: 6.281 ops/s
Iteration   4: 6.262 ops/s
Iteration   5: 6.186 ops/s
Iteration   6: 6.122 ops/s
Iteration   7: 6.238 ops/s
Iteration   8: 6.338 ops/s
Iteration   9: 5.653 ops/s
Iteration  10: 6.281 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  6.165 ?(99.9%) 0.204 ops/s [Average]
  (min, avg, max) = (5.596, 6.165, 6.379), stdev = 0.235
  CI (99.9%): [5.961, 6.369] (assumes normal distribution)


# Run complete. Total time: 00:24:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt  Score   Error  Units
Serialization.dsljson              thrpt   20  6.798 ? 0.177  ops/s
Serialization.dsljson_reflection   thrpt   20  6.659 ? 0.215  ops/s
Serialization.gson                 thrpt   20  6.037 ? 0.204  ops/s
Serialization.jackson              thrpt   20  6.205 ? 0.341  ops/s
Serialization.jackson_afterburner  thrpt   20  6.165 ? 0.204  ops/s
