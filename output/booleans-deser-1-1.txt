# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 679512.441 ops/s
# Warmup Iteration   2: 930217.543 ops/s
# Warmup Iteration   3: 934184.069 ops/s
# Warmup Iteration   4: 926162.266 ops/s
# Warmup Iteration   5: 934183.603 ops/s
Iteration   1: 930615.634 ops/s
Iteration   2: 931286.219 ops/s
Iteration   3: 925774.138 ops/s
Iteration   4: 889506.870 ops/s
Iteration   5: 934581.108 ops/s
Iteration   6: 931537.344 ops/s
Iteration   7: 933162.495 ops/s
Iteration   8: 930763.265 ops/s
Iteration   9: 934686.372 ops/s
Iteration  10: 936373.640 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 832884.874 ops/s
# Warmup Iteration   2: 982080.349 ops/s
# Warmup Iteration   3: 983345.410 ops/s
# Warmup Iteration   4: 979371.275 ops/s
# Warmup Iteration   5: 973651.292 ops/s
Iteration   1: 982224.226 ops/s
Iteration   2: 978933.313 ops/s
Iteration   3: 979504.579 ops/s
Iteration   4: 981495.132 ops/s
Iteration   5: 890438.575 ops/s
Iteration   6: 945144.187 ops/s
Iteration   7: 964026.734 ops/s
Iteration   8: 971302.243 ops/s
Iteration   9: 966493.542 ops/s
Iteration  10: 982078.183 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  945996.390 ?(99.9%) 24853.772 ops/s [Average]
  (min, avg, max) = (889506.870, 945996.390, 982224.226), stdev = 28621.640
  CI (99.9%): [921142.618, 970850.162] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 856345.220 ops/s
# Warmup Iteration   2: 981169.965 ops/s
# Warmup Iteration   3: 980601.371 ops/s
# Warmup Iteration   4: 979717.758 ops/s
# Warmup Iteration   5: 980052.781 ops/s
Iteration   1: 973105.576 ops/s
Iteration   2: 974078.033 ops/s
Iteration   3: 970765.116 ops/s
Iteration   4: 979262.040 ops/s
Iteration   5: 979707.574 ops/s
Iteration   6: 945198.127 ops/s
Iteration   7: 937114.113 ops/s
Iteration   8: 972045.549 ops/s
Iteration   9: 976578.820 ops/s
Iteration  10: 979264.508 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 575629.568 ops/s
# Warmup Iteration   2: 796919.393 ops/s
# Warmup Iteration   3: 985300.019 ops/s
# Warmup Iteration   4: 981928.878 ops/s
# Warmup Iteration   5: 980306.190 ops/s
Iteration   1: 974946.883 ops/s
Iteration   2: 977373.668 ops/s
Iteration   3: 977426.154 ops/s
Iteration   4: 983003.572 ops/s
Iteration   5: 965496.270 ops/s
Iteration   6: 978637.241 ops/s
Iteration   7: 980863.095 ops/s
Iteration   8: 922508.021 ops/s
Iteration   9: 953176.670 ops/s
Iteration  10: 963572.138 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  968206.158 ?(99.9%) 14182.397 ops/s [Average]
  (min, avg, max) = (922508.021, 968206.158, 983003.572), stdev = 16332.469
  CI (99.9%): [954023.761, 982388.555] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 238412.536 ops/s
# Warmup Iteration   2: 264320.547 ops/s
# Warmup Iteration   3: 268276.015 ops/s
# Warmup Iteration   4: 267401.474 ops/s
# Warmup Iteration   5: 267278.264 ops/s
Iteration   1: 267642.339 ops/s
Iteration   2: 266078.288 ops/s
Iteration   3: 266762.791 ops/s
Iteration   4: 267199.292 ops/s
Iteration   5: 261524.373 ops/s
Iteration   6: 268348.748 ops/s
Iteration   7: 269160.113 ops/s
Iteration   8: 266771.054 ops/s
Iteration   9: 260658.675 ops/s
Iteration  10: 266134.914 ops/s

# Run progress: 50.00% complete, ETA 00:04:38
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 238112.187 ops/s
# Warmup Iteration   2: 265134.884 ops/s
# Warmup Iteration   3: 270051.828 ops/s
# Warmup Iteration   4: 269189.761 ops/s
# Warmup Iteration   5: 269035.898 ops/s
Iteration   1: 270309.745 ops/s
Iteration   2: 267494.817 ops/s
Iteration   3: 269649.319 ops/s
Iteration   4: 269235.146 ops/s
Iteration   5: 268803.561 ops/s
Iteration   6: 267357.099 ops/s
Iteration   7: 270128.430 ops/s
Iteration   8: 266087.288 ops/s
Iteration   9: 269902.690 ops/s
Iteration  10: 251155.218 ops/s


Result "com.meylism.databind.Deserialization.gson":
  266520.195 ?(99.9%) 3836.791 ops/s [Average]
  (min, avg, max) = (251155.218, 266520.195, 270309.745), stdev = 4418.454
  CI (99.9%): [262683.404, 270356.986] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:42
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 518359.218 ops/s
# Warmup Iteration   2: 581332.170 ops/s
# Warmup Iteration   3: 607244.380 ops/s
# Warmup Iteration   4: 603874.105 ops/s
# Warmup Iteration   5: 599397.737 ops/s
Iteration   1: 604205.822 ops/s
Iteration   2: 611492.300 ops/s
Iteration   3: 611346.870 ops/s
Iteration   4: 614191.542 ops/s
Iteration   5: 612511.422 ops/s
Iteration   6: 614878.395 ops/s
Iteration   7: 608779.100 ops/s
Iteration   8: 615043.948 ops/s
Iteration   9: 611593.202 ops/s
Iteration  10: 610282.719 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 555025.247 ops/s
# Warmup Iteration   2: 600153.214 ops/s
# Warmup Iteration   3: 649065.735 ops/s
# Warmup Iteration   4: 633845.843 ops/s
# Warmup Iteration   5: 648799.664 ops/s
Iteration   1: 652540.863 ops/s
Iteration   2: 650491.552 ops/s
Iteration   3: 654359.931 ops/s
Iteration   4: 652588.347 ops/s
Iteration   5: 650554.085 ops/s
Iteration   6: 652857.239 ops/s
Iteration   7: 647112.670 ops/s
Iteration   8: 638899.552 ops/s
Iteration   9: 644008.552 ops/s
Iteration  10: 650753.004 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  630424.556 ?(99.9%) 17268.292 ops/s [Average]
  (min, avg, max) = (604205.822, 630424.556, 654359.931), stdev = 19886.191
  CI (99.9%): [613156.264, 647692.848] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
598009.267 ops/s
# Warmup Iteration   2: 634627.307 ops/s
# Warmup Iteration   3: 662180.332 ops/s
# Warmup Iteration   4: 663037.798 ops/s
# Warmup Iteration   5: 664976.934 ops/s
Iteration   1: 659256.906 ops/s
Iteration   2: 664162.252 ops/s
Iteration   3: 663440.715 ops/s
Iteration   4: 664930.075 ops/s
Iteration   5: 663192.676 ops/s
Iteration   6: 666161.510 ops/s
Iteration   7: 665448.878 ops/s
Iteration   8: 665695.257 ops/s
Iteration   9: 665915.597 ops/s
Iteration  10: 664591.982 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
588535.751 ops/s
# Warmup Iteration   2: 644780.580 ops/s
# Warmup Iteration   3: 624738.854 ops/s
# Warmup Iteration   4: 643525.220 ops/s
# Warmup Iteration   5: 642400.258 ops/s
Iteration   1: 645767.936 ops/s
Iteration   2: 647479.154 ops/s
Iteration   3: 649507.942 ops/s
Iteration   4: 645867.574 ops/s
Iteration   5: 645739.482 ops/s
Iteration   6: 645144.629 ops/s
Iteration   7: 648865.291 ops/s
Iteration   8: 646554.327 ops/s
Iteration   9: 643176.458 ops/s
Iteration  10: 647756.786 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  655432.771 ?(99.9%) 8052.963 ops/s [Average]
  (min, avg, max) = (643176.458, 655432.771, 666161.510), stdev = 9273.804
  CI (99.9%): [647379.808, 663485.735] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt       Score       Error  Units
Deserialization.dsljson              thrpt   20  945996.390 ? 24853.772  ops/s
Deserialization.dsljson_reflection   thrpt   20  968206.158 ? 14182.397  ops/s
Deserialization.gson                 thrpt   20  266520.195 ?  3836.791  ops/s
Deserialization.jackson              thrpt   20  630424.556 ? 17268.292  ops/s
Deserialization.jackson_afterburner  thrpt   20  655432.771 ?  8052.963  ops/s
