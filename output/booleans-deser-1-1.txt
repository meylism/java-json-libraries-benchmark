# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 4146028.779 ops/s
# Warmup Iteration   2: 4645765.152 ops/s
# Warmup Iteration   3: 4694733.790 ops/s
# Warmup Iteration   4: 4659571.188 ops/s
# Warmup Iteration   5: 4575695.486 ops/s
Iteration   1: 4794969.862 ops/s
Iteration   2: 4803458.764 ops/s
Iteration   3: 4544062.731 ops/s
Iteration   4: 4629513.856 ops/s
Iteration   5: 4625118.950 ops/s
Iteration   6: 4812557.960 ops/s
Iteration   7: 4484432.270 ops/s
Iteration   8: 4511471.046 ops/s
Iteration   9: 4549935.117 ops/s
Iteration  10: 4600362.429 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: 2241969.105 ops/s
# Warmup Iteration   2: 2473336.458 ops/s
# Warmup Iteration   3: 2551246.642 ops/s
# Warmup Iteration   4: 2514292.157 ops/s
# Warmup Iteration   5: 2538251.017 ops/s
Iteration   1: 2491289.631 ops/s
Iteration   2: 2452995.717 ops/s
Iteration   3: 2544471.133 ops/s
Iteration   4: 2439183.894 ops/s
Iteration   5: 2450508.952 ops/s
Iteration   6: 2426156.488 ops/s
Iteration   7: 2439779.207 ops/s
Iteration   8: 2420915.882 ops/s
Iteration   9: 2419608.413 ops/s
Iteration  10: 2389467.153 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  3541512.973 ?(99.9%) 977919.461 ops/s [Average]
  (min, avg, max) = (2389467.153, 3541512.973, 4812557.960), stdev = 1126173.506
  CI (99.9%): [2563593.512, 4519432.434] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: 2304987.425 ops/s
# Warmup Iteration   2: 4758562.327 ops/s
# Warmup Iteration   3: 4848782.905 ops/s
# Warmup Iteration   4: 4719568.252 ops/s
# Warmup Iteration   5: 4692095.065 ops/s
Iteration   1: 4917120.876 ops/s
Iteration   2: 4736948.766 ops/s
Iteration   3: 4594322.948 ops/s
Iteration   4: 4714562.038 ops/s
Iteration   5: 4708898.910 ops/s
Iteration   6: 4796939.493 ops/s
Iteration   7: 4830546.966 ops/s
Iteration   8: 4926929.753 ops/s
Iteration   9: 4804730.360 ops/s
Iteration  10: 4863356.682 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: 3715808.765 ops/s
# Warmup Iteration   2: 4030930.964 ops/s
# Warmup Iteration   3: 4168768.619 ops/s
# Warmup Iteration   4: 4265186.381 ops/s
# Warmup Iteration   5: 4203483.098 ops/s
Iteration   1: 4274804.499 ops/s
Iteration   2: 4120661.440 ops/s
Iteration   3: 4460157.587 ops/s
Iteration   4: 4270514.676 ops/s
Iteration   5: 4387602.976 ops/s
Iteration   6: 4254983.326 ops/s
Iteration   7: 4308032.139 ops/s
Iteration   8: 4250961.432 ops/s
Iteration   9: 4667349.957 ops/s
Iteration  10: 4486295.794 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  4568786.031 ?(99.9%) 226023.974 ops/s [Average]
  (min, avg, max) = (4120661.440, 4568786.031, 4926929.753), stdev = 260289.545
  CI (99.9%): [4342762.056, 4794810.005] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 1198405.702 ops/s
# Warmup Iteration   2: 1325847.495 ops/s
# Warmup Iteration   3: 1278313.866 ops/s
# Warmup Iteration   4: 1267886.929 ops/s
# Warmup Iteration   5: 1289036.487 ops/s
Iteration   1: 1304516.599 ops/s
Iteration   2: 1306000.952 ops/s
Iteration   3: 1272955.268 ops/s
Iteration   4: 1266878.192 ops/s
Iteration   5: 1263539.575 ops/s
Iteration   6: 1274720.754 ops/s
Iteration   7: 1268752.793 ops/s
Iteration   8: 1287883.231 ops/s
Iteration   9: 1280675.921 ops/s
Iteration  10: 1293934.998 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: 1243511.550 ops/s
# Warmup Iteration   2: 1317927.430 ops/s
# Warmup Iteration   3: 1332529.579 ops/s
# Warmup Iteration   4: 1303562.906 ops/s
# Warmup Iteration   5: 1291271.757 ops/s
Iteration   1: 1340146.828 ops/s
Iteration   2: 1361659.400 ops/s
Iteration   3: 1285098.606 ops/s
Iteration   4: 1278349.978 ops/s
Iteration   5: 1321448.775 ops/s
Iteration   6: 1304192.920 ops/s
Iteration   7: 1280911.984 ops/s
Iteration   8: 1257918.943 ops/s
Iteration   9: 1317782.351 ops/s
Iteration  10: 1280406.947 ops/s


Result "com.meylism.databind.Deserialization.gson":
  1292388.751 ?(99.9%) 23270.945 ops/s [Average]
  (min, avg, max) = (1257918.943, 1292388.751, 1361659.400), stdev = 26798.855
  CI (99.9%): [1269117.806, 1315659.696] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: 2920054.709 ops/s
# Warmup Iteration   2: 3113525.848 ops/s
# Warmup Iteration   3: 3037787.555 ops/s
# Warmup Iteration   4: 3078638.893 ops/s
# Warmup Iteration   5: 3117331.642 ops/s
Iteration   1: 3164575.986 ops/s
Iteration   2: 3022229.815 ops/s
Iteration   3: 3064569.313 ops/s
Iteration   4: 3088534.154 ops/s
Iteration   5: 3014725.539 ops/s
Iteration   6: 3123349.251 ops/s
Iteration   7: 3097919.437 ops/s
Iteration   8: 3070354.695 ops/s
Iteration   9: 3155842.600 ops/s
Iteration  10: 3180296.280 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: 3219935.081 ops/s
# Warmup Iteration   2: 3430186.807 ops/s
# Warmup Iteration   3: 3586490.232 ops/s
# Warmup Iteration   4: 3358193.307 ops/s
# Warmup Iteration   5: 3348376.906 ops/s
Iteration   1: 3380499.696 ops/s
Iteration   2: 3410030.881 ops/s
Iteration   3: 3489345.509 ops/s
Iteration   4: 3347382.687 ops/s
Iteration   5: 3410581.302 ops/s
Iteration   6: 3447722.165 ops/s
Iteration   7: 3455203.049 ops/s
Iteration   8: 3533504.315 ops/s
Iteration   9: 3444227.558 ops/s
Iteration  10: 3521231.317 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  3271106.277 ?(99.9%) 161757.564 ops/s [Average]
  (min, avg, max) = (3014725.539, 3271106.277, 3533504.315), stdev = 186280.251
  CI (99.9%): [3109348.714, 3432863.841] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: 3202159.824 ops/s
# Warmup Iteration   2: 3366043.862 ops/s
# Warmup Iteration   3: 3411166.784 ops/s
# Warmup Iteration   4: 3326206.028 ops/s
# Warmup Iteration   5: 3279632.250 ops/s
Iteration   1: 3266663.261 ops/s
Iteration   2: 3335034.698 ops/s
Iteration   3: 3356636.205 ops/s
Iteration   4: 3241696.541 ops/s
Iteration   5: 3367849.420 ops/s
Iteration   6: 3202829.103 ops/s
Iteration   7: 3291237.906 ops/s
Iteration   8: 3357056.049 ops/s
Iteration   9: 3332607.508 ops/s
Iteration  10: 3296005.859 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 3181633.039 ops/s
# Warmup Iteration   2: 3273401.842 ops/s
# Warmup Iteration   3: 3308111.069 ops/s
# Warmup Iteration   4: 3304615.081 ops/s
# Warmup Iteration   5: 3230711.164 ops/s
Iteration   1: 3326256.319 ops/s
Iteration   2: 3307729.878 ops/s
Iteration   3: 3082263.515 ops/s
Iteration   4: 3115749.203 ops/s
Iteration   5: 3388586.456 ops/s
Iteration   6: 3248749.079 ops/s
Iteration   7: 3293518.934 ops/s
Iteration   8: 3293839.857 ops/s
Iteration   9: 3349320.821 ops/s
Iteration  10: 3138382.581 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  3279600.660 ?(99.9%) 74617.402 ops/s [Average]
  (min, avg, max) = (3082263.515, 3279600.660, 3388586.456), stdev = 85929.511
  CI (99.9%): [3204983.258, 3354218.062] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt        Score        Error  Units
Deserialization.dsljson              thrpt   20  3541512.973 ? 977919.461  ops/s
Deserialization.dsljson_reflection   thrpt   20  4568786.031 ? 226023.974  ops/s
Deserialization.gson                 thrpt   20  1292388.751 ?  23270.945  ops/s
Deserialization.jackson              thrpt   20  3271106.277 ? 161757.564  ops/s
Deserialization.jackson_afterburner  thrpt   20  3279600.660 ?  74617.402  ops/s
