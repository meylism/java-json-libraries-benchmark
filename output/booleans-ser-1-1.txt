# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1652818.044 ops/s
# Warmup Iteration   2: 1698323.199 ops/s
# Warmup Iteration   3: 1692752.171 ops/s
# Warmup Iteration   4: 1645799.296 ops/s
# Warmup Iteration   5: 1708633.974 ops/s
Iteration   1: 1697524.991 ops/s
Iteration   2: 1693368.254 ops/s
Iteration   3: 1696343.457 ops/s
Iteration   4: 1702177.534 ops/s
Iteration   5: 1695225.872 ops/s
Iteration   6: 1695925.789 ops/s
Iteration   7: 1701127.630 ops/s
Iteration   8: 1695328.118 ops/s
Iteration   9: 1696377.418 ops/s
Iteration  10: 1690866.853 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1723504.890 ops/s
# Warmup Iteration   2: 1744945.814 ops/s
# Warmup Iteration   3: 1747355.826 ops/s
# Warmup Iteration   4: 1751827.840 ops/s
# Warmup Iteration   5: 1757667.969 ops/s
Iteration   1: 1752821.182 ops/s
Iteration   2: 1750889.044 ops/s
Iteration   3: 1736137.123 ops/s
Iteration   4: 1748763.352 ops/s
Iteration   5: 1752072.693 ops/s
Iteration   6: 1743054.900 ops/s
Iteration   7: 1748272.965 ops/s
Iteration   8: 1751471.924 ops/s
Iteration   9: 1747314.558 ops/s
Iteration  10: 1747662.865 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  1722136.326 ±(99.9%) 23185.847 ops/s [Average]
  (min, avg, max) = (1690866.853, 1722136.326, 1752821.182), stdev = 26700.856
  CI (99.9%): [1698950.479, 1745322.173] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1692131.699 ops/s
# Warmup Iteration   2: 1726810.022 ops/s
# Warmup Iteration   3: 1733563.118 ops/s
# Warmup Iteration   4: 1732089.425 ops/s
# Warmup Iteration   5: 1730736.319 ops/s
Iteration   1: 1727881.062 ops/s
Iteration   2: 1731108.417 ops/s
Iteration   3: 1730717.265 ops/s
Iteration   4: 1729240.847 ops/s
Iteration   5: 1727999.852 ops/s
Iteration   6: 1730568.193 ops/s
Iteration   7: 1731103.336 ops/s
Iteration   8: 1731500.510 ops/s
Iteration   9: 1729408.290 ops/s
Iteration  10: 1731901.729 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1898521.549 ops/s
# Warmup Iteration   2: 1926532.582 ops/s
# Warmup Iteration   3: 1936001.968 ops/s
# Warmup Iteration   4: 1935745.896 ops/s
# Warmup Iteration   5: 1936214.004 ops/s
Iteration   1: 1933964.438 ops/s
Iteration   2: 1933743.413 ops/s
Iteration   3: 1933664.217 ops/s
Iteration   4: 1931432.378 ops/s
Iteration   5: 1932331.498 ops/s
Iteration   6: 1932418.812 ops/s
Iteration   7: 1933006.371 ops/s
Iteration   8: 1932901.276 ops/s
Iteration   9: 1933711.251 ops/s
Iteration  10: 1934084.842 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  1831634.400 ±(99.9%) 90425.695 ops/s [Average]
  (min, avg, max) = (1727881.062, 1831634.400, 1934084.842), stdev = 104134.364
  CI (99.9%): [1741208.705, 1922060.095] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
168100.111 ops/s
# Warmup Iteration   2: 178674.962 ops/s
# Warmup Iteration   3: 160722.176 ops/s
# Warmup Iteration   4: 120120.196 ops/s
# Warmup Iteration   5: 120392.196 ops/s
Iteration   1: 117090.796 ops/s
Iteration   2: 118162.269 ops/s
Iteration   3: 123328.857 ops/s
Iteration   4: 120212.315 ops/s
Iteration   5: 116776.006 ops/s
Iteration   6: 117093.649 ops/s
Iteration   7: 116400.222 ops/s
Iteration   8: 122598.587 ops/s
Iteration   9: 116790.378 ops/s
Iteration  10: 120065.517 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
157660.722 ops/s
# Warmup Iteration   2: 166855.801 ops/s
# Warmup Iteration   3: 168185.792 ops/s
# Warmup Iteration   4: 168236.810 ops/s
# Warmup Iteration   5: 136548.587 ops/s
Iteration   1: 135976.871 ops/s
Iteration   2: 135763.340 ops/s
Iteration   3: 135630.002 ops/s
Iteration   4: 134716.269 ops/s
Iteration   5: 135490.309 ops/s
Iteration   6: 133675.206 ops/s
Iteration   7: 133783.506 ops/s
Iteration   8: 133807.471 ops/s
Iteration   9: 136063.956 ops/s
Iteration  10: 133680.024 ops/s


Result "com.meylism.databind.Serialization.gson":
  126855.278 ±(99.9%) 7317.774 ops/s [Average]
  (min, avg, max) = (116400.222, 126855.278, 136063.956), stdev = 8427.160
  CI (99.9%): [119537.503, 134173.052] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
852419.216 ops/s
# Warmup Iteration   2: 893770.368 ops/s
# Warmup Iteration   3: 902529.678 ops/s
# Warmup Iteration   4: 898240.171 ops/s
# Warmup Iteration   5: 895578.232 ops/s
Iteration   1: 906733.976 ops/s
Iteration   2: 893736.139 ops/s
Iteration   3: 900710.990 ops/s
Iteration   4: 901096.486 ops/s
Iteration   5: 900326.220 ops/s
Iteration   6: 883655.117 ops/s
Iteration   7: 898591.996 ops/s
Iteration   8: 899110.764 ops/s
Iteration   9: 902280.439 ops/s
Iteration  10: 893813.753 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
820765.682 ops/s
# Warmup Iteration   2: 868624.937 ops/s
# Warmup Iteration   3: 882882.787 ops/s
# Warmup Iteration   4: 883083.751 ops/s
# Warmup Iteration   5: 880431.687 ops/s
Iteration   1: 879704.856 ops/s
Iteration   2: 884138.242 ops/s
Iteration   3: 879385.866 ops/s
Iteration   4: 884533.831 ops/s
Iteration   5: 880411.815 ops/s
Iteration   6: 879032.180 ops/s
Iteration   7: 881038.416 ops/s
Iteration   8: 865628.609 ops/s
Iteration   9: 880675.822 ops/s
Iteration  10: 878741.902 ops/s


Result "com.meylism.databind.Serialization.jackson":
  888667.371 ±(99.9%) 9654.138 ops/s [Average]
  (min, avg, max) = (865628.609, 888667.371, 906733.976), stdev = 11117.719
  CI (99.9%): [879013.233, 898321.508] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
841605.702 ops/s
# Warmup Iteration   2: 887466.423 ops/s
# Warmup Iteration   3: 870766.326 ops/s
# Warmup Iteration   4: 870272.098 ops/s
# Warmup Iteration   5: 871266.146 ops/s
Iteration   1: 873007.046 ops/s
Iteration   2: 870929.322 ops/s
Iteration   3: 866389.296 ops/s
Iteration   4: 865793.850 ops/s
Iteration   5: 868255.090 ops/s
Iteration   6: 871475.958 ops/s
Iteration   7: 871221.230 ops/s
Iteration   8: 864518.698 ops/s
Iteration   9: 875428.168 ops/s
Iteration  10: 873233.009 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
938220.094 ops/s
# Warmup Iteration   2: 983978.387 ops/s
# Warmup Iteration   3: 995076.215 ops/s
# Warmup Iteration   4: 994483.247 ops/s
# Warmup Iteration   5: 996699.698 ops/s
Iteration   1: 1007408.707 ops/s
Iteration   2: 992809.688 ops/s
Iteration   3: 977036.841 ops/s
Iteration   4: 1002320.254 ops/s
Iteration   5: 996605.568 ops/s
Iteration   6: 981568.753 ops/s
Iteration   7: 998788.968 ops/s
Iteration   8: 1003048.166 ops/s
Iteration   9: 997506.048 ops/s
Iteration  10: 1000878.276 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  932911.147 ±(99.9%) 56361.112 ops/s [Average]
  (min, avg, max) = (864518.698, 932911.147, 1007408.707), stdev = 64905.541
  CI (99.9%): [876550.035, 989272.259] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score       Error  Units
Serialization.dsljson              thrpt   20  1722136.326 ± 23185.847  ops/s
Serialization.dsljson_reflection   thrpt   20  1831634.400 ± 90425.695  ops/s
Serialization.gson                 thrpt   20   126855.278 ±  7317.774  ops/s
Serialization.jackson              thrpt   20   888667.371 ±  9654.138  ops/s
Serialization.jackson_afterburner  thrpt   20   932911.147 ± 56361.112  ops/s
