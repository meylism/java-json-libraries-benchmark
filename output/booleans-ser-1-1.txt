# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1973544.258 ops/s
# Warmup Iteration   2: 2104301.388 ops/s
# Warmup Iteration   3: 2159819.573 ops/s
# Warmup Iteration   4: 2152468.129 ops/s
# Warmup Iteration   5: 2139070.468 ops/s
Iteration   1: 2153861.751 ops/s
Iteration   2: 2156949.560 ops/s
Iteration   3: 2153409.781 ops/s
Iteration   4: 2163900.197 ops/s
Iteration   5: 2152580.222 ops/s
Iteration   6: 2157460.872 ops/s
Iteration   7: 2147483.676 ops/s
Iteration   8: 2159692.220 ops/s
Iteration   9: 2090717.744 ops/s
Iteration  10: 1885063.220 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2042395.980 ops/s
# Warmup Iteration   2: 2140876.203 ops/s
# Warmup Iteration   3: 2205145.390 ops/s
# Warmup Iteration   4: 2202855.560 ops/s
# Warmup Iteration   5: 2197264.416 ops/s
Iteration   1: 2198401.749 ops/s
Iteration   2: 2169940.017 ops/s
Iteration   3: 2194748.296 ops/s
Iteration   4: 2200890.712 ops/s
Iteration   5: 2199166.104 ops/s
Iteration   6: 2202637.474 ops/s
Iteration   7: 2206210.434 ops/s
Iteration   8: 2210240.188 ops/s
Iteration   9: 2197952.482 ops/s
Iteration  10: 2202077.837 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  2160169.227 ?(99.9%) 61849.264 ops/s [Average]
  (min, avg, max) = (1885063.220, 2160169.227, 2210240.188), stdev = 71225.704
  CI (99.9%): [2098319.963, 2222018.490] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2076570.442 ops/s
# Warmup Iteration   2: 2098138.126 ops/s
# Warmup Iteration   3: 2115531.248 ops/s
# Warmup Iteration   4: 2076981.477 ops/s
# Warmup Iteration   5: 2087513.284 ops/s
Iteration   1: 2200251.836 ops/s
Iteration   2: 2208990.943 ops/s
Iteration   3: 2197016.725 ops/s
Iteration   4: 2179167.330 ops/s
Iteration   5: 2192829.954 ops/s
Iteration   6: 2183513.315 ops/s
Iteration   7: 2185782.142 ops/s
Iteration   8: 2188077.347 ops/s
Iteration   9: 2210447.361 ops/s
Iteration  10: 2185314.729 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2012950.671 ops/s
# Warmup Iteration   2: 1886543.378 ops/s
# Warmup Iteration   3: 1983619.781 ops/s
# Warmup Iteration   4: 1994789.390 ops/s
# Warmup Iteration   5: 2063683.339 ops/s
Iteration   1: 2077991.551 ops/s
Iteration   2: 2068165.897 ops/s
Iteration   3: 1943895.566 ops/s
Iteration   4: 2110895.317 ops/s
Iteration   5: 2112898.221 ops/s
Iteration   6: 2136430.800 ops/s
Iteration   7: 2213799.608 ops/s
Iteration   8: 2211982.585 ops/s
Iteration   9: 2197812.331 ops/s
Iteration  10: 2209468.115 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  2160736.584 ?(99.9%) 59276.088 ops/s [Average]
  (min, avg, max) = (1943895.566, 2160736.584, 2213799.608), stdev = 68262.431
  CI (99.9%): [2101460.496, 2220012.671] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 236180.742 ops/s
# Warmup Iteration   2: 256638.057 ops/s
# Warmup Iteration   3: 261975.110 ops/s
# Warmup Iteration   4: 264469.865 ops/s
# Warmup Iteration   5: 264016.546 ops/s
Iteration   1: 264821.322 ops/s
Iteration   2: 265771.681 ops/s
Iteration   3: 265546.862 ops/s
Iteration   4: 239619.487 ops/s
Iteration   5: 246759.650 ops/s
Iteration   6: 258063.495 ops/s
Iteration   7: 258783.811 ops/s
Iteration   8: 253408.065 ops/s
Iteration   9: 262055.993 ops/s
Iteration  10: 262814.188 ops/s

# Run progress: 50.00% complete, ETA 00:04:38
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 243005.714 ops/s
# Warmup Iteration   2: 268958.313 ops/s
# Warmup Iteration   3: 251816.133 ops/s
# Warmup Iteration   4: 268521.489 ops/s
# Warmup Iteration   5: 274844.817 ops/s
Iteration   1: 274919.961 ops/s
Iteration   2: 274432.846 ops/s
Iteration   3: 276245.842 ops/s
Iteration   4: 275487.074 ops/s
Iteration   5: 274988.890 ops/s
Iteration   6: 276048.568 ops/s
Iteration   7: 277028.375 ops/s
Iteration   8: 275957.290 ops/s
Iteration   9: 273764.616 ops/s
Iteration  10: 274610.640 ops/s


Result "com.meylism.databind.Serialization.gson":
  266556.433 ?(99.9%) 9435.997 ops/s [Average]
  (min, avg, max) = (239619.487, 266556.433, 277028.375), stdev = 10866.509
  CI (99.9%): [257120.435, 275992.430] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 750199.370 ops/s
# Warmup Iteration   2: 794324.118 ops/s
# Warmup Iteration   3: 794739.763 ops/s
# Warmup Iteration   4: 737669.890 ops/s
# Warmup Iteration   5: 779478.292 ops/s
Iteration   1: 774465.663 ops/s
Iteration   2: 755839.077 ops/s
Iteration   3: 781751.802 ops/s
Iteration   4: 779297.684 ops/s
Iteration   5: 785096.346 ops/s
Iteration   6: 792677.587 ops/s
Iteration   7: 806559.985 ops/s
Iteration   8: 810008.821 ops/s
Iteration   9: 809327.085 ops/s
Iteration  10: 807768.604 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 704144.707 ops/s
# Warmup Iteration   2: 785412.897 ops/s
# Warmup Iteration   3: 797264.477 ops/s
# Warmup Iteration   4: 782376.814 ops/s
# Warmup Iteration   5: 771737.077 ops/s
Iteration   1: 781680.910 ops/s
Iteration   2: 781185.750 ops/s
Iteration   3: 776603.396 ops/s
Iteration   4: 762860.868 ops/s
Iteration   5: 733690.457 ops/s
Iteration   6: 762812.554 ops/s
Iteration   7: 766936.341 ops/s
Iteration   8: 768395.328 ops/s
Iteration   9: 755069.322 ops/s
Iteration  10: 779826.971 ops/s


Result "com.meylism.databind.Serialization.jackson":
  778592.728 ?(99.9%) 17456.647 ops/s [Average]
  (min, avg, max) = (733690.457, 778592.728, 810008.821), stdev = 20103.101
  CI (99.9%): [761136.080, 796049.375] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
717864.738 ops/s
# Warmup Iteration   2: 770808.647 ops/s
# Warmup Iteration   3: 780808.401 ops/s
# Warmup Iteration   4: 783092.753 ops/s
# Warmup Iteration   5: 772899.281 ops/s
Iteration   1: 735942.217 ops/s
Iteration   2: 730180.670 ops/s
Iteration   3: 754275.267 ops/s
Iteration   4: 764003.458 ops/s
Iteration   5: 780795.613 ops/s
Iteration   6: 787228.650 ops/s
Iteration   7: 781494.481 ops/s
Iteration   8: 785239.426 ops/s
Iteration   9: 780085.736 ops/s
Iteration  10: 786540.914 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
752330.400 ops/s
# Warmup Iteration   2: 800148.186 ops/s
# Warmup Iteration   3: 797469.262 ops/s
# Warmup Iteration   4: 816008.543 ops/s
# Warmup Iteration   5: 818167.625 ops/s
Iteration   1: 814594.567 ops/s
Iteration   2: 764638.320 ops/s
Iteration   3: 757085.934 ops/s
Iteration   4: 764435.194 ops/s
Iteration   5: 731463.854 ops/s
Iteration   6: 761495.870 ops/s
Iteration   7: 803564.454 ops/s
Iteration   8: 790347.414 ops/s
Iteration   9: 806792.134 ops/s
Iteration  10: 810049.826 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  774512.700 ?(99.9%) 21863.976 ops/s [Average]
  (min, avg, max) = (730180.670, 774512.700, 814594.567), stdev = 25178.588
  CI (99.9%): [752648.723, 796376.676] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score       Error  Units
Serialization.dsljson              thrpt   20  2160169.227 ? 61849.264  ops/s
Serialization.dsljson_reflection   thrpt   20  2160736.584 ? 59276.088  ops/s
Serialization.gson                 thrpt   20   266556.433 ?  9435.997  ops/s
Serialization.jackson              thrpt   20   778592.728 ? 17456.647  ops/s
Serialization.jackson_afterburner  thrpt   20   774512.700 ? 21863.976  ops/s
