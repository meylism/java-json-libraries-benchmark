# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 1983109.949 ops/s
# Warmup Iteration   2: 2020414.997 ops/s
# Warmup Iteration   3: 2054803.357 ops/s
# Warmup Iteration   4: 2055033.986 ops/s
# Warmup Iteration   5: 2023333.255 ops/s
Iteration   1: 2063038.931 ops/s
Iteration   2: 2064111.275 ops/s
Iteration   3: 2064227.650 ops/s
Iteration   4: 2073008.309 ops/s
Iteration   5: 2064547.718 ops/s
Iteration   6: 2061467.231 ops/s
Iteration   7: 2024600.814 ops/s
Iteration   8: 2002149.839 ops/s
Iteration   9: 2068743.485 ops/s
Iteration  10: 2061886.664 ops/s

# Run progress: 10.00% complete, ETA 00:08:21
# Fork: 2 of 2
# Warmup Iteration   1: 1985196.796 ops/s
# Warmup Iteration   2: 2052612.673 ops/s
# Warmup Iteration   3: 2015958.701 ops/s
# Warmup Iteration   4: 2057450.119 ops/s
# Warmup Iteration   5: 2069672.454 ops/s
Iteration   1: 2076231.441 ops/s
Iteration   2: 2087428.850 ops/s
Iteration   3: 2091650.237 ops/s
Iteration   4: 2077733.636 ops/s
Iteration   5: 1976086.789 ops/s
Iteration   6: 2063283.703 ops/s
Iteration   7: 2033997.358 ops/s
Iteration   8: 2080311.146 ops/s
Iteration   9: 2085062.154 ops/s
Iteration  10: 2092456.871 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  2060601.205 ?(99.9%) 26022.521 ops/s [Average]
  (min, avg, max) = (1976086.789, 2060601.205, 2092456.871), stdev = 29967.574
  CI (99.9%): [2034578.684, 2086623.726] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:25
# Fork: 1 of 2
# Warmup Iteration   1: 1935398.190 ops/s
# Warmup Iteration   2: 1919727.569 ops/s
# Warmup Iteration   3: 1999108.162 ops/s
# Warmup Iteration   4: 1915668.714 ops/s
# Warmup Iteration   5: 1973445.889 ops/s
Iteration   1: 1938743.865 ops/s
Iteration   2: 1936984.396 ops/s
Iteration   3: 1952843.213 ops/s
Iteration   4: 2005483.637 ops/s
Iteration   5: 2026984.462 ops/s
Iteration   6: 1995006.933 ops/s
Iteration   7: 2019281.944 ops/s
Iteration   8: 1936659.666 ops/s
Iteration   9: 1981735.956 ops/s
Iteration  10: 2003951.562 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 2038414.099 ops/s
# Warmup Iteration   2: 2054098.206 ops/s
# Warmup Iteration   3: 2070079.783 ops/s
# Warmup Iteration   4: 2048118.298 ops/s
# Warmup Iteration   5: 2046999.342 ops/s
Iteration   1: 1960231.097 ops/s
Iteration   2: 2005108.763 ops/s
Iteration   3: 2089179.984 ops/s
Iteration   4: 2078225.904 ops/s
Iteration   5: 2088138.957 ops/s
Iteration   6: 2094125.580 ops/s
Iteration   7: 2073595.247 ops/s
Iteration   8: 2079275.570 ops/s
Iteration   9: 2094637.527 ops/s
Iteration  10: 2084601.168 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  2022239.772 ?(99.9%) 51060.224 ops/s [Average]
  (min, avg, max) = (1936659.666, 2022239.772, 2094637.527), stdev = 58801.030
  CI (99.9%): [1971179.548, 2073299.995] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 186274.417 ops/s
# Warmup Iteration   2: 209793.230 ops/s
# Warmup Iteration   3: 211036.870 ops/s
# Warmup Iteration   4: 212953.268 ops/s
# Warmup Iteration   5: 209222.420 ops/s
Iteration   1: 210789.359 ops/s
Iteration   2: 209373.254 ops/s
Iteration   3: 213191.203 ops/s
Iteration   4: 211233.503 ops/s
Iteration   5: 212400.597 ops/s
Iteration   6: 212441.466 ops/s
Iteration   7: 210922.499 ops/s
Iteration   8: 212111.558 ops/s
Iteration   9: 211955.420 ops/s
Iteration  10: 212810.536 ops/s

# Run progress: 50.00% complete, ETA 00:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 224447.948 ops/s
# Warmup Iteration   2: 239067.315 ops/s
# Warmup Iteration   3: 238791.211 ops/s
# Warmup Iteration   4: 237806.689 ops/s
# Warmup Iteration   5: 234928.810 ops/s
Iteration   1: 240916.134 ops/s
Iteration   2: 221160.449 ops/s
Iteration   3: 166379.417 ops/s
Iteration   4: 171341.342 ops/s
Iteration   5: 175409.035 ops/s
Iteration   6: 171311.232 ops/s
Iteration   7: 171750.454 ops/s
Iteration   8: 167959.970 ops/s
Iteration   9: 172279.417 ops/s
Iteration  10: 173778.578 ops/s


Result "com.meylism.databind.Serialization.gson":
  197475.771 ?(99.9%) 19961.794 ops/s [Average]
  (min, avg, max) = (166379.417, 197475.771, 240916.134), stdev = 22988.032
  CI (99.9%): [177513.977, 217437.565] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:42
# Fork: 1 of 2
# Warmup Iteration   1: 697344.994 ops/s
# Warmup Iteration   2: 743000.448 ops/s
# Warmup Iteration   3: 747529.447 ops/s
# Warmup Iteration   4: 732895.600 ops/s
# Warmup Iteration   5: 724061.103 ops/s
Iteration   1: 749962.005 ops/s
Iteration   2: 749572.895 ops/s
Iteration   3: 752767.434 ops/s
Iteration   4: 738846.568 ops/s
Iteration   5: 727589.565 ops/s
Iteration   6: 747236.961 ops/s
Iteration   7: 746273.704 ops/s
Iteration   8: 725357.538 ops/s
Iteration   9: 738855.174 ops/s
Iteration  10: 744382.005 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 615414.241 ops/s
# Warmup Iteration   2: 656342.355 ops/s
# Warmup Iteration   3: 659464.518 ops/s
# Warmup Iteration   4: 660715.656 ops/s
# Warmup Iteration   5: 651365.805 ops/s
Iteration   1: 654726.489 ops/s
Iteration   2: 649563.877 ops/s
Iteration   3: 645728.099 ops/s
Iteration   4: 649715.416 ops/s
Iteration   5: 643836.971 ops/s
Iteration   6: 640922.665 ops/s
Iteration   7: 647616.694 ops/s
Iteration   8: 666864.217 ops/s
Iteration   9: 653335.272 ops/s
Iteration  10: 633429.306 ops/s


Result "com.meylism.databind.Serialization.jackson":
  695329.143 ?(99.9%) 42367.729 ops/s [Average]
  (min, avg, max) = (633429.306, 695329.143, 752767.434), stdev = 48790.740
  CI (99.9%): [652961.413, 737696.872] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 678071.415 ops/s
# Warmup Iteration   2: 729254.673 ops/s
# Warmup Iteration   3: 736082.948 ops/s
# Warmup Iteration   4: 735148.143 ops/s
# Warmup Iteration   5: 731951.255 ops/s
Iteration   1: 726963.629 ops/s
Iteration   2: 717968.462 ops/s
Iteration   3: 746999.850 ops/s
Iteration   4: 743492.369 ops/s
Iteration   5: 741534.769 ops/s
Iteration   6: 721983.137 ops/s
Iteration   7: 720161.987 ops/s
Iteration   8: 746849.991 ops/s
Iteration   9: 726562.891 ops/s
Iteration  10: 742939.502 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 700057.976 ops/s
# Warmup Iteration   2: 749389.592 ops/s
# Warmup Iteration   3: 746428.237 ops/s
# Warmup Iteration   4: 754612.541 ops/s
# Warmup Iteration   5: 723390.146 ops/s
Iteration   1: 714165.801 ops/s
Iteration   2: 713234.857 ops/s
Iteration   3: 739250.875 ops/s
Iteration   4: 752184.444 ops/s
Iteration   5: 752889.049 ops/s
Iteration   6: 746018.576 ops/s
Iteration   7: 760133.352 ops/s
Iteration   8: 762659.152 ops/s
Iteration   9: 743759.371 ops/s
Iteration  10: 732669.251 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  737621.066 ?(99.9%) 13035.672 ops/s [Average]
  (min, avg, max) = (713234.857, 737621.066, 762659.152), stdev = 15011.899
  CI (99.9%): [724585.394, 750656.738] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt        Score       Error  Units
Serialization.dsljson              thrpt   20  2060601.205 ? 26022.521  ops/s
Serialization.dsljson_reflection   thrpt   20  2022239.772 ? 51060.224  ops/s
Serialization.gson                 thrpt   20   197475.771 ? 19961.794  ops/s
Serialization.jackson              thrpt   20   695329.143 ? 42367.729  ops/s
Serialization.jackson_afterburner  thrpt   20   737621.066 ? 13035.672  ops/s
