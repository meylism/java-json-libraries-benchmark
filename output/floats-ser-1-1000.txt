# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 59.532 ops/s
# Warmup Iteration   2: 60.612 ops/s
# Warmup Iteration   3: 61.246 ops/s
# Warmup Iteration   4: 61.226 ops/s
# Warmup Iteration   5: 60.581 ops/s
Iteration   1: 61.640 ops/s
Iteration   2: 61.234 ops/s
Iteration   3: 60.424 ops/s
Iteration   4: 60.676 ops/s
Iteration   5: 60.587 ops/s
Iteration   6: 59.387 ops/s
Iteration   7: 61.164 ops/s
Iteration   8: 60.845 ops/s
Iteration   9: 59.885 ops/s
Iteration  10: 61.429 ops/s

# Run progress: 10.00% complete, ETA 00:08:37
# Fork: 2 of 2
# Warmup Iteration   1: 59.565 ops/s
# Warmup Iteration   2: 61.743 ops/s
# Warmup Iteration   3: 61.614 ops/s
# Warmup Iteration   4: 60.636 ops/s
# Warmup Iteration   5: 60.442 ops/s
Iteration   1: 61.976 ops/s
Iteration   2: 59.844 ops/s
Iteration   3: 61.232 ops/s
Iteration   4: 61.944 ops/s
Iteration   5: 60.662 ops/s
Iteration   6: 61.185 ops/s
Iteration   7: 62.490 ops/s
Iteration   8: 62.077 ops/s
Iteration   9: 61.492 ops/s
Iteration  10: 62.569 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  61.137 ?(99.9%) 0.752 ops/s [Average]
  (min, avg, max) = (59.387, 61.137, 62.569), stdev = 0.866
  CI (99.9%): [60.385, 61.889] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:39
# Fork: 1 of 2
# Warmup Iteration   1: 58.315 ops/s
# Warmup Iteration   2: 59.250 ops/s
# Warmup Iteration   3: 58.063 ops/s
# Warmup Iteration   4: 58.380 ops/s
# Warmup Iteration   5: 58.459 ops/s
Iteration   1: 58.382 ops/s
Iteration   2: 59.359 ops/s
Iteration   3: 59.658 ops/s
Iteration   4: 59.023 ops/s
Iteration   5: 59.112 ops/s
Iteration   6: 59.667 ops/s
Iteration   7: 58.879 ops/s
Iteration   8: 59.664 ops/s
Iteration   9: 58.212 ops/s
Iteration  10: 58.225 ops/s

# Run progress: 30.00% complete, ETA 00:06:42
# Fork: 2 of 2
# Warmup Iteration   1: 59.569 ops/s
# Warmup Iteration   2: 60.243 ops/s
# Warmup Iteration   3: 59.445 ops/s
# Warmup Iteration   4: 59.506 ops/s
# Warmup Iteration   5: 59.573 ops/s
Iteration   1: 59.428 ops/s
Iteration   2: 60.649 ops/s
Iteration   3: 60.453 ops/s
Iteration   4: 60.725 ops/s
Iteration   5: 59.666 ops/s
Iteration   6: 59.859 ops/s
Iteration   7: 58.171 ops/s
Iteration   8: 58.532 ops/s
Iteration   9: 60.770 ops/s
Iteration  10: 61.357 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  59.490 ?(99.9%) 0.823 ops/s [Average]
  (min, avg, max) = (58.171, 59.490, 61.357), stdev = 0.947
  CI (99.9%): [58.667, 60.312] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:44
# Fork: 1 of 2
# Warmup Iteration   1: 53.310 ops/s
# Warmup Iteration   2: 53.086 ops/s
# Warmup Iteration   3: 54.475 ops/s
# Warmup Iteration   4: 55.878 ops/s
# Warmup Iteration   5: 55.524 ops/s
Iteration   1: 55.862 ops/s
Iteration   2: 55.462 ops/s
Iteration   3: 55.094 ops/s
Iteration   4: 54.963 ops/s
Iteration   5: 55.401 ops/s
Iteration   6: 55.334 ops/s
Iteration   7: 55.316 ops/s
Iteration   8: 54.950 ops/s
Iteration   9: 53.938 ops/s
Iteration  10: 55.357 ops/s

# Run progress: 50.00% complete, ETA 00:04:47
# Fork: 2 of 2
# Warmup Iteration   1: 53.368 ops/s
# Warmup Iteration   2: 55.280 ops/s
# Warmup Iteration   3: 55.267 ops/s
# Warmup Iteration   4: 54.692 ops/s
# Warmup Iteration   5: 54.138 ops/s
Iteration   1: 54.172 ops/s
Iteration   2: 54.369 ops/s
Iteration   3: 54.932 ops/s
Iteration   4: 54.960 ops/s
Iteration   5: 55.338 ops/s
Iteration   6: 55.377 ops/s
Iteration   7: 55.695 ops/s
Iteration   8: 55.447 ops/s
Iteration   9: 55.685 ops/s
Iteration  10: 55.202 ops/s


Result "com.meylism.databind.Serialization.gson":
  55.143 ?(99.9%) 0.433 ops/s [Average]
  (min, avg, max) = (53.938, 55.143, 55.862), stdev = 0.499
  CI (99.9%): [54.710, 55.576] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:49
# Fork: 1 of 2
# Warmup Iteration   1: 55.472 ops/s
# Warmup Iteration   2: 56.825 ops/s
# Warmup Iteration   3: 56.554 ops/s
# Warmup Iteration   4: 56.614 ops/s
# Warmup Iteration   5: 57.061 ops/s
Iteration   1: 57.467 ops/s
Iteration   2: 57.362 ops/s
Iteration   3: 56.152 ops/s
Iteration   4: 57.934 ops/s
Iteration   5: 56.764 ops/s
Iteration   6: 57.096 ops/s
Iteration   7: 57.317 ops/s
Iteration   8: 57.541 ops/s
Iteration   9: 58.032 ops/s
Iteration  10: 56.694 ops/s

# Run progress: 70.00% complete, ETA 00:02:52
# Fork: 2 of 2
# Warmup Iteration   1: 57.910 ops/s
# Warmup Iteration   2: 57.906 ops/s
# Warmup Iteration   3: 59.242 ops/s
# Warmup Iteration   4: 56.775 ops/s
# Warmup Iteration   5: 57.626 ops/s
Iteration   1: 59.232 ops/s
Iteration   2: 58.868 ops/s
Iteration   3: 58.303 ops/s
Iteration   4: 56.930 ops/s
Iteration   5: 58.130 ops/s
Iteration   6: 56.630 ops/s
Iteration   7: 58.810 ops/s
Iteration   8: 57.591 ops/s
Iteration   9: 54.617 ops/s
Iteration  10: 54.129 ops/s


Result "com.meylism.databind.Serialization.jackson":
  57.280 ?(99.9%) 1.111 ops/s [Average]
  (min, avg, max) = (54.129, 57.280, 59.232), stdev = 1.280
  CI (99.9%): [56.169, 58.391] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:54
# Fork: 1 of 2
# Warmup Iteration   1: 49.519 ops/s
# Warmup Iteration   2: 51.548 ops/s
# Warmup Iteration   3: 52.749 ops/s
# Warmup Iteration   4: 53.209 ops/s
# Warmup Iteration   5: 50.816 ops/s
Iteration   1: 51.971 ops/s
Iteration   2: 51.204 ops/s
Iteration   3: 51.751 ops/s
Iteration   4: 52.102 ops/s
Iteration   5: 49.671 ops/s
Iteration   6: 53.163 ops/s
Iteration   7: 51.233 ops/s
Iteration   8: 55.021 ops/s
Iteration   9: 54.767 ops/s
Iteration  10: 56.018 ops/s

# Run progress: 90.00% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 56.742 ops/s
# Warmup Iteration   2: 57.842 ops/s
# Warmup Iteration   3: 57.257 ops/s
# Warmup Iteration   4: 57.978 ops/s
# Warmup Iteration   5: 58.557 ops/s
Iteration   1: 58.798 ops/s
Iteration   2: 57.655 ops/s
Iteration   3: 57.630 ops/s
Iteration   4: 58.683 ops/s
Iteration   5: 58.643 ops/s
Iteration   6: 58.567 ops/s
Iteration   7: 58.547 ops/s
Iteration   8: 57.976 ops/s
Iteration   9: 58.230 ops/s
Iteration  10: 58.507 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  55.507 ?(99.9%) 2.793 ops/s [Average]
  (min, avg, max) = (49.671, 55.507, 58.798), stdev = 3.217
  CI (99.9%): [52.714, 58.300] (assumes normal distribution)


# Run complete. Total time: 00:09:35

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt   Score   Error  Units
Serialization.dsljson              thrpt   20  61.137 ? 0.752  ops/s
Serialization.dsljson_reflection   thrpt   20  59.490 ? 0.823  ops/s
Serialization.gson                 thrpt   20  55.143 ? 0.433  ops/s
Serialization.jackson              thrpt   20  57.280 ? 1.111  ops/s
Serialization.jackson_afterburner  thrpt   20  55.507 ? 2.793  ops/s
