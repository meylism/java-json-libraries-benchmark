# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4068.958 ops/s
# Warmup Iteration   2: 3170.414 ops/s
# Warmup Iteration   3: 3262.989 ops/s
# Warmup Iteration   4: 3202.842 ops/s
# Warmup Iteration   5: 3242.429 ops/s
Iteration   1: 3260.590 ops/s
Iteration   2: 3311.991 ops/s
Iteration   3: 3225.375 ops/s
Iteration   4: 3098.349 ops/s
Iteration   5: 3179.327 ops/s
Iteration   6: 3176.335 ops/s
Iteration   7: 3202.467 ops/s
Iteration   8: 3201.943 ops/s
Iteration   9: 3250.746 ops/s
Iteration  10: 3186.083 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
3199.761 ops/s
# Warmup Iteration   2: 3470.858 ops/s
# Warmup Iteration   3: 3406.843 ops/s
# Warmup Iteration   4: 3443.201 ops/s
# Warmup Iteration   5: 3549.953 ops/s
Iteration   1: 3485.882 ops/s
Iteration   2: 3455.566 ops/s
Iteration   3: 3413.846 ops/s
Iteration   4: 3506.890 ops/s
Iteration   5: 3494.589 ops/s
Iteration   6: 3496.813 ops/s
Iteration   7: 3397.807 ops/s
Iteration   8: 3465.847 ops/s
Iteration   9: 3443.203 ops/s
Iteration  10: 3436.415 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  3334.503 ±(99.9%) 118.831 ops/s [Average]
  (min, avg, max) = (3098.349, 3334.503, 3506.890), stdev = 136.846
  CI (99.9%): [3215.672, 3453.334] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
3267.832 ops/s
# Warmup Iteration   2: 4767.324 ops/s
# Warmup Iteration   3: 4831.621 ops/s
# Warmup Iteration   4: 4845.230 ops/s
# Warmup Iteration   5: 4843.898 ops/s
Iteration   1: 4840.405 ops/s
Iteration   2: 4822.828 ops/s
Iteration   3: 4832.926 ops/s
Iteration   4: 4835.244 ops/s
Iteration   5: 4839.691 ops/s
Iteration   6: 4835.797 ops/s
Iteration   7: 4839.412 ops/s
Iteration   8: 4842.570 ops/s
Iteration   9: 4836.445 ops/s
Iteration  10: 4843.763 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
3527.819 ops/s
# Warmup Iteration   2: 3724.425 ops/s
# Warmup Iteration   3: 3778.284 ops/s
# Warmup Iteration   4: 3746.899 ops/s
# Warmup Iteration   5: 3768.949 ops/s
Iteration   1: 3675.696 ops/s
Iteration   2: 3745.957 ops/s
Iteration   3: 3844.699 ops/s
Iteration   4: 3839.090 ops/s
Iteration   5: 3701.213 ops/s
Iteration   6: 3840.342 ops/s
Iteration   7: 3838.386 ops/s
Iteration   8: 3660.424 ops/s
Iteration   9: 3685.122 ops/s
Iteration  10: 3733.789 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  4296.690 ±(99.9%) 483.476 ops/s [Average]
  (min, avg, max) = (3660.424, 4296.690, 4843.763), stdev = 556.772
  CI (99.9%): [3813.213, 4780.166] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2078.944 ops/s
# Warmup Iteration   2: 2166.998 ops/s
# Warmup Iteration   3: 2169.356 ops/s
# Warmup Iteration   4: 2169.537 ops/s
# Warmup Iteration   5: 2167.125 ops/s
Iteration   1: 2142.442 ops/s
Iteration   2: 2173.964 ops/s
Iteration   3: 2171.932 ops/s
Iteration   4: 2168.084 ops/s
Iteration   5: 2171.528 ops/s
Iteration   6: 2172.076 ops/s
Iteration   7: 2171.233 ops/s
Iteration   8: 2171.470 ops/s
Iteration   9: 2171.596 ops/s
Iteration  10: 2172.254 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2123.301 ops/s
# Warmup Iteration   2: 2210.902 ops/s
# Warmup Iteration   3: 2207.273 ops/s
# Warmup Iteration   4: 2213.450 ops/s
# Warmup Iteration   5: 2206.892 ops/s
Iteration   1: 2187.355 ops/s
Iteration   2: 2212.142 ops/s
Iteration   3: 2218.676 ops/s
Iteration   4: 2216.435 ops/s
Iteration   5: 2210.747 ops/s
Iteration   6: 2213.894 ops/s
Iteration   7: 2218.802 ops/s
Iteration   8: 2217.735 ops/s
Iteration   9: 2216.444 ops/s
Iteration  10: 2213.153 ops/s


Result "com.meylism.databind.Deserialization.gson":
  2190.598 ±(99.9%) 21.068 ops/s [Average]
  (min, avg, max) = (2142.442, 2190.598, 2218.802), stdev = 24.262
  CI (99.9%): [2169.530, 2211.666] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4004.113 ops/s
# Warmup Iteration   2: 4214.390 ops/s
# Warmup Iteration   3: 4204.700 ops/s
# Warmup Iteration   4: 4220.538 ops/s
# Warmup Iteration   5: 4217.098 ops/s
Iteration   1: 4218.355 ops/s
Iteration   2: 4219.374 ops/s
Iteration   3: 4212.748 ops/s
Iteration   4: 4210.164 ops/s
Iteration   5: 4218.952 ops/s
Iteration   6: 4215.161 ops/s
Iteration   7: 4206.901 ops/s
Iteration   8: 4216.276 ops/s
Iteration   9: 4210.595 ops/s
Iteration  10: 4217.151 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
3928.582 ops/s
# Warmup Iteration   2: 4111.656 ops/s
# Warmup Iteration   3: 4131.560 ops/s
# Warmup Iteration   4: 4134.881 ops/s
# Warmup Iteration   5: 4138.538 ops/s
Iteration   1: 4128.358 ops/s
Iteration   2: 4136.612 ops/s
Iteration   3: 4131.542 ops/s
Iteration   4: 4139.153 ops/s
Iteration   5: 4138.118 ops/s
Iteration   6: 4136.426 ops/s
Iteration   7: 4136.236 ops/s
Iteration   8: 4032.999 ops/s
Iteration   9: 4127.962 ops/s
Iteration  10: 4136.184 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  4169.463 ±(99.9%) 44.663 ops/s [Average]
  (min, avg, max) = (4032.999, 4169.463, 4219.374), stdev = 51.434
  CI (99.9%): [4124.800, 4214.127] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
3969.177 ops/s
# Warmup Iteration   2: 4205.848 ops/s
# Warmup Iteration   3: 4215.094 ops/s
# Warmup Iteration   4: 4213.796 ops/s
# Warmup Iteration   5: 4206.984 ops/s
Iteration   1: 4219.911 ops/s
Iteration   2: 4219.249 ops/s
Iteration   3: 4223.376 ops/s
Iteration   4: 4213.347 ops/s
Iteration   5: 4217.982 ops/s
Iteration   6: 4208.169 ops/s
Iteration   7: 4218.899 ops/s
Iteration   8: 4216.753 ops/s
Iteration   9: 4212.564 ops/s
Iteration  10: 4219.158 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4085.539 ops/s
# Warmup Iteration   2: 4277.454 ops/s
# Warmup Iteration   3: 4283.713 ops/s
# Warmup Iteration   4: 4286.232 ops/s
# Warmup Iteration   5: 4288.955 ops/s
Iteration   1: 4287.541 ops/s
Iteration   2: 4286.741 ops/s
Iteration   3: 4284.870 ops/s
Iteration   4: 4271.944 ops/s
Iteration   5: 4287.462 ops/s
Iteration   6: 4285.073 ops/s
Iteration   7: 4292.458 ops/s
Iteration   8: 4289.854 ops/s
Iteration   9: 4285.733 ops/s
Iteration  10: 4287.989 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  4251.454 ±(99.9%) 31.031 ops/s [Average]
  (min, avg, max) = (4208.169, 4251.454, 4292.458), stdev = 35.735
  CI (99.9%): [4220.423, 4282.484] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt     Score     Error  Units
Deserialization.dsljson              thrpt   20  3334.503 ± 118.831  ops/s
Deserialization.dsljson_reflection   thrpt   20  4296.690 ± 483.476  ops/s
Deserialization.gson                 thrpt   20  2190.598 ±  21.068  ops/s
Deserialization.jackson              thrpt   20  4169.463 ±  44.663  ops/s
Deserialization.jackson_afterburner  thrpt   20  4251.454 ±  31.031  ops/s
