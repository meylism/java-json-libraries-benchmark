# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 20.222 ops/s
# Warmup Iteration   2: 20.348 ops/s
# Warmup Iteration   3: 18.584 ops/s
# Warmup Iteration   4: 19.338 ops/s
# Warmup Iteration   5: 20.510 ops/s
Iteration   1: 17.651 ops/s
Iteration   2: 17.751 ops/s
Iteration   3: 18.832 ops/s
Iteration   4: 17.527 ops/s
Iteration   5: 19.706 ops/s
Iteration   6: 19.856 ops/s
Iteration   7: 19.587 ops/s
Iteration   8: 16.802 ops/s
Iteration   9: 17.383 ops/s
Iteration  10: 19.772 ops/s

# Run progress: 10.00% complete, ETA 00:15:35
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 18.309 ops/s
# Warmup Iteration   2: 18.299 ops/s
# Warmup Iteration   3: 18.694 ops/s
# Warmup Iteration   4: 19.812 ops/s
# Warmup Iteration   5: 19.863 ops/s
Iteration   1: 20.045 ops/s
Iteration   2: 21.106 ops/s
Iteration   3: 18.313 ops/s
Iteration   4: 19.270 ops/s
Iteration   5: 17.154 ops/s
Iteration   6: 18.516 ops/s
Iteration   7: 19.465 ops/s
Iteration   8: 19.338 ops/s
Iteration   9: 18.630 ops/s
Iteration  10: 18.306 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  18.750 ?(99.9%) 0.988 ops/s [Average]
  (min, avg, max) = (16.802, 18.750, 21.106), stdev = 1.138
  CI (99.9%): [17.762, 19.739] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:13:49
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 19.556 ops/s
# Warmup Iteration   2: 20.137 ops/s
# Warmup Iteration   3: 20.514 ops/s
# Warmup Iteration   4: 20.787 ops/s
# Warmup Iteration   5: 20.264 ops/s
Iteration   1: 21.230 ops/s
Iteration   2: 19.732 ops/s
Iteration   3: 18.414 ops/s
Iteration   4: 20.294 ops/s
Iteration   5: 19.888 ops/s
Iteration   6: 18.196 ops/s
Iteration   7: 19.144 ops/s
Iteration   8: 18.986 ops/s
Iteration   9: 18.537 ops/s
Iteration  10: 19.264 ops/s

# Run progress: 30.00% complete, ETA 00:12:03
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 19.258 ops/s
# Warmup Iteration   2: 18.738 ops/s
# Warmup Iteration   3: 19.471 ops/s
# Warmup Iteration   4: 20.922 ops/s
# Warmup Iteration   5: 20.710 ops/s
Iteration   1: 19.459 ops/s
Iteration   2: 21.229 ops/s
Iteration   3: 21.365 ops/s
Iteration   4: 20.652 ops/s
Iteration   5: 21.958 ops/s
Iteration   6: 21.579 ops/s
Iteration   7: 21.309 ops/s
Iteration   8: 20.547 ops/s
Iteration   9: 20.165 ops/s
Iteration  10: 21.183 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  20.157 ?(99.9%) 1.001 ops/s [Average]
  (min, avg, max) = (18.196, 20.157, 21.958), stdev = 1.153
  CI (99.9%): [19.155, 21.158] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:10:18
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.663 ops/s
# Warmup Iteration   2: 5.690 ops/s
# Warmup Iteration   3: 5.506 ops/s
# Warmup Iteration   4: 5.724 ops/s
# Warmup Iteration   5: 5.521 ops/s
Iteration   1: 5.729 ops/s
Iteration   2: 5.574 ops/s
Iteration   3: 5.197 ops/s
Iteration   4: 5.747 ops/s
Iteration   5: 5.428 ops/s
Iteration   6: 5.205 ops/s
Iteration   7: 5.323 ops/s
Iteration   8: 5.711 ops/s
Iteration   9: 5.617 ops/s
Iteration  10: 5.726 ops/s

# Run progress: 50.00% complete, ETA 00:09:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.614 ops/s
# Warmup Iteration   2: 5.586 ops/s
# Warmup Iteration   3: 5.588 ops/s
# Warmup Iteration   4: 5.628 ops/s
# Warmup Iteration   5: 5.926 ops/s
Iteration   1: 6.034 ops/s
Iteration   2: 5.779 ops/s
Iteration   3: 5.305 ops/s
Iteration   4: 5.664 ops/s
Iteration   5: 5.070 ops/s
Iteration   6: 5.898 ops/s
Iteration   7: 5.825 ops/s
Iteration   8: 5.558 ops/s
Iteration   9: 5.496 ops/s
Iteration  10: 5.459 ops/s


Result "com.meylism.databind.Deserialization.gson":
  5.567 ?(99.9%) 0.221 ops/s [Average]
  (min, avg, max) = (5.070, 5.567, 6.034), stdev = 0.255
  CI (99.9%): [5.346, 5.789] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:08:05
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.589 ops/s
# Warmup Iteration   2: 5.492 ops/s
# Warmup Iteration   3: 5.585 ops/s
# Warmup Iteration   4: 5.522 ops/s
# Warmup Iteration   5: 5.635 ops/s
Iteration   1: 5.494 ops/s
Iteration   2: 5.908 ops/s
Iteration   3: 6.150 ops/s
Iteration   4: 6.082 ops/s
Iteration   5: 6.074 ops/s
Iteration   6: 5.869 ops/s
Iteration   7: 5.347 ops/s
Iteration   8: 5.522 ops/s
Iteration   9: 5.801 ops/s
Iteration  10: 6.314 ops/s

# Run progress: 70.00% complete, ETA 00:06:18
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.944 ops/s
# Warmup Iteration   2: 6.029 ops/s
# Warmup Iteration   3: 5.459 ops/s
# Warmup Iteration   4: 5.696 ops/s
# Warmup Iteration   5: 5.728 ops/s
Iteration   1: 5.646 ops/s
Iteration   2: 5.534 ops/s
Iteration   3: 5.984 ops/s
Iteration   4: 5.874 ops/s
Iteration   5: 5.845 ops/s
Iteration   6: 6.085 ops/s
Iteration   7: 6.042 ops/s
Iteration   8: 6.157 ops/s
Iteration   9: 5.577 ops/s
Iteration  10: 5.774 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  5.854 ?(99.9%) 0.230 ops/s [Average]
  (min, avg, max) = (5.347, 5.854, 6.314), stdev = 0.264
  CI (99.9%): [5.624, 6.083] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:04:18
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.324 ops/s
# Warmup Iteration   2: 5.842 ops/s
# Warmup Iteration   3: 5.773 ops/s
# Warmup Iteration   4: 5.579 ops/s
# Warmup Iteration   5: 5.513 ops/s
Iteration   1: 5.807 ops/s
Iteration   2: 5.694 ops/s
Iteration   3: 6.042 ops/s
Iteration   4: 6.100 ops/s
Iteration   5: 6.053 ops/s
Iteration   6: 5.824 ops/s
Iteration   7: 5.967 ops/s
Iteration   8: 5.893 ops/s
Iteration   9: 5.776 ops/s
Iteration  10: 5.658 ops/s

# Run progress: 90.00% complete, ETA 00:02:12
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.480 ops/s
# Warmup Iteration   2: 5.388 ops/s
# Warmup Iteration   3: 5.494 ops/s
# Warmup Iteration   4: 5.530 ops/s
# Warmup Iteration   5: 5.906 ops/s
Iteration   1: 5.974 ops/s
Iteration   2: 5.870 ops/s
Iteration   3: 5.705 ops/s
Iteration   4: 5.815 ops/s
Iteration   5: 5.882 ops/s
Iteration   6: 5.883 ops/s
Iteration   7: 5.718 ops/s
Iteration   8: 5.591 ops/s
Iteration   9: 6.057 ops/s
Iteration  10: 5.996 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  5.865 ?(99.9%) 0.127 ops/s [Average]
  (min, avg, max) = (5.591, 5.865, 6.100), stdev = 0.147
  CI (99.9%): [5.738, 5.993] (assumes normal distribution)


# Run complete. Total time: 00:22:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt   Score   Error  Units
Deserialization.dsljson              thrpt   20  18.750 ? 0.988  ops/s
Deserialization.dsljson_reflection   thrpt   20  20.157 ? 1.001  ops/s
Deserialization.gson                 thrpt   20   5.567 ? 0.221  ops/s
Deserialization.jackson              thrpt   20   5.854 ? 0.230  ops/s
Deserialization.jackson_afterburner  thrpt   20   5.865 ? 0.127  ops/s
