# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 18.530 ops/s
# Warmup Iteration   2: 18.231 ops/s
# Warmup Iteration   3: 18.539 ops/s
# Warmup Iteration   4: 17.741 ops/s
# Warmup Iteration   5: 18.883 ops/s
Iteration   1: 18.061 ops/s
Iteration   2: 18.953 ops/s
Iteration   3: 19.555 ops/s
Iteration   4: 20.757 ops/s
Iteration   5: 20.657 ops/s
Iteration   6: 19.684 ops/s
Iteration   7: 19.065 ops/s
Iteration   8: 20.157 ops/s
Iteration   9: 20.912 ops/s
Iteration  10: 19.081 ops/s

# Run progress: 10.00% complete, ETA 00:09:23
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 18.919 ops/s
# Warmup Iteration   2: 18.842 ops/s
# Warmup Iteration   3: 18.229 ops/s
# Warmup Iteration   4: 18.627 ops/s
# Warmup Iteration   5: 17.903 ops/s
Iteration   1: 17.917 ops/s
Iteration   2: 20.075 ops/s
Iteration   3: 20.055 ops/s
Iteration   4: 18.732 ops/s
Iteration   5: 18.271 ops/s
Iteration   6: 19.045 ops/s
Iteration   7: 19.672 ops/s
Iteration   8: 18.082 ops/s
Iteration   9: 18.433 ops/s
Iteration  10: 18.908 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  19.304 ?(99.9%) 0.805 ops/s [Average]
  (min, avg, max) = (17.917, 19.304, 20.912), stdev = 0.927
  CI (99.9%): [18.499, 20.109] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:08:24
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 18.675 ops/s
# Warmup Iteration   2: 18.053 ops/s
# Warmup Iteration   3: 17.206 ops/s
# Warmup Iteration   4: 18.793 ops/s
# Warmup Iteration   5: 18.416 ops/s
Iteration   1: 18.546 ops/s
Iteration   2: 18.242 ops/s
Iteration   3: 20.490 ops/s
Iteration   4: 20.160 ops/s
Iteration   5: 19.094 ops/s
Iteration   6: 18.540 ops/s
Iteration   7: 20.489 ops/s
Iteration   8: 20.607 ops/s
Iteration   9: 18.774 ops/s
Iteration  10: 19.178 ops/s

# Run progress: 30.00% complete, ETA 00:07:20
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 18.724 ops/s
# Warmup Iteration   2: 18.465 ops/s
# Warmup Iteration   3: 16.813 ops/s
# Warmup Iteration   4: 18.918 ops/s
# Warmup Iteration   5: 18.913 ops/s
Iteration   1: 18.602 ops/s
Iteration   2: 18.639 ops/s
Iteration   3: 18.945 ops/s
Iteration   4: 19.950 ops/s
Iteration   5: 20.142 ops/s
Iteration   6: 19.184 ops/s
Iteration   7: 18.732 ops/s
Iteration   8: 19.845 ops/s
Iteration   9: 19.633 ops/s
Iteration  10: 17.307 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  19.255 ?(99.9%) 0.765 ops/s [Average]
  (min, avg, max) = (17.307, 19.255, 20.607), stdev = 0.881
  CI (99.9%): [18.490, 20.020] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:06:19
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.143 ops/s
# Warmup Iteration   2: 4.907 ops/s
# Warmup Iteration   3: 5.257 ops/s
# Warmup Iteration   4: 5.193 ops/s
# Warmup Iteration   5: 5.192 ops/s
Iteration   1: 5.275 ops/s
Iteration   2: 5.112 ops/s
Iteration   3: 5.174 ops/s
Iteration   4: 5.311 ops/s
Iteration   5: 4.966 ops/s
Iteration   6: 4.970 ops/s
Iteration   7: 5.084 ops/s
Iteration   8: 5.274 ops/s
Iteration   9: 5.043 ops/s
Iteration  10: 5.387 ops/s

# Run progress: 50.00% complete, ETA 00:05:26
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 4.637 ops/s
# Warmup Iteration   2: 5.226 ops/s
# Warmup Iteration   3: 5.258 ops/s
# Warmup Iteration   4: 5.315 ops/s
# Warmup Iteration   5: 5.281 ops/s
Iteration   1: 5.498 ops/s
Iteration   2: 5.256 ops/s
Iteration   3: 5.704 ops/s
Iteration   4: 5.390 ops/s
Iteration   5: 5.444 ops/s
Iteration   6: 5.255 ops/s
Iteration   7: 4.838 ops/s
Iteration   8: 5.533 ops/s
Iteration   9: 5.498 ops/s
Iteration  10: 5.419 ops/s


Result "com.meylism.databind.Deserialization.gson":
  5.272 ?(99.9%) 0.192 ops/s [Average]
  (min, avg, max) = (4.838, 5.272, 5.704), stdev = 0.222
  CI (99.9%): [5.079, 5.464] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:04:25
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.162 ops/s
# Warmup Iteration   2: 5.419 ops/s
# Warmup Iteration   3: 5.686 ops/s
# Warmup Iteration   4: 5.714 ops/s
# Warmup Iteration   5: 5.574 ops/s
Iteration   1: 5.369 ops/s
Iteration   2: 5.520 ops/s
Iteration   3: 5.463 ops/s
Iteration   4: 5.583 ops/s
Iteration   5: 5.751 ops/s
Iteration   6: 5.718 ops/s
Iteration   7: 5.932 ops/s
Iteration   8: 5.755 ops/s
Iteration   9: 5.768 ops/s
Iteration  10: 5.923 ops/s

# Run progress: 70.00% complete, ETA 00:03:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 5.429 ops/s
# Warmup Iteration   2: 5.535 ops/s
# Warmup Iteration   3: 5.696 ops/s
# Warmup Iteration   4: 5.862 ops/s
# Warmup Iteration   5: 5.756 ops/s
Iteration   1: 5.225 ops/s
Iteration   2: 5.271 ops/s
Iteration   3: 5.729 ops/s
Iteration   4: 5.527 ops/s
Iteration   5: 5.217 ops/s
Iteration   6: 5.693 ops/s
Iteration   7: 5.658 ops/s
Iteration   8: 5.568 ops/s
Iteration   9: 5.555 ops/s
Iteration  10: 5.392 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  5.581 ?(99.9%) 0.184 ops/s [Average]
  (min, avg, max) = (5.217, 5.581, 5.932), stdev = 0.212
  CI (99.9%): [5.397, 5.765] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:15
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.400 ops/s
# Warmup Iteration   2: 5.420 ops/s
# Warmup Iteration   3: 5.547 ops/s
# Warmup Iteration   4: 5.416 ops/s
# Warmup Iteration   5: 5.589 ops/s
Iteration   1: 5.689 ops/s
Iteration   2: 5.591 ops/s
Iteration   3: 5.748 ops/s
Iteration   4: 5.778 ops/s
Iteration   5: 5.679 ops/s
Iteration   6: 5.558 ops/s
Iteration   7: 5.923 ops/s
Iteration   8: 5.850 ops/s
Iteration   9: 5.896 ops/s
Iteration  10: 5.543 ops/s

# Run progress: 90.00% complete, ETA 00:01:08
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5.401 ops/s
# Warmup Iteration   2: 5.264 ops/s
# Warmup Iteration   3: 5.740 ops/s
# Warmup Iteration   4: 5.346 ops/s
# Warmup Iteration   5: 5.751 ops/s
Iteration   1: 5.880 ops/s
Iteration   2: 5.463 ops/s
Iteration   3: 5.876 ops/s
Iteration   4: 5.812 ops/s
Iteration   5: 5.851 ops/s
Iteration   6: 5.914 ops/s
Iteration   7: 6.056 ops/s
Iteration   8: 5.998 ops/s
Iteration   9: 5.822 ops/s
Iteration  10: 5.296 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  5.761 ?(99.9%) 0.166 ops/s [Average]
  (min, avg, max) = (5.296, 5.761, 6.056), stdev = 0.191
  CI (99.9%): [5.595, 5.927] (assumes normal distribution)


# Run complete. Total time: 00:11:24

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt   Score   Error  Units
Deserialization.dsljson              thrpt   20  19.304 ? 0.805  ops/s
Deserialization.dsljson_reflection   thrpt   20  19.255 ? 0.765  ops/s
Deserialization.gson                 thrpt   20   5.272 ? 0.192  ops/s
Deserialization.jackson              thrpt   20   5.581 ? 0.184  ops/s
Deserialization.jackson_afterburner  thrpt   20   5.761 ? 0.166  ops/s
