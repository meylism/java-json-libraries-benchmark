# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 256.353 ops/s
# Warmup Iteration   2: 285.319 ops/s
# Warmup Iteration   3: 274.490 ops/s
# Warmup Iteration   4: 270.035 ops/s
# Warmup Iteration   5: 270.187 ops/s
Iteration   1: 281.943 ops/s
Iteration   2: 273.564 ops/s
Iteration   3: 272.699 ops/s
Iteration   4: 265.063 ops/s
Iteration   5: 278.110 ops/s
Iteration   6: 282.995 ops/s
Iteration   7: 278.627 ops/s
Iteration   8: 267.379 ops/s
Iteration   9: 271.346 ops/s
Iteration  10: 274.284 ops/s

# Run progress: 10.00% complete, ETA 00:12:41
# Fork: 2 of 2
# Warmup Iteration   1: 238.916 ops/s
# Warmup Iteration   2: 265.825 ops/s
# Warmup Iteration   3: 269.873 ops/s
# Warmup Iteration   4: 279.410 ops/s
# Warmup Iteration   5: 269.680 ops/s
Iteration   1: 267.899 ops/s
Iteration   2: 276.158 ops/s
Iteration   3: 272.010 ops/s
Iteration   4: 277.300 ops/s
Iteration   5: 272.318 ops/s
Iteration   6: 269.544 ops/s
Iteration   7: 262.994 ops/s
Iteration   8: 245.838 ops/s
Iteration   9: 265.940 ops/s
Iteration  10: 273.256 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  271.463 ?(99.9%) 7.031 ops/s [Average]
  (min, avg, max) = (245.838, 271.463, 282.995), stdev = 8.096
  CI (99.9%): [264.433, 278.494] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:15
# Fork: 1 of 2
# Warmup Iteration   1: 249.778 ops/s
# Warmup Iteration   2: 281.854 ops/s
# Warmup Iteration   3: 280.826 ops/s
# Warmup Iteration   4: 277.521 ops/s
# Warmup Iteration   5: 279.523 ops/s
Iteration   1: 278.026 ops/s
Iteration   2: 279.100 ops/s
Iteration   3: 275.386 ops/s
Iteration   4: 280.631 ops/s
Iteration   5: 285.345 ops/s
Iteration   6: 276.193 ops/s
Iteration   7: 266.780 ops/s
Iteration   8: 277.966 ops/s
Iteration   9: 286.660 ops/s
Iteration  10: 261.755 ops/s

# Run progress: 30.00% complete, ETA 00:09:50
# Fork: 2 of 2
# Warmup Iteration   1: 196.971 ops/s
# Warmup Iteration   2: 270.962 ops/s
# Warmup Iteration   3: 271.923 ops/s
# Warmup Iteration   4: 272.637 ops/s
# Warmup Iteration   5: 271.565 ops/s
Iteration   1: 265.862 ops/s
Iteration   2: 272.031 ops/s
Iteration   3: 263.074 ops/s
Iteration   4: 253.041 ops/s
Iteration   5: 267.898 ops/s
Iteration   6: 246.104 ops/s
Iteration   7: 266.238 ops/s
Iteration   8: 255.309 ops/s
Iteration   9: 277.127 ops/s
Iteration  10: 273.154 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  270.384 ?(99.9%) 9.349 ops/s [Average]
  (min, avg, max) = (246.104, 270.384, 286.660), stdev = 10.767
  CI (99.9%): [261.035, 279.733] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:25
# Fork: 1 of 2
# Warmup Iteration   1: 19.537 ops/s
# Warmup Iteration   2: 18.524 ops/s
# Warmup Iteration   3: 23.224 ops/s
# Warmup Iteration   4: 20.850 ops/s
# Warmup Iteration   5: 23.404 ops/s
Iteration   1: 25.679 ops/s
Iteration   2: 17.637 ops/s
Iteration   3: 27.472 ops/s
Iteration   4: 27.315 ops/s
Iteration   5: 7.559 ops/s
Iteration   6: 27.920 ops/s
Iteration   7: 27.240 ops/s
Iteration   8: 16.759 ops/s
Iteration   9: 26.534 ops/s
Iteration  10: 26.077 ops/s

# Run progress: 50.00% complete, ETA 00:07:17
# Fork: 2 of 2
# Warmup Iteration   1: 20.067 ops/s
# Warmup Iteration   2: 21.133 ops/s
# Warmup Iteration   3: 23.350 ops/s
# Warmup Iteration   4: 23.988 ops/s
# Warmup Iteration   5: 22.944 ops/s
Iteration   1: 16.282 ops/s
Iteration   2: 26.609 ops/s
Iteration   3: 24.522 ops/s
Iteration   4: 11.354 ops/s
Iteration   5: 27.460 ops/s
Iteration   6: 27.792 ops/s
Iteration   7: 10.249 ops/s
Iteration   8: 27.047 ops/s
Iteration   9: 25.389 ops/s
Iteration  10: 17.878 ops/s


Result "com.meylism.databind.Deserialization.gson":
  22.239 ?(99.9%) 5.823 ops/s [Average]
  (min, avg, max) = (7.559, 22.239, 27.920), stdev = 6.706
  CI (99.9%): [16.416, 28.062] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:59
# Fork: 1 of 2
# Warmup Iteration   1: 21.675 ops/s
# Warmup Iteration   2: 20.427 ops/s
# Warmup Iteration   3: 23.334 ops/s
# Warmup Iteration   4: 22.637 ops/s
# Warmup Iteration   5: 25.404 ops/s
Iteration   1: 28.438 ops/s
Iteration   2: 12.361 ops/s
Iteration   3: 29.710 ops/s
Iteration   4: 27.127 ops/s
Iteration   5: 26.697 ops/s
Iteration   6: 29.104 ops/s
Iteration   7: 27.731 ops/s
Iteration   8: 28.703 ops/s
Iteration   9: 25.728 ops/s
Iteration  10: 19.608 ops/s

# Run progress: 70.00% complete, ETA 00:04:34
# Fork: 2 of 2
# Warmup Iteration   1: 20.084 ops/s
# Warmup Iteration   2: 21.905 ops/s
# Warmup Iteration   3: 24.040 ops/s
# Warmup Iteration   4: 25.729 ops/s
# Warmup Iteration   5: 24.200 ops/s
Iteration   1: 17.092 ops/s
Iteration   2: 28.959 ops/s
Iteration   3: 28.426 ops/s
Iteration   4: 30.129 ops/s
Iteration   5: 26.651 ops/s
Iteration   6: 28.638 ops/s
Iteration   7: 28.769 ops/s
Iteration   8: 27.125 ops/s
Iteration   9: 17.589 ops/s
Iteration  10: 29.689 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  25.914 ?(99.9%) 4.364 ops/s [Average]
  (min, avg, max) = (12.361, 25.914, 30.129), stdev = 5.026
  CI (99.9%): [21.550, 30.278] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:03:05
# Fork: 1 of 2
# Warmup Iteration   1: 24.262 ops/s
# Warmup Iteration   2: 22.855 ops/s
# Warmup Iteration   3: 21.339 ops/s
# Warmup Iteration   4: 25.489 ops/s
# Warmup Iteration   5: 24.846 ops/s
Iteration   1: 27.957 ops/s
Iteration   2: 27.172 ops/s
Iteration   3: 29.991 ops/s
Iteration   4: 27.698 ops/s
Iteration   5: 13.391 ops/s
Iteration   6: 28.584 ops/s
Iteration   7: 28.557 ops/s
Iteration   8: 15.248 ops/s
Iteration   9: 28.294 ops/s
Iteration  10: 27.026 ops/s

# Run progress: 90.00% complete, ETA 00:01:33
# Fork: 2 of 2
# Warmup Iteration   1: 22.231 ops/s
# Warmup Iteration   2: 21.493 ops/s
# Warmup Iteration   3: 24.474 ops/s
# Warmup Iteration   4: 24.627 ops/s
# Warmup Iteration   5: 24.394 ops/s
Iteration   1: 18.008 ops/s
Iteration   2: 28.736 ops/s
Iteration   3: 22.655 ops/s
Iteration   4: 29.542 ops/s
Iteration   5: 28.800 ops/s
Iteration   6: 22.484 ops/s
Iteration   7: 28.723 ops/s
Iteration   8: 26.259 ops/s
Iteration   9: 28.912 ops/s
Iteration  10: 29.533 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  25.879 ?(99.9%) 4.280 ops/s [Average]
  (min, avg, max) = (13.391, 25.879, 29.991), stdev = 4.929
  CI (99.9%): [21.599, 30.158] (assumes normal distribution)


# Run complete. Total time: 00:15:48

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt    Score   Error  Units
Deserialization.dsljson              thrpt   20  271.463 ? 7.031  ops/s
Deserialization.dsljson_reflection   thrpt   20  270.384 ? 9.349  ops/s
Deserialization.gson                 thrpt   20   22.239 ? 5.823  ops/s
Deserialization.jackson              thrpt   20   25.914 ? 4.364  ops/s
Deserialization.jackson_afterburner  thrpt   20   25.879 ? 4.280  ops/s
