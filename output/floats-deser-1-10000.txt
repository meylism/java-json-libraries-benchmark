# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 19.844 ops/s
# Warmup Iteration   2: 21.000 ops/s
# Warmup Iteration   3: 21.734 ops/s
# Warmup Iteration   4: 20.802 ops/s
# Warmup Iteration   5: 21.471 ops/s
Iteration   1: 21.730 ops/s
Iteration   2: 21.284 ops/s
Iteration   3: 20.872 ops/s
Iteration   4: 20.587 ops/s
Iteration   5: 21.595 ops/s
Iteration   6: 21.798 ops/s
Iteration   7: 24.298 ops/s
Iteration   8: 22.672 ops/s
Iteration   9: 21.657 ops/s
Iteration  10: 21.857 ops/s

# Run progress: 10.00% complete, ETA 00:09:13
# Fork: 2 of 2
# Warmup Iteration   1: 21.013 ops/s
# Warmup Iteration   2: 20.719 ops/s
# Warmup Iteration   3: 21.180 ops/s
# Warmup Iteration   4: 21.241 ops/s
# Warmup Iteration   5: 21.373 ops/s
Iteration   1: 20.507 ops/s
Iteration   2: 20.365 ops/s
Iteration   3: 20.645 ops/s
Iteration   4: 21.095 ops/s
Iteration   5: 20.938 ops/s
Iteration   6: 21.466 ops/s
Iteration   7: 20.408 ops/s
Iteration   8: 21.663 ops/s
Iteration   9: 21.176 ops/s
Iteration  10: 21.553 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  21.408 ?(99.9%) 0.782 ops/s [Average]
  (min, avg, max) = (20.365, 21.408, 24.298), stdev = 0.901
  CI (99.9%): [20.626, 22.191] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:08:12
# Fork: 1 of 2
# Warmup Iteration   1: 20.552 ops/s
# Warmup Iteration   2: 20.495 ops/s
# Warmup Iteration   3: 20.084 ops/s
# Warmup Iteration   4: 20.179 ops/s
# Warmup Iteration   5: 19.875 ops/s
Iteration   1: 19.117 ops/s
Iteration   2: 19.428 ops/s
Iteration   3: 19.335 ops/s
Iteration   4: 19.620 ops/s
Iteration   5: 20.285 ops/s
Iteration   6: 21.296 ops/s
Iteration   7: 20.001 ops/s
Iteration   8: 20.926 ops/s
Iteration   9: 20.256 ops/s
Iteration  10: 20.528 ops/s

# Run progress: 30.00% complete, ETA 00:07:11
# Fork: 2 of 2
# Warmup Iteration   1: 21.110 ops/s
# Warmup Iteration   2: 22.571 ops/s
# Warmup Iteration   3: 22.941 ops/s
# Warmup Iteration   4: 22.027 ops/s
# Warmup Iteration   5: 20.775 ops/s
Iteration   1: 22.777 ops/s
Iteration   2: 21.847 ops/s
Iteration   3: 23.072 ops/s
Iteration   4: 18.767 ops/s
Iteration   5: 22.725 ops/s
Iteration   6: 22.020 ops/s
Iteration   7: 22.817 ops/s
Iteration   8: 22.643 ops/s
Iteration   9: 21.853 ops/s
Iteration  10: 22.962 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  21.114 ?(99.9%) 1.269 ops/s [Average]
  (min, avg, max) = (18.767, 21.114, 23.072), stdev = 1.461
  CI (99.9%): [19.845, 22.382] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: 3.768 ops/s
# Warmup Iteration   2: 4.664 ops/s
# Warmup Iteration   3: 4.835 ops/s
# Warmup Iteration   4: 4.640 ops/s
# Warmup Iteration   5: 5.309 ops/s
Iteration   1: 5.246 ops/s
Iteration   2: 5.499 ops/s
Iteration   3: 5.283 ops/s
Iteration   4: 5.294 ops/s
Iteration   5: 5.493 ops/s
Iteration   6: 5.350 ops/s
Iteration   7: 5.686 ops/s
Iteration   8: 5.245 ops/s
Iteration   9: 5.440 ops/s
Iteration  10: 5.733 ops/s

# Run progress: 50.00% complete, ETA 00:05:28
# Fork: 2 of 2
# Warmup Iteration   1: 5.510 ops/s
# Warmup Iteration   2: 5.911 ops/s
# Warmup Iteration   3: 6.121 ops/s
# Warmup Iteration   4: 1.138 ops/s
# Warmup Iteration   5: 6.004 ops/s
Iteration   1: 5.978 ops/s
Iteration   2: 6.035 ops/s
Iteration   3: 6.154 ops/s
Iteration   4: 5.860 ops/s
Iteration   5: 5.867 ops/s
Iteration   6: 6.031 ops/s
Iteration   7: 6.248 ops/s
Iteration   8: 5.926 ops/s
Iteration   9: 5.945 ops/s
Iteration  10: 5.945 ops/s


Result "com.meylism.databind.Deserialization.gson":
  5.713 ?(99.9%) 0.285 ops/s [Average]
  (min, avg, max) = (5.245, 5.713, 6.248), stdev = 0.329
  CI (99.9%): [5.427, 5.998] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:04:29
# Fork: 1 of 2
# Warmup Iteration   1: 5.726 ops/s
# Warmup Iteration   2: 6.130 ops/s
# Warmup Iteration   3: 6.202 ops/s
# Warmup Iteration   4: 5.882 ops/s
# Warmup Iteration   5: 6.199 ops/s
Iteration   1: 6.403 ops/s
Iteration   2: 5.780 ops/s
Iteration   3: 6.348 ops/s
Iteration   4: 5.789 ops/s
Iteration   5: 6.283 ops/s
Iteration   6: 5.797 ops/s
Iteration   7: 5.812 ops/s
Iteration   8: 5.788 ops/s
Iteration   9: 6.459 ops/s
Iteration  10: 5.898 ops/s

# Run progress: 70.00% complete, ETA 00:03:22
# Fork: 2 of 2
# Warmup Iteration   1: 5.730 ops/s
# Warmup Iteration   2: 6.034 ops/s
# Warmup Iteration   3: 6.201 ops/s
# Warmup Iteration   4: 6.197 ops/s
# Warmup Iteration   5: 6.150 ops/s
Iteration   1: 6.134 ops/s
Iteration   2: 6.357 ops/s
Iteration   3: 5.941 ops/s
Iteration   4: 5.644 ops/s
Iteration   5: 6.117 ops/s
Iteration   6: 6.458 ops/s
Iteration   7: 6.028 ops/s
Iteration   8: 6.200 ops/s
Iteration   9: 6.083 ops/s
Iteration  10: 6.087 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  6.070 ?(99.9%) 0.223 ops/s [Average]
  (min, avg, max) = (5.644, 6.070, 6.459), stdev = 0.257
  CI (99.9%): [5.847, 6.293] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:15
# Fork: 1 of 2
# Warmup Iteration   1: 5.823 ops/s
# Warmup Iteration   2: 6.091 ops/s
# Warmup Iteration   3: 6.261 ops/s
# Warmup Iteration   4: 6.169 ops/s
# Warmup Iteration   5: 6.291 ops/s
Iteration   1: 5.899 ops/s
Iteration   2: 6.530 ops/s
Iteration   3: 5.967 ops/s
Iteration   4: 6.727 ops/s
Iteration   5: 6.013 ops/s
Iteration   6: 6.260 ops/s
Iteration   7: 6.119 ops/s
Iteration   8: 5.971 ops/s
Iteration   9: 6.455 ops/s
Iteration  10: 6.038 ops/s

# Run progress: 90.00% complete, ETA 00:01:07
# Fork: 2 of 2
# Warmup Iteration   1: 5.916 ops/s
# Warmup Iteration   2: 6.193 ops/s
# Warmup Iteration   3: 6.147 ops/s
# Warmup Iteration   4: 6.489 ops/s
# Warmup Iteration   5: 6.178 ops/s
Iteration   1: 6.635 ops/s
Iteration   2: 5.911 ops/s
Iteration   3: 6.395 ops/s
Iteration   4: 6.444 ops/s
Iteration   5: 5.899 ops/s
Iteration   6: 6.655 ops/s
Iteration   7: 6.011 ops/s
Iteration   8: 6.561 ops/s
Iteration   9: 6.289 ops/s
Iteration  10: 6.632 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  6.270 ?(99.9%) 0.256 ops/s [Average]
  (min, avg, max) = (5.899, 6.270, 6.727), stdev = 0.295
  CI (99.9%): [6.015, 6.526] (assumes normal distribution)


# Run complete. Total time: 00:11:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt   Score   Error  Units
Deserialization.dsljson              thrpt   20  21.408 ? 0.782  ops/s
Deserialization.dsljson_reflection   thrpt   20  21.114 ? 1.269  ops/s
Deserialization.gson                 thrpt   20   5.713 ? 0.285  ops/s
Deserialization.jackson              thrpt   20   6.070 ? 0.223  ops/s
Deserialization.jackson_afterburner  thrpt   20   6.270 ? 0.256  ops/s
