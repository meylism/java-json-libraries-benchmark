# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 994998.803 ops/s
# Warmup Iteration   2: 909419.924 ops/s
# Warmup Iteration   3: 924428.389 ops/s
# Warmup Iteration   4: 901902.854 ops/s
# Warmup Iteration   5: 919164.744 ops/s
Iteration   1: 928079.486 ops/s
Iteration   2: 914319.970 ops/s
Iteration   3: 885651.043 ops/s
Iteration   4: 912007.812 ops/s
Iteration   5: 930298.052 ops/s
Iteration   6: 991449.853 ops/s
Iteration   7: 929970.550 ops/s
Iteration   8: 925216.616 ops/s
Iteration   9: 894673.450 ops/s
Iteration  10: 946551.437 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: 1018304.331 ops/s
# Warmup Iteration   2: 873297.230 ops/s
# Warmup Iteration   3: 938829.381 ops/s
# Warmup Iteration   4: 907916.729 ops/s
# Warmup Iteration   5: 820100.861 ops/s
Iteration   1: 832266.066 ops/s
Iteration   2: 823993.437 ops/s
Iteration   3: 827471.937 ops/s
Iteration   4: 838836.704 ops/s
Iteration   5: 950998.281 ops/s
Iteration   6: 952776.151 ops/s
Iteration   7: 973339.395 ops/s
Iteration   8: 951888.072 ops/s
Iteration   9: 947021.715 ops/s
Iteration  10: 943813.335 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  915031.168 ?(99.9%) 43091.824 ops/s [Average]
  (min, avg, max) = (823993.437, 915031.168, 991449.853), stdev = 49624.609
  CI (99.9%): [871939.344, 958122.992] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: 856103.892 ops/s
# Warmup Iteration   2: 793093.691 ops/s
# Warmup Iteration   3: 778322.950 ops/s
# Warmup Iteration   4: 773544.036 ops/s
# Warmup Iteration   5: 885988.786 ops/s
Iteration   1: 867990.420 ops/s
Iteration   2: 931481.705 ops/s
Iteration   3: 936583.017 ops/s
Iteration   4: 947496.192 ops/s
Iteration   5: 923229.014 ops/s
Iteration   6: 914259.707 ops/s
Iteration   7: 911382.119 ops/s
Iteration   8: 946840.147 ops/s
Iteration   9: 792903.781 ops/s
Iteration  10: 853129.341 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: 1055745.816 ops/s
# Warmup Iteration   2: 923041.427 ops/s
# Warmup Iteration   3: 905791.406 ops/s
# Warmup Iteration   4: 904782.600 ops/s
# Warmup Iteration   5: 935057.678 ops/s
Iteration   1: 1004691.203 ops/s
Iteration   2: 992429.669 ops/s
Iteration   3: 991942.796 ops/s
Iteration   4: 1008456.288 ops/s
Iteration   5: 959956.007 ops/s
Iteration   6: 991914.705 ops/s
Iteration   7: 988058.536 ops/s
Iteration   8: 933983.350 ops/s
Iteration   9: 932821.860 ops/s
Iteration  10: 964289.156 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  939691.951 ?(99.9%) 47443.241 ops/s [Average]
  (min, avg, max) = (792903.781, 939691.951, 1008456.288), stdev = 54635.707
  CI (99.9%): [892248.709, 987135.192] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 989560.461 ops/s
# Warmup Iteration   2: 1114026.140 ops/s
# Warmup Iteration   3: 1052502.067 ops/s
# Warmup Iteration   4: 1097900.037 ops/s
# Warmup Iteration   5: 1106864.905 ops/s
Iteration   1: 1079721.662 ops/s
Iteration   2: 1106253.468 ops/s
Iteration   3: 983954.507 ops/s
Iteration   4: 1060247.432 ops/s
Iteration   5: 1074909.178 ops/s
Iteration   6: 1091828.644 ops/s
Iteration   7: 1116842.089 ops/s
Iteration   8: 1076587.279 ops/s
Iteration   9: 1087255.026 ops/s
Iteration  10: 1122161.342 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: 1031569.561 ops/s
# Warmup Iteration   2: 1105824.126 ops/s
# Warmup Iteration   3: 1096593.757 ops/s
# Warmup Iteration   4: 1132156.618 ops/s
# Warmup Iteration   5: 1079226.031 ops/s
Iteration   1: 1092618.046 ops/s
Iteration   2: 1130792.679 ops/s
Iteration   3: 1135538.101 ops/s
Iteration   4: 1105857.875 ops/s
Iteration   5: 1114967.103 ops/s
Iteration   6: 1114153.721 ops/s
Iteration   7: 1106797.772 ops/s
Iteration   8: 1092510.252 ops/s
Iteration   9: 1081139.352 ops/s
Iteration  10: 1051653.994 ops/s


Result "com.meylism.databind.Deserialization.gson":
  1091289.476 ?(99.9%) 29333.300 ops/s [Average]
  (min, avg, max) = (983954.507, 1091289.476, 1135538.101), stdev = 33780.272
  CI (99.9%): [1061956.176, 1120622.776] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: 2400209.357 ops/s
# Warmup Iteration   2: 2634600.840 ops/s
# Warmup Iteration   3: 2415126.949 ops/s
# Warmup Iteration   4: 2567682.273 ops/s
# Warmup Iteration   5: 2512335.497 ops/s
Iteration   1: 2375840.331 ops/s
Iteration   2: 2459675.689 ops/s
Iteration   3: 2618043.860 ops/s
Iteration   4: 2582539.365 ops/s
Iteration   5: 2499611.971 ops/s
Iteration   6: 2594988.103 ops/s
Iteration   7: 2672013.377 ops/s
Iteration   8: 2600533.384 ops/s
Iteration   9: 2618283.830 ops/s
Iteration  10: 2649853.671 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: 2433360.277 ops/s
# Warmup Iteration   2: 2552408.226 ops/s
# Warmup Iteration   3: 2690237.684 ops/s
# Warmup Iteration   4: 2615647.483 ops/s
# Warmup Iteration   5: 2651624.334 ops/s
Iteration   1: 2748689.854 ops/s
Iteration   2: 2687772.422 ops/s
Iteration   3: 2693347.046 ops/s
Iteration   4: 2676468.060 ops/s
Iteration   5: 2492528.092 ops/s
Iteration   6: 2694552.444 ops/s
Iteration   7: 2511277.027 ops/s
Iteration   8: 2523145.156 ops/s
Iteration   9: 2689015.197 ops/s
Iteration  10: 2514130.432 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  2595115.466 ?(99.9%) 85020.575 ops/s [Average]
  (min, avg, max) = (2375840.331, 2595115.466, 2748689.854), stdev = 97909.821
  CI (99.9%): [2510094.890, 2680136.041] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: 2279183.121 ops/s
# Warmup Iteration   2: 2487687.001 ops/s
# Warmup Iteration   3: 2496716.940 ops/s
# Warmup Iteration   4: 2469297.237 ops/s
# Warmup Iteration   5: 2449322.245 ops/s
Iteration   1: 2451392.130 ops/s
Iteration   2: 2411693.892 ops/s
Iteration   3: 2479100.361 ops/s
Iteration   4: 2443283.153 ops/s
Iteration   5: 2531304.689 ops/s
Iteration   6: 2393868.116 ops/s
Iteration   7: 2541272.780 ops/s
Iteration   8: 2456906.793 ops/s
Iteration   9: 2441197.306 ops/s
Iteration  10: 2547158.230 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 2236630.813 ops/s
# Warmup Iteration   2: 2496874.447 ops/s
# Warmup Iteration   3: 2478891.721 ops/s
# Warmup Iteration   4: 2490260.626 ops/s
# Warmup Iteration   5: 2498416.473 ops/s
Iteration   1: 2553087.426 ops/s
Iteration   2: 2601537.439 ops/s
Iteration   3: 2531659.745 ops/s
Iteration   4: 2531897.816 ops/s
Iteration   5: 2225682.669 ops/s
Iteration   6: 2462227.059 ops/s
Iteration   7: 2310114.876 ops/s
Iteration   8: 2382764.457 ops/s
Iteration   9: 2371529.522 ops/s
Iteration  10: 2392469.391 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  2453007.393 ?(99.9%) 79891.486 ops/s [Average]
  (min, avg, max) = (2225682.669, 2453007.393, 2601537.439), stdev = 92003.154
  CI (99.9%): [2373115.907, 2532898.879] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt        Score       Error  Units
Deserialization.dsljson              thrpt   20   915031.168 ? 43091.824  ops/s
Deserialization.dsljson_reflection   thrpt   20   939691.951 ? 47443.241  ops/s
Deserialization.gson                 thrpt   20  1091289.476 ? 29333.300  ops/s
Deserialization.jackson              thrpt   20  2595115.466 ? 85020.575  ops/s
Deserialization.jackson_afterburner  thrpt   20  2453007.393 ? 79891.486  ops/s
