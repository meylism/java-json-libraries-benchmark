# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
442185.551 ops/s
# Warmup Iteration   2: 526377.944 ops/s
# Warmup Iteration   3: 527520.909 ops/s
# Warmup Iteration   4: 528948.540 ops/s
# Warmup Iteration   5: 530035.850 ops/s
Iteration   1: 529974.643 ops/s
Iteration   2: 530372.332 ops/s
Iteration   3: 528100.278 ops/s
Iteration   4: 529133.546 ops/s
Iteration   5: 529999.798 ops/s
Iteration   6: 530434.775 ops/s
Iteration   7: 527621.283 ops/s
Iteration   8: 529098.177 ops/s
Iteration   9: 526872.016 ops/s
Iteration  10: 528932.636 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
490290.583 ops/s
# Warmup Iteration   2: 568810.184 ops/s
# Warmup Iteration   3: 567704.777 ops/s
# Warmup Iteration   4: 569420.973 ops/s
# Warmup Iteration   5: 568815.138 ops/s
Iteration   1: 568428.518 ops/s
Iteration   2: 569133.474 ops/s
Iteration   3: 568223.015 ops/s
Iteration   4: 568317.443 ops/s
Iteration   5: 568655.605 ops/s
Iteration   6: 567913.375 ops/s
Iteration   7: 566288.084 ops/s
Iteration   8: 568794.326 ops/s
Iteration   9: 567429.150 ops/s
Iteration  10: 568287.853 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  548600.516 ±(99.9%) 17435.891 ops/s [Average]
  (min, avg, max) = (526872.016, 548600.516, 569133.474), stdev = 20079.198
  CI (99.9%): [531164.626, 566036.407] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
389466.085 ops/s
# Warmup Iteration   2: 322380.369 ops/s
# Warmup Iteration   3: 330306.068 ops/s
# Warmup Iteration   4: 327030.731 ops/s
# Warmup Iteration   5: 324193.406 ops/s
Iteration   1: 337559.255 ops/s
Iteration   2: 329574.158 ops/s
Iteration   3: 330667.889 ops/s
Iteration   4: 325906.860 ops/s
Iteration   5: 322254.061 ops/s
Iteration   6: 333926.981 ops/s
Iteration   7: 327674.354 ops/s
Iteration   8: 335049.839 ops/s
Iteration   9: 327364.203 ops/s
Iteration  10: 328445.249 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
463109.494 ops/s
# Warmup Iteration   2: 581436.668 ops/s
# Warmup Iteration   3: 583329.266 ops/s
# Warmup Iteration   4: 582184.516 ops/s
# Warmup Iteration   5: 583223.630 ops/s
Iteration   1: 582049.760 ops/s
Iteration   2: 581271.033 ops/s
Iteration   3: 582259.977 ops/s
Iteration   4: 580234.169 ops/s
Iteration   5: 580491.695 ops/s
Iteration   6: 582203.180 ops/s
Iteration   7: 577564.660 ops/s
Iteration   8: 577965.299 ops/s
Iteration   9: 582445.915 ops/s
Iteration  10: 582892.432 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  455390.048 ±(99.9%) 111891.629 ops/s [Average]
  (min, avg, max) = (322254.061, 455390.048, 582892.432), stdev = 128854.567
  CI (99.9%): [343498.419, 567281.678] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
226507.334 ops/s
# Warmup Iteration   2: 240319.325 ops/s
# Warmup Iteration   3: 242362.875 ops/s
# Warmup Iteration   4: 242394.966 ops/s
# Warmup Iteration   5: 242554.461 ops/s
Iteration   1: 242365.296 ops/s
Iteration   2: 241940.895 ops/s
Iteration   3: 242060.821 ops/s
Iteration   4: 242101.382 ops/s
Iteration   5: 242046.239 ops/s
Iteration   6: 242216.444 ops/s
Iteration   7: 242224.515 ops/s
Iteration   8: 242408.940 ops/s
Iteration   9: 242232.548 ops/s
Iteration  10: 241589.121 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
226035.663 ops/s
# Warmup Iteration   2: 239894.889 ops/s
# Warmup Iteration   3: 241882.115 ops/s
# Warmup Iteration   4: 242158.779 ops/s
# Warmup Iteration   5: 242285.055 ops/s
Iteration   1: 241992.221 ops/s
Iteration   2: 241879.480 ops/s
Iteration   3: 241997.424 ops/s
Iteration   4: 241492.152 ops/s
Iteration   5: 242015.158 ops/s
Iteration   6: 242348.392 ops/s
Iteration   7: 242207.054 ops/s
Iteration   8: 241984.240 ops/s
Iteration   9: 242059.784 ops/s
Iteration  10: 241175.298 ops/s


Result "com.meylism.databind.Deserialization.gson":
  242016.870 ±(99.9%) 263.963 ops/s [Average]
  (min, avg, max) = (241175.298, 242016.870, 242408.940), stdev = 303.981
  CI (99.9%): [241752.907, 242280.834] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
425176.075 ops/s
# Warmup Iteration   2: 455394.356 ops/s
# Warmup Iteration   3: 456811.916 ops/s
# Warmup Iteration   4: 457824.337 ops/s
# Warmup Iteration   5: 457322.459 ops/s
Iteration   1: 456919.965 ops/s
Iteration   2: 456987.805 ops/s
Iteration   3: 456797.940 ops/s
Iteration   4: 456960.990 ops/s
Iteration   5: 456179.554 ops/s
Iteration   6: 457065.373 ops/s
Iteration   7: 455922.055 ops/s
Iteration   8: 457114.427 ops/s
Iteration   9: 456770.415 ops/s
Iteration  10: 457001.099 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
426779.583 ops/s
# Warmup Iteration   2: 454207.597 ops/s
# Warmup Iteration   3: 454768.801 ops/s
# Warmup Iteration   4: 454691.757 ops/s
# Warmup Iteration   5: 454313.997 ops/s
Iteration   1: 453292.340 ops/s
Iteration   2: 454317.922 ops/s
Iteration   3: 453124.221 ops/s
Iteration   4: 454417.695 ops/s
Iteration   5: 454904.803 ops/s
Iteration   6: 453707.253 ops/s
Iteration   7: 453870.879 ops/s
Iteration   8: 442970.658 ops/s
Iteration   9: 452508.598 ops/s
Iteration  10: 454467.276 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  454765.063 ±(99.9%) 2768.428 ops/s [Average]
  (min, avg, max) = (442970.658, 454765.063, 457114.427), stdev = 3188.125
  CI (99.9%): [451996.636, 457533.491] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
421103.746 ops/s
# Warmup Iteration   2: 450696.308 ops/s
# Warmup Iteration   3: 453196.272 ops/s
# Warmup Iteration   4: 452870.242 ops/s
# Warmup Iteration   5: 453178.998 ops/s
Iteration   1: 452600.691 ops/s
Iteration   2: 452539.928 ops/s
Iteration   3: 452582.050 ops/s
Iteration   4: 451893.913 ops/s
Iteration   5: 451279.681 ops/s
Iteration   6: 452333.156 ops/s
Iteration   7: 452531.611 ops/s
Iteration   8: 452730.367 ops/s
Iteration   9: 452813.752 ops/s
Iteration  10: 452442.284 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
419433.139 ops/s
# Warmup Iteration   2: 450625.941 ops/s
# Warmup Iteration   3: 452218.272 ops/s
# Warmup Iteration   4: 451981.316 ops/s
# Warmup Iteration   5: 452114.648 ops/s
Iteration   1: 450595.307 ops/s
Iteration   2: 452108.756 ops/s
Iteration   3: 452101.647 ops/s
Iteration   4: 450374.870 ops/s
Iteration   5: 451919.213 ops/s
Iteration   6: 451683.752 ops/s
Iteration   7: 451899.506 ops/s
Iteration   8: 451924.214 ops/s
Iteration   9: 452041.230 ops/s
Iteration  10: 451942.396 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  452016.916 ±(99.9%) 565.718 ops/s [Average]
  (min, avg, max) = (450374.870, 452016.916, 452813.752), stdev = 651.482
  CI (99.9%): [451451.198, 452582.634] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt       Score        Error  Units
Deserialization.dsljson              thrpt   20  548600.516 ±  17435.891  ops/s
Deserialization.dsljson_reflection   thrpt   20  455390.048 ± 111891.629  ops/s
Deserialization.gson                 thrpt   20  242016.870 ±    263.963  ops/s
Deserialization.jackson              thrpt   20  454765.063 ±   2768.428  ops/s
Deserialization.jackson_afterburner  thrpt   20  452016.916 ±    565.718  ops/s
