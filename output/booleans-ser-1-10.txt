# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 176606.343 ops/s
# Warmup Iteration   2: 188709.606 ops/s
# Warmup Iteration   3: 181291.213 ops/s
# Warmup Iteration   4: 183838.648 ops/s
# Warmup Iteration   5: 188343.033 ops/s
Iteration   1: 175241.746 ops/s
Iteration   2: 177165.430 ops/s
Iteration   3: 174440.330 ops/s
Iteration   4: 177200.755 ops/s
Iteration   5: 174082.947 ops/s
Iteration   6: 168483.475 ops/s
Iteration   7: 181586.021 ops/s
Iteration   8: 187819.028 ops/s
Iteration   9: 183686.840 ops/s
Iteration  10: 195565.366 ops/s

# Run progress: 10.00% complete, ETA 00:12:17
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 185384.669 ops/s
# Warmup Iteration   2: 202483.533 ops/s
# Warmup Iteration   3: 197192.258 ops/s
# Warmup Iteration   4: 189373.908 ops/s
# Warmup Iteration   5: 196052.656 ops/s
Iteration   1: 215137.002 ops/s
Iteration   2: 214718.026 ops/s
Iteration   3: 212673.324 ops/s
Iteration   4: 203219.636 ops/s
Iteration   5: 214517.559 ops/s
Iteration   6: 212889.377 ops/s
Iteration   7: 191984.321 ops/s
Iteration   8: 193964.788 ops/s
Iteration   9: 185305.220 ops/s
Iteration  10: 185001.594 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  191234.139 ?(99.9%) 13721.374 ops/s [Average]
  (min, avg, max) = (168483.475, 191234.139, 215137.002), stdev = 15801.554
  CI (99.9%): [177512.766, 204955.513] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 86139.332 ops/s
# Warmup Iteration   2: 93828.046 ops/s
# Warmup Iteration   3: 90149.672 ops/s
# Warmup Iteration   4: 92732.640 ops/s
# Warmup Iteration   5: 94187.971 ops/s
Iteration   1: 85591.648 ops/s
Iteration   2: 93722.593 ops/s
Iteration   3: 89522.371 ops/s
Iteration   4: 98546.547 ops/s
Iteration   5: 95717.769 ops/s
Iteration   6: 86043.937 ops/s
Iteration   7: 87640.980 ops/s
Iteration   8: 89309.895 ops/s
Iteration   9: 86365.186 ops/s
Iteration  10: 88473.618 ops/s

# Run progress: 30.00% complete, ETA 00:09:32
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 180529.252 ops/s
# Warmup Iteration   2: 179191.604 ops/s
# Warmup Iteration   3: 180658.197 ops/s
# Warmup Iteration   4: 179789.172 ops/s
# Warmup Iteration   5: 182066.484 ops/s
Iteration   1: 175155.316 ops/s
Iteration   2: 190924.920 ops/s
Iteration   3: 177252.993 ops/s
Iteration   4: 170995.481 ops/s
Iteration   5: 176503.068 ops/s
Iteration   6: 186498.755 ops/s
Iteration   7: 195880.462 ops/s
Iteration   8: 181701.733 ops/s
Iteration   9: 176472.484 ops/s
Iteration  10: 187493.782 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  135990.677 ?(99.9%) 41253.022 ops/s [Average]
  (min, avg, max) = (85591.648, 135990.677, 195880.462), stdev = 47507.041
  CI (99.9%): [94737.655, 177243.699] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 23168.006 ops/s
# Warmup Iteration   2: 25413.331 ops/s
# Warmup Iteration   3: 23689.704 ops/s
# Warmup Iteration   4: 23444.445 ops/s
# Warmup Iteration   5: 24151.882 ops/s
Iteration   1: 24243.693 ops/s
Iteration   2: 24997.300 ops/s
Iteration   3: 26567.107 ops/s
Iteration   4: 26500.726 ops/s
Iteration   5: 26524.465 ops/s
Iteration   6: 24416.340 ops/s
Iteration   7: 23463.463 ops/s
Iteration   8: 23197.108 ops/s
Iteration   9: 23758.511 ops/s
Iteration  10: 23927.020 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 24532.248 ops/s
# Warmup Iteration   2: 28492.126 ops/s
# Warmup Iteration   3: 29783.882 ops/s
# Warmup Iteration   4: 28291.775 ops/s
# Warmup Iteration   5: 28880.813 ops/s
Iteration   1: 25712.154 ops/s
Iteration   2: 26537.923 ops/s
Iteration   3: 25993.514 ops/s
Iteration   4: 27136.019 ops/s
Iteration   5: 27124.943 ops/s
Iteration   6: 27520.121 ops/s
Iteration   7: 25349.717 ops/s
Iteration   8: 25435.906 ops/s
Iteration   9: 25865.029 ops/s
Iteration  10: 25666.470 ops/s


Result "com.meylism.databind.Serialization.gson":
  25496.877 ?(99.9%) 1128.758 ops/s [Average]
  (min, avg, max) = (23197.108, 25496.877, 27520.121), stdev = 1299.880
  CI (99.9%): [24368.118, 26625.635] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:27
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 71435.020 ops/s
# Warmup Iteration   2: 83479.488 ops/s
# Warmup Iteration   3: 80973.497 ops/s
# Warmup Iteration   4: 76567.639 ops/s
# Warmup Iteration   5: 80218.903 ops/s
Iteration   1: 77779.681 ops/s
Iteration   2: 75015.182 ops/s
Iteration   3: 76408.209 ops/s
Iteration   4: 76308.773 ops/s
Iteration   5: 82997.387 ops/s
Iteration   6: 81931.395 ops/s
Iteration   7: 81889.505 ops/s
Iteration   8: 85397.501 ops/s
Iteration   9: 75176.513 ops/s
Iteration  10: 76350.395 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 68183.566 ops/s
# Warmup Iteration   2: 76142.997 ops/s
# Warmup Iteration   3: 73364.066 ops/s
# Warmup Iteration   4: 71489.517 ops/s
# Warmup Iteration   5: 73558.553 ops/s
Iteration   1: 73594.635 ops/s
Iteration   2: 79170.945 ops/s
Iteration   3: 72183.924 ops/s
Iteration   4: 71850.741 ops/s
Iteration   5: 71953.757 ops/s
Iteration   6: 73482.134 ops/s
Iteration   7: 69888.359 ops/s
Iteration   8: 70183.345 ops/s
Iteration   9: 73797.955 ops/s
Iteration  10: 78921.976 ops/s


Result "com.meylism.databind.Serialization.jackson":
  76214.116 ?(99.9%) 3812.921 ops/s [Average]
  (min, avg, max) = (69888.359, 76214.116, 85397.501), stdev = 4390.966
  CI (99.9%): [72401.194, 80027.037] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
79098.717 ops/s
# Warmup Iteration   2: 73088.016 ops/s
# Warmup Iteration   3: 71943.511 ops/s
# Warmup Iteration   4: 71782.259 ops/s
# Warmup Iteration   5: 71688.113 ops/s
Iteration   1: 71562.203 ops/s
Iteration   2: 71870.776 ops/s
Iteration   3: 72028.566 ops/s
Iteration   4: 72101.298 ops/s
Iteration   5: 72097.523 ops/s
Iteration   6: 72236.372 ops/s
Iteration   7: 72129.948 ops/s
Iteration   8: 71810.521 ops/s
Iteration   9: 72054.851 ops/s
Iteration  10: 72054.079 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
67787.966 ops/s
# Warmup Iteration   2: 73735.964 ops/s
# Warmup Iteration   3: 79018.410 ops/s
# Warmup Iteration   4: 82513.896 ops/s
# Warmup Iteration   5: 77646.551 ops/s
Iteration   1: 73369.437 ops/s
Iteration   2: 75850.261 ops/s
Iteration   3: 81720.070 ops/s
Iteration   4: 77384.304 ops/s
Iteration   5: 81461.619 ops/s
Iteration   6: 79575.399 ops/s
Iteration   7: 78472.257 ops/s
Iteration   8: 79135.981 ops/s
Iteration   9: 78629.081 ops/s
Iteration  10: 80113.523 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  75282.903 ?(99.9%) 3300.354 ops/s [Average]
  (min, avg, max) = (71562.203, 75282.903, 81720.070), stdev = 3800.693
  CI (99.9%): [71982.549, 78583.258] (assumes normal distribution)


# Run complete. Total time: 00:13:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score       Error  Units
Serialization.dsljson              thrpt   20  191234.139 ? 13721.374  ops/s
Serialization.dsljson_reflection   thrpt   20  135990.677 ? 41253.022  ops/s
Serialization.gson                 thrpt   20   25496.877 ?  1128.758  ops/s
Serialization.jackson              thrpt   20   76214.116 ?  3812.921  ops/s
Serialization.jackson_afterburner  thrpt   20   75282.903 ?  3300.354  ops/s
