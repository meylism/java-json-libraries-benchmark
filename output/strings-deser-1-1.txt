# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 1142720.388 ops/s
# Warmup Iteration   2: 1189130.278 ops/s
# Warmup Iteration   3: 1211085.969 ops/s
# Warmup Iteration   4: 1199118.112 ops/s
# Warmup Iteration   5: 1222552.389 ops/s
Iteration   1: 1218942.130 ops/s
Iteration   2: 1219963.669 ops/s
Iteration   3: 1217838.996 ops/s
Iteration   4: 1220064.658 ops/s
Iteration   5: 1205106.199 ops/s
Iteration   6: 1170388.816 ops/s
Iteration   7: 1190215.964 ops/s
Iteration   8: 1214920.898 ops/s
Iteration   9: 1223063.805 ops/s
Iteration  10: 1209605.533 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
# Warmup Iteration   1: 1293853.798 ops/s
# Warmup Iteration   2: 1414627.264 ops/s
# Warmup Iteration   3: 1409685.076 ops/s
# Warmup Iteration   4: 1410502.213 ops/s
# Warmup Iteration   5: 1416164.021 ops/s
Iteration   1: 1426897.918 ops/s
Iteration   2: 1426480.379 ops/s
Iteration   3: 1416345.389 ops/s
Iteration   4: 1423558.177 ops/s
Iteration   5: 1426845.484 ops/s
Iteration   6: 1409946.901 ops/s
Iteration   7: 1417321.663 ops/s
Iteration   8: 1395499.401 ops/s
Iteration   9: 1420997.372 ops/s
Iteration  10: 1390100.952 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  1312205.215 ?(99.9%) 92810.566 ops/s [Average]
  (min, avg, max) = (1170388.816, 1312205.215, 1426897.918), stdev = 106880.786
  CI (99.9%): [1219394.649, 1405015.782] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 1157819.817 ops/s
# Warmup Iteration   2: 1209131.899 ops/s
# Warmup Iteration   3: 1222549.940 ops/s
# Warmup Iteration   4: 1217021.762 ops/s
# Warmup Iteration   5: 1208757.588 ops/s
Iteration   1: 1215663.179 ops/s
Iteration   2: 1220868.640 ops/s
Iteration   3: 1193298.275 ops/s
Iteration   4: 1213230.189 ops/s
Iteration   5: 1157406.486 ops/s
Iteration   6: 1223774.858 ops/s
Iteration   7: 1224579.476 ops/s
Iteration   8: 1215064.732 ops/s
Iteration   9: 1222830.793 ops/s
Iteration  10: 1220483.336 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 1326077.977 ops/s
# Warmup Iteration   2: 1378116.052 ops/s
# Warmup Iteration   3: 1330004.289 ops/s
# Warmup Iteration   4: 1355510.503 ops/s
# Warmup Iteration   5: 1350331.716 ops/s
Iteration   1: 1317479.129 ops/s
Iteration   2: 1335015.847 ops/s
Iteration   3: 1357968.597 ops/s
Iteration   4: 1314404.984 ops/s
Iteration   5: 1359439.742 ops/s
Iteration   6: 1356621.650 ops/s
Iteration   7: 1348413.689 ops/s
Iteration   8: 1361518.349 ops/s
Iteration   9: 1351464.457 ops/s
Iteration  10: 1335150.817 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  1277233.861 ?(99.9%) 61433.494 ops/s [Average]
  (min, avg, max) = (1157406.486, 1277233.861, 1361518.349), stdev = 70746.903
  CI (99.9%): [1215800.368, 1338667.355] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 585617.272 ops/s
# Warmup Iteration   2: 658889.033 ops/s
# Warmup Iteration   3: 655157.202 ops/s
# Warmup Iteration   4: 651402.746 ops/s
# Warmup Iteration   5: 662189.202 ops/s
Iteration   1: 665950.598 ops/s
Iteration   2: 667141.637 ops/s
Iteration   3: 652695.159 ops/s
Iteration   4: 663754.910 ops/s
Iteration   5: 665476.454 ops/s
Iteration   6: 663041.176 ops/s
Iteration   7: 661705.579 ops/s
Iteration   8: 666466.770 ops/s
Iteration   9: 666357.782 ops/s
Iteration  10: 656848.648 ops/s

# Run progress: 50.00% complete, ETA 00:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 616677.634 ops/s
# Warmup Iteration   2: 683913.477 ops/s
# Warmup Iteration   3: 688818.472 ops/s
# Warmup Iteration   4: 682825.024 ops/s
# Warmup Iteration   5: 688572.322 ops/s
Iteration   1: 678650.535 ops/s
Iteration   2: 686512.074 ops/s
Iteration   3: 689451.124 ops/s
Iteration   4: 687550.161 ops/s
Iteration   5: 671845.177 ops/s
Iteration   6: 692858.114 ops/s
Iteration   7: 694369.063 ops/s
Iteration   8: 691342.142 ops/s
Iteration   9: 687252.104 ops/s
Iteration  10: 684869.704 ops/s


Result "com.meylism.databind.Deserialization.gson":
  674706.946 ?(99.9%) 11588.955 ops/s [Average]
  (min, avg, max) = (652695.159, 674706.946, 694369.063), stdev = 13345.858
  CI (99.9%): [663117.990, 686295.901] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 1034255.274 ops/s
# Warmup Iteration   2: 1130399.108 ops/s
# Warmup Iteration   3: 1140246.190 ops/s
# Warmup Iteration   4: 1141893.960 ops/s
# Warmup Iteration   5: 1127497.089 ops/s
Iteration   1: 1141338.140 ops/s
Iteration   2: 1157972.761 ops/s
Iteration   3: 1150134.448 ops/s
Iteration   4: 1153659.616 ops/s
Iteration   5: 1128372.981 ops/s
Iteration   6: 1145279.179 ops/s
Iteration   7: 1123189.864 ops/s
Iteration   8: 1152306.389 ops/s
Iteration   9: 1146218.233 ops/s
Iteration  10: 1147163.365 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 1157743.964 ops/s
# Warmup Iteration   2: 1234149.772 ops/s
# Warmup Iteration   3: 1246605.506 ops/s
# Warmup Iteration   4: 1231971.328 ops/s
# Warmup Iteration   5: 1236822.403 ops/s
Iteration   1: 1228964.633 ops/s
Iteration   2: 1200125.165 ops/s
Iteration   3: 1208730.052 ops/s
Iteration   4: 1240695.000 ops/s
Iteration   5: 1237019.686 ops/s
Iteration   6: 1219988.973 ops/s
Iteration   7: 1227710.479 ops/s
Iteration   8: 1222580.117 ops/s
Iteration   9: 1221611.719 ops/s
Iteration  10: 1237636.451 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  1184534.863 ?(99.9%) 37026.118 ops/s [Average]
  (min, avg, max) = (1123189.864, 1184534.863, 1240695.000), stdev = 42639.333
  CI (99.9%): [1147508.744, 1221560.981] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 1257684.566 ops/s
# Warmup Iteration   2: 1320374.327 ops/s
# Warmup Iteration   3: 1324106.052 ops/s
# Warmup Iteration   4: 1324948.388 ops/s
# Warmup Iteration   5: 1325763.435 ops/s
Iteration   1: 1334671.834 ops/s
Iteration   2: 1326602.846 ops/s
Iteration   3: 1293678.027 ops/s
Iteration   4: 1272761.956 ops/s
Iteration   5: 1316641.907 ops/s
Iteration   6: 1324735.747 ops/s
Iteration   7: 1337609.755 ops/s
Iteration   8: 1296723.936 ops/s
Iteration   9: 1322442.209 ops/s
Iteration  10: 1315936.363 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 1125614.217 ops/s
# Warmup Iteration   2: 1186295.395 ops/s
# Warmup Iteration   3: 1164748.073 ops/s
# Warmup Iteration   4: 1200496.681 ops/s
# Warmup Iteration   5: 1202737.376 ops/s
Iteration   1: 1198588.730 ops/s
Iteration   2: 1158561.937 ops/s
Iteration   3: 1199753.961 ops/s
Iteration   4: 1196901.232 ops/s
Iteration   5: 1212248.876 ops/s
Iteration   6: 1211617.382 ops/s
Iteration   7: 1208207.873 ops/s
Iteration   8: 1198096.486 ops/s
Iteration   9: 1179133.288 ops/s
Iteration  10: 1201450.607 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  1255318.248 ?(99.9%) 54718.542 ops/s [Average]
  (min, avg, max) = (1158561.937, 1255318.248, 1337609.755), stdev = 63013.955
  CI (99.9%): [1200599.705, 1310036.790] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt        Score       Error  Units
Deserialization.dsljson              thrpt   20  1312205.215 ? 92810.566  ops/s
Deserialization.dsljson_reflection   thrpt   20  1277233.861 ? 61433.494  ops/s
Deserialization.gson                 thrpt   20   674706.946 ? 11588.955  ops/s
Deserialization.jackson              thrpt   20  1184534.863 ? 37026.118  ops/s
Deserialization.jackson_afterburner  thrpt   20  1255318.248 ? 54718.542  ops/s
