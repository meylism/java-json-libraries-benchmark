# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1938362.352 ops/s
# Warmup Iteration   2: 2078694.583 ops/s
# Warmup Iteration   3: 1998543.677 ops/s
# Warmup Iteration   4: 1979088.205 ops/s
# Warmup Iteration   5: 1939266.878 ops/s
Iteration   1: 1907975.886 ops/s
Iteration   2: 1902241.936 ops/s
Iteration   3: 1910718.778 ops/s
Iteration   4: 2003567.548 ops/s
Iteration   5: 1970991.379 ops/s
Iteration   6: 1892420.185 ops/s
Iteration   7: 1867861.578 ops/s
Iteration   8: 1893950.838 ops/s
Iteration   9: 1859237.805 ops/s
Iteration  10: 1848397.252 ops/s

# Run progress: 10.00% complete, ETA 00:12:17
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1500611.234 ops/s
# Warmup Iteration   2: 1866574.807 ops/s
# Warmup Iteration   3: 1872774.870 ops/s
# Warmup Iteration   4: 1756094.722 ops/s
# Warmup Iteration   5: 1650094.895 ops/s
Iteration   1: 1727987.547 ops/s
Iteration   2: 1826944.352 ops/s
Iteration   3: 1733561.300 ops/s
Iteration   4: 1769523.623 ops/s
Iteration   5: 1747719.210 ops/s
Iteration   6: 1880243.506 ops/s
Iteration   7: 1918764.148 ops/s
Iteration   8: 1877638.907 ops/s
Iteration   9: 1900714.612 ops/s
Iteration  10: 1917533.862 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  1867899.713 ?(99.9%) 64609.250 ops/s [Average]
  (min, avg, max) = (1727987.547, 1867899.713, 2003567.548), stdev = 74404.108
  CI (99.9%): [1803290.463, 1932508.963] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1730208.999 ops/s
# Warmup Iteration   2: 1895606.038 ops/s
# Warmup Iteration   3: 1897470.028 ops/s
# Warmup Iteration   4: 1886105.279 ops/s
# Warmup Iteration   5: 1928152.616 ops/s
Iteration   1: 1932765.441 ops/s
Iteration   2: 1912118.600 ops/s
Iteration   3: 1934504.527 ops/s
Iteration   4: 1928204.403 ops/s
Iteration   5: 1882883.396 ops/s
Iteration   6: 1847752.289 ops/s
Iteration   7: 1936739.584 ops/s
Iteration   8: 1930055.631 ops/s
Iteration   9: 1919585.255 ops/s
Iteration  10: 1864051.852 ops/s

# Run progress: 30.00% complete, ETA 00:09:33
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1873271.133 ops/s
# Warmup Iteration   2: 1980392.837 ops/s
# Warmup Iteration   3: 1924937.813 ops/s
# Warmup Iteration   4: 2020935.339 ops/s
# Warmup Iteration   5: 2047567.338 ops/s
Iteration   1: 2050650.436 ops/s
Iteration   2: 2046633.691 ops/s
Iteration   3: 2052100.086 ops/s
Iteration   4: 2066838.133 ops/s
Iteration   5: 2057139.364 ops/s
Iteration   6: 2065083.650 ops/s
Iteration   7: 1954169.328 ops/s
Iteration   8: 1839561.506 ops/s
Iteration   9: 1944268.910 ops/s
Iteration  10: 1803886.996 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  1948449.654 ?(99.9%) 71303.007 ops/s [Average]
  (min, avg, max) = (1803886.996, 1948449.654, 2066838.133), stdev = 82112.649
  CI (99.9%): [1877146.647, 2019752.661] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 635827.193 ops/s
# Warmup Iteration   2: 706483.172 ops/s
# Warmup Iteration   3: 741987.675 ops/s
# Warmup Iteration   4: 757514.937 ops/s
# Warmup Iteration   5: 726832.697 ops/s
Iteration   1: 699950.843 ops/s
Iteration   2: 753614.595 ops/s
Iteration   3: 771059.106 ops/s
Iteration   4: 739141.483 ops/s
Iteration   5: 741618.286 ops/s
Iteration   6: 741004.664 ops/s
Iteration   7: 745966.128 ops/s
Iteration   8: 768958.285 ops/s
Iteration   9: 759261.314 ops/s
Iteration  10: 721226.036 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 668418.927 ops/s
# Warmup Iteration   2: 742984.280 ops/s
# Warmup Iteration   3: 737145.433 ops/s
# Warmup Iteration   4: 768140.028 ops/s
# Warmup Iteration   5: 778993.762 ops/s
Iteration   1: 710507.635 ops/s
Iteration   2: 734032.915 ops/s
Iteration   3: 755623.066 ops/s
Iteration   4: 738859.482 ops/s
Iteration   5: 741902.543 ops/s
Iteration   6: 720077.486 ops/s
Iteration   7: 730305.931 ops/s
Iteration   8: 735803.305 ops/s
Iteration   9: 754812.980 ops/s
Iteration  10: 752237.945 ops/s


Result "com.meylism.databind.Deserialization.gson":
  740798.201 ?(99.9%) 15906.392 ops/s [Average]
  (min, avg, max) = (699950.843, 740798.201, 771059.106), stdev = 18317.825
  CI (99.9%): [724891.809, 756704.594] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:28
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1579482.707 ops/s
# Warmup Iteration   2: 1761131.569 ops/s
# Warmup Iteration   3: 1801260.721 ops/s
# Warmup Iteration   4: 1820588.711 ops/s
# Warmup Iteration   5: 1854970.626 ops/s
Iteration   1: 1971519.429 ops/s
Iteration   2: 1989336.974 ops/s
Iteration   3: 1978736.505 ops/s
Iteration   4: 1983224.105 ops/s
Iteration   5: 1893082.643 ops/s
Iteration   6: 1948159.210 ops/s
Iteration   7: 1987416.738 ops/s
Iteration   8: 1964737.621 ops/s
Iteration   9: 1996863.864 ops/s
Iteration  10: 1982735.356 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1768667.495 ops/s
# Warmup Iteration   2: 1801069.286 ops/s
# Warmup Iteration   3: 1933061.494 ops/s
# Warmup Iteration   4: 1924908.729 ops/s
# Warmup Iteration   5: 1889075.980 ops/s
Iteration   1: 1919584.775 ops/s
Iteration   2: 1940247.663 ops/s
Iteration   3: 1762002.583 ops/s
Iteration   4: 1877420.104 ops/s
Iteration   5: 1741395.232 ops/s
Iteration   6: 1719553.331 ops/s
Iteration   7: 1783732.912 ops/s
Iteration   8: 1856215.808 ops/s
Iteration   9: 1733518.686 ops/s
Iteration  10: 1722946.795 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  1887621.517 ?(99.9%) 90715.220 ops/s [Average]
  (min, avg, max) = (1719553.331, 1887621.517, 1996863.864), stdev = 104467.782
  CI (99.9%): [1796906.297, 1978336.737] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1424226.655 ops/s
# Warmup Iteration   2: 1590463.041 ops/s
# Warmup Iteration   3: 1562601.551 ops/s
# Warmup Iteration   4: 1586248.273 ops/s
# Warmup Iteration   5: 1608915.371 ops/s
Iteration   1: 1771809.996 ops/s
Iteration   2: 1762369.612 ops/s
Iteration   3: 1774482.294 ops/s
Iteration   4: 1640424.104 ops/s
Iteration   5: 1537585.164 ops/s
Iteration   6: 1554706.233 ops/s
Iteration   7: 1633720.708 ops/s
Iteration   8: 1558380.295 ops/s
Iteration   9: 1660631.918 ops/s
Iteration  10: 1663990.481 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1597984.586 ops/s
# Warmup Iteration   2: 1705672.174 ops/s
# Warmup Iteration   3: 1812669.230 ops/s
# Warmup Iteration   4: 1848344.095 ops/s
# Warmup Iteration   5: 1851247.754 ops/s
Iteration   1: 1748474.889 ops/s
Iteration   2: 1826068.988 ops/s
Iteration   3: 1760258.798 ops/s
Iteration   4: 1688398.659 ops/s
Iteration   5: 1813783.821 ops/s
Iteration   6: 1854743.469 ops/s
Iteration   7: 1708070.972 ops/s
Iteration   8: 1633538.021 ops/s
Iteration   9: 1846887.553 ops/s
Iteration  10: 1744338.871 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  1709133.242 ?(99.9%) 84092.395 ops/s [Average]
  (min, avg, max) = (1537585.164, 1709133.242, 1854743.469), stdev = 96840.927
  CI (99.9%): [1625040.848, 1793225.637] (assumes normal distribution)


# Run complete. Total time: 00:13:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt        Score       Error  Units
Deserialization.dsljson              thrpt   20  1867899.713 ? 64609.250  ops/s
Deserialization.dsljson_reflection   thrpt   20  1948449.654 ? 71303.007  ops/s
Deserialization.gson                 thrpt   20   740798.201 ? 15906.392  ops/s
Deserialization.jackson              thrpt   20  1887621.517 ? 90715.220  ops/s
Deserialization.jackson_afterburner  thrpt   20  1709133.242 ? 84092.395  ops/s
