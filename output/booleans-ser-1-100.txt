# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
9097.853 ops/s
# Warmup Iteration   2: 9308.689 ops/s
# Warmup Iteration   3: 9331.658 ops/s
# Warmup Iteration   4: 9333.715 ops/s
# Warmup Iteration   5: 9326.212 ops/s
Iteration   1: 9036.015 ops/s
Iteration   2: 9031.948 ops/s
Iteration   3: 9037.397 ops/s
Iteration   4: 9036.714 ops/s
Iteration   5: 9036.365 ops/s
Iteration   6: 9019.933 ops/s
Iteration   7: 9029.367 ops/s
Iteration   8: 9014.314 ops/s
Iteration   9: 9025.798 ops/s
Iteration  10: 9035.329 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
9908.508 ops/s
# Warmup Iteration   2: 9985.549 ops/s
# Warmup Iteration   3: 10076.254 ops/s
# Warmup Iteration   4: 10069.206 ops/s
# Warmup Iteration   5: 10072.386 ops/s
Iteration   1: 10061.805 ops/s
Iteration   2: 10067.323 ops/s
Iteration   3: 10065.690 ops/s
Iteration   4: 10066.190 ops/s
Iteration   5: 10059.846 ops/s
Iteration   6: 10060.369 ops/s
Iteration   7: 10055.803 ops/s
Iteration   8: 10067.041 ops/s
Iteration   9: 10064.837 ops/s
Iteration  10: 10068.882 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  9547.048 ±(99.9%) 460.394 ops/s [Average]
  (min, avg, max) = (9014.314, 9547.048, 10068.882), stdev = 530.190
  CI (99.9%): [9086.654, 10007.442] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
9408.740 ops/s
# Warmup Iteration   2: 9527.850 ops/s
# Warmup Iteration   3: 9550.570 ops/s
# Warmup Iteration   4: 9555.751 ops/s
# Warmup Iteration   5: 9545.293 ops/s
Iteration   1: 9540.836 ops/s
Iteration   2: 9543.661 ops/s
Iteration   3: 9540.184 ops/s
Iteration   4: 9535.642 ops/s
Iteration   5: 9535.110 ops/s
Iteration   6: 9538.420 ops/s
Iteration   7: 9539.704 ops/s
Iteration   8: 9543.113 ops/s
Iteration   9: 9543.850 ops/s
Iteration  10: 9529.692 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
9795.456 ops/s
# Warmup Iteration   2: 9870.581 ops/s
# Warmup Iteration   3: 9885.460 ops/s
# Warmup Iteration   4: 9895.356 ops/s
# Warmup Iteration   5: 9894.924 ops/s
Iteration   1: 9674.610 ops/s
Iteration   2: 9660.515 ops/s
Iteration   3: 9680.157 ops/s
Iteration   4: 9666.479 ops/s
Iteration   5: 9681.146 ops/s
Iteration   6: 9669.045 ops/s
Iteration   7: 9657.595 ops/s
Iteration   8: 9664.284 ops/s
Iteration   9: 9660.051 ops/s
Iteration  10: 9674.249 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  9603.917 ±(99.9%) 58.098 ops/s [Average]
  (min, avg, max) = (9529.692, 9603.917, 9681.146), stdev = 66.906
  CI (99.9%): [9545.819, 9662.015] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1668.495 ops/s
# Warmup Iteration   2: 1709.138 ops/s
# Warmup Iteration   3: 1711.328 ops/s
# Warmup Iteration   4: 1711.206 ops/s
# Warmup Iteration   5: 1708.513 ops/s
Iteration   1: 1710.033 ops/s
Iteration   2: 1709.919 ops/s
Iteration   3: 1709.465 ops/s
Iteration   4: 1706.832 ops/s
Iteration   5: 1695.186 ops/s
Iteration   6: 1695.508 ops/s
Iteration   7: 1710.440 ops/s
Iteration   8: 1705.152 ops/s
Iteration   9: 1710.324 ops/s
Iteration  10: 1697.705 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1788.410 ops/s
# Warmup Iteration   2: 1840.097 ops/s
# Warmup Iteration   3: 1842.878 ops/s
# Warmup Iteration   4: 1843.605 ops/s
# Warmup Iteration   5: 1841.485 ops/s
Iteration   1: 1842.423 ops/s
Iteration   2: 1836.989 ops/s
Iteration   3: 1841.735 ops/s
Iteration   4: 1836.649 ops/s
Iteration   5: 1841.505 ops/s
Iteration   6: 1841.088 ops/s
Iteration   7: 1842.196 ops/s
Iteration   8: 1840.521 ops/s
Iteration   9: 1839.864 ops/s
Iteration  10: 1842.316 ops/s


Result "com.meylism.databind.Serialization.gson":
  1772.792 ±(99.9%) 60.482 ops/s [Average]
  (min, avg, max) = (1695.186, 1772.792, 1842.423), stdev = 69.651
  CI (99.9%): [1712.311, 1833.274] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6870.334 ops/s
# Warmup Iteration   2: 7086.417 ops/s
# Warmup Iteration   3: 7086.847 ops/s
# Warmup Iteration   4: 7092.910 ops/s
# Warmup Iteration   5: 7118.530 ops/s
Iteration   1: 7111.957 ops/s
Iteration   2: 7102.161 ops/s
Iteration   3: 7110.381 ops/s
Iteration   4: 7105.250 ops/s
Iteration   5: 7097.787 ops/s
Iteration   6: 7096.381 ops/s
Iteration   7: 7110.770 ops/s
Iteration   8: 7113.830 ops/s
Iteration   9: 7109.005 ops/s
Iteration  10: 7112.406 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
7355.750 ops/s
# Warmup Iteration   2: 7595.733 ops/s
# Warmup Iteration   3: 7621.161 ops/s
# Warmup Iteration   4: 7653.152 ops/s
# Warmup Iteration   5: 7656.016 ops/s
Iteration   1: 7659.350 ops/s
Iteration   2: 7651.461 ops/s
Iteration   3: 7613.350 ops/s
Iteration   4: 7598.736 ops/s
Iteration   5: 7601.779 ops/s
Iteration   6: 7607.666 ops/s
Iteration   7: 7432.295 ops/s
Iteration   8: 7608.105 ops/s
Iteration   9: 7604.300 ops/s
Iteration  10: 7610.029 ops/s


Result "com.meylism.databind.Serialization.jackson":
  7352.850 ±(99.9%) 222.191 ops/s [Average]
  (min, avg, max) = (7096.381, 7352.850, 7659.350), stdev = 255.876
  CI (99.9%): [7130.659, 7575.041] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
7623.988 ops/s
# Warmup Iteration   2: 7872.832 ops/s
# Warmup Iteration   3: 7907.453 ops/s
# Warmup Iteration   4: 7935.104 ops/s
# Warmup Iteration   5: 7945.003 ops/s
Iteration   1: 7940.994 ops/s
Iteration   2: 7920.791 ops/s
Iteration   3: 7928.855 ops/s
Iteration   4: 7916.240 ops/s
Iteration   5: 7925.858 ops/s
Iteration   6: 7931.466 ops/s
Iteration   7: 7924.294 ops/s
Iteration   8: 7918.669 ops/s
Iteration   9: 7927.985 ops/s
Iteration  10: 7929.857 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6923.002 ops/s
# Warmup Iteration   2: 7154.784 ops/s
# Warmup Iteration   3: 7189.935 ops/s
# Warmup Iteration   4: 7264.896 ops/s
# Warmup Iteration   5: 7265.357 ops/s
Iteration   1: 7261.232 ops/s
Iteration   2: 7261.357 ops/s
Iteration   3: 7256.043 ops/s
Iteration   4: 7210.771 ops/s
Iteration   5: 7198.680 ops/s
Iteration   6: 7198.250 ops/s
Iteration   7: 7166.146 ops/s
Iteration   8: 7134.351 ops/s
Iteration   9: 7197.401 ops/s
Iteration  10: 7167.375 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  7565.831 ±(99.9%) 322.405 ops/s [Average]
  (min, avg, max) = (7134.351, 7565.831, 7940.994), stdev = 371.282
  CI (99.9%): [7243.426, 7888.236] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt     Score     Error  Units
Serialization.dsljson              thrpt   20  9547.048 ± 460.394  ops/s
Serialization.dsljson_reflection   thrpt   20  9603.917 ±  58.098  ops/s
Serialization.gson                 thrpt   20  1772.792 ±  60.482  ops/s
Serialization.jackson              thrpt   20  7352.850 ± 222.191  ops/s
Serialization.jackson_afterburner  thrpt   20  7565.831 ± 322.405  ops/s
