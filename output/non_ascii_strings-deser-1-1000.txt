# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 3552.209 ops/s
# Warmup Iteration   2: 3894.440 ops/s
# Warmup Iteration   3: 3899.374 ops/s
# Warmup Iteration   4: 3919.182 ops/s
# Warmup Iteration   5: 3897.093 ops/s
Iteration   1: 3912.658 ops/s
Iteration   2: 3928.000 ops/s
Iteration   3: 3807.378 ops/s
Iteration   4: 3854.373 ops/s
Iteration   5: 3804.006 ops/s
Iteration   6: 3931.907 ops/s
Iteration   7: 3896.942 ops/s
Iteration   8: 3830.608 ops/s
Iteration   9: 3882.684 ops/s
Iteration  10: 3880.404 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 3895.286 ops/s
# Warmup Iteration   2: 3970.156 ops/s
# Warmup Iteration   3: 4159.284 ops/s
# Warmup Iteration   4: 4113.179 ops/s
# Warmup Iteration   5: 4160.775 ops/s
Iteration   1: 4110.503 ops/s
Iteration   2: 4114.543 ops/s
Iteration   3: 4189.288 ops/s
Iteration   4: 4187.695 ops/s
Iteration   5: 4135.060 ops/s
Iteration   6: 4150.393 ops/s
Iteration   7: 4103.435 ops/s
Iteration   8: 4180.298 ops/s
Iteration   9: 4120.404 ops/s
Iteration  10: 4182.041 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  4010.131 ?(99.9%) 127.185 ops/s [Average]
  (min, avg, max) = (3804.006, 4010.131, 4189.288), stdev = 146.466
  CI (99.9%): [3882.946, 4137.316] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:27
# Fork: 1 of 2
# Warmup Iteration   1: 3998.718 ops/s
# Warmup Iteration   2: 4134.191 ops/s
# Warmup Iteration   3: 4117.226 ops/s
# Warmup Iteration   4: 4187.686 ops/s
# Warmup Iteration   5: 4170.875 ops/s
Iteration   1: 4148.516 ops/s
Iteration   2: 4112.380 ops/s
Iteration   3: 4110.906 ops/s
Iteration   4: 4157.177 ops/s
Iteration   5: 4159.359 ops/s
Iteration   6: 4117.164 ops/s
Iteration   7: 4142.310 ops/s
Iteration   8: 4135.826 ops/s
Iteration   9: 4146.240 ops/s
Iteration  10: 3904.229 ops/s

# Run progress: 30.00% complete, ETA 00:06:31
# Fork: 2 of 2
# Warmup Iteration   1: 3736.887 ops/s
# Warmup Iteration   2: 3972.760 ops/s
# Warmup Iteration   3: 3952.817 ops/s
# Warmup Iteration   4: 3940.243 ops/s
# Warmup Iteration   5: 4003.748 ops/s
Iteration   1: 3982.163 ops/s
Iteration   2: 3931.634 ops/s
Iteration   3: 3983.414 ops/s
Iteration   4: 3964.886 ops/s
Iteration   5: 3992.587 ops/s
Iteration   6: 3775.028 ops/s
Iteration   7: 3919.358 ops/s
Iteration   8: 3986.001 ops/s
Iteration   9: 3975.873 ops/s
Iteration  10: 3958.343 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  4030.170 ?(99.9%) 95.135 ops/s [Average]
  (min, avg, max) = (3775.028, 4030.170, 4159.359), stdev = 109.557
  CI (99.9%): [3935.035, 4125.304] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 1200.511 ops/s
# Warmup Iteration   2: 1364.011 ops/s
# Warmup Iteration   3: 1347.985 ops/s
# Warmup Iteration   4: 1357.024 ops/s
# Warmup Iteration   5: 1336.838 ops/s
Iteration   1: 1367.624 ops/s
Iteration   2: 1371.620 ops/s
Iteration   3: 1368.130 ops/s
Iteration   4: 1364.077 ops/s
Iteration   5: 1318.372 ops/s
Iteration   6: 1294.316 ops/s
Iteration   7: 1314.515 ops/s
Iteration   8: 1354.783 ops/s
Iteration   9: 1350.955 ops/s
Iteration  10: 1355.151 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 1323.809 ops/s
# Warmup Iteration   2: 1615.228 ops/s
# Warmup Iteration   3: 1600.166 ops/s
# Warmup Iteration   4: 1640.513 ops/s
# Warmup Iteration   5: 1658.822 ops/s
Iteration   1: 1582.391 ops/s
Iteration   2: 1655.491 ops/s
Iteration   3: 1643.951 ops/s
Iteration   4: 1576.738 ops/s
Iteration   5: 1654.950 ops/s
Iteration   6: 1658.459 ops/s
Iteration   7: 1640.148 ops/s
Iteration   8: 1615.453 ops/s
Iteration   9: 1640.174 ops/s
Iteration  10: 1634.958 ops/s


Result "com.meylism.databind.Deserialization.gson":
  1488.113 ?(99.9%) 128.883 ops/s [Average]
  (min, avg, max) = (1294.316, 1488.113, 1658.459), stdev = 148.422
  CI (99.9%): [1359.229, 1616.996] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 3514.274 ops/s
# Warmup Iteration   2: 3678.991 ops/s
# Warmup Iteration   3: 3684.369 ops/s
# Warmup Iteration   4: 3671.060 ops/s
# Warmup Iteration   5: 3703.912 ops/s
Iteration   1: 3720.637 ops/s
Iteration   2: 3703.333 ops/s
Iteration   3: 3629.472 ops/s
Iteration   4: 3718.030 ops/s
Iteration   5: 3622.835 ops/s
Iteration   6: 3712.447 ops/s
Iteration   7: 3705.647 ops/s
Iteration   8: 3707.922 ops/s
Iteration   9: 3628.288 ops/s
Iteration  10: 3718.747 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 3449.054 ops/s
# Warmup Iteration   2: 3618.485 ops/s
# Warmup Iteration   3: 3567.734 ops/s
# Warmup Iteration   4: 3654.806 ops/s
# Warmup Iteration   5: 3692.665 ops/s
Iteration   1: 3685.496 ops/s
Iteration   2: 3670.080 ops/s
Iteration   3: 3639.174 ops/s
Iteration   4: 3584.424 ops/s
Iteration   5: 3640.226 ops/s
Iteration   6: 3702.536 ops/s
Iteration   7: 3661.543 ops/s
Iteration   8: 3635.454 ops/s
Iteration   9: 3668.044 ops/s
Iteration  10: 3630.436 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  3669.239 ?(99.9%) 35.501 ops/s [Average]
  (min, avg, max) = (3584.424, 3669.239, 3720.637), stdev = 40.883
  CI (99.9%): [3633.738, 3704.740] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 3450.136 ops/s
# Warmup Iteration   2: 3691.229 ops/s
# Warmup Iteration   3: 3725.515 ops/s
# Warmup Iteration   4: 3618.040 ops/s
# Warmup Iteration   5: 3655.956 ops/s
Iteration   1: 3740.784 ops/s
Iteration   2: 3573.312 ops/s
Iteration   3: 3636.873 ops/s
Iteration   4: 3743.576 ops/s
Iteration   5: 3728.509 ops/s
Iteration   6: 3652.097 ops/s
Iteration   7: 3721.471 ops/s
Iteration   8: 3631.801 ops/s
Iteration   9: 3697.825 ops/s
Iteration  10: 3749.452 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 3498.397 ops/s
# Warmup Iteration   2: 3773.197 ops/s
# Warmup Iteration   3: 3772.203 ops/s
# Warmup Iteration   4: 3781.680 ops/s
# Warmup Iteration   5: 3754.467 ops/s
Iteration   1: 3768.555 ops/s
Iteration   2: 3795.836 ops/s
Iteration   3: 3737.161 ops/s
Iteration   4: 3774.592 ops/s
Iteration   5: 3769.931 ops/s
Iteration   6: 3788.945 ops/s
Iteration   7: 3785.754 ops/s
Iteration   8: 3683.435 ops/s
Iteration   9: 3737.447 ops/s
Iteration  10: 3640.851 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  3717.910 ?(99.9%) 54.196 ops/s [Average]
  (min, avg, max) = (3573.312, 3717.910, 3795.836), stdev = 62.413
  CI (99.9%): [3663.714, 3772.107] (assumes normal distribution)


# Run complete. Total time: 00:09:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt     Score     Error  Units
Deserialization.dsljson              thrpt   20  4010.131 ? 127.185  ops/s
Deserialization.dsljson_reflection   thrpt   20  4030.170 ?  95.135  ops/s
Deserialization.gson                 thrpt   20  1488.113 ? 128.883  ops/s
Deserialization.jackson              thrpt   20  3669.239 ?  35.501  ops/s
Deserialization.jackson_afterburner  thrpt   20  3717.910 ?  54.196  ops/s
