# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 4319359.991 ops/s
# Warmup Iteration   2: 4400858.778 ops/s
# Warmup Iteration   3: 4273275.262 ops/s
# Warmup Iteration   4: 4447688.049 ops/s
# Warmup Iteration   5: 4347201.042 ops/s
Iteration   1: 4254947.952 ops/s
Iteration   2: 4267919.566 ops/s
Iteration   3: 4122255.440 ops/s
Iteration   4: 4428147.914 ops/s
Iteration   5: 4373683.530 ops/s
Iteration   6: 4444278.826 ops/s
Iteration   7: 4335574.269 ops/s
Iteration   8: 4401024.136 ops/s
Iteration   9: 4392718.739 ops/s
Iteration  10: 4428058.429 ops/s

# Run progress: 10.00% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 3740062.569 ops/s
# Warmup Iteration   2: 3827418.925 ops/s
# Warmup Iteration   3: 3933700.517 ops/s
# Warmup Iteration   4: 3900874.447 ops/s
# Warmup Iteration   5: 3836738.835 ops/s
Iteration   1: 3907974.054 ops/s
Iteration   2: 3867706.885 ops/s
Iteration   3: 3896441.948 ops/s
Iteration   4: 3855334.207 ops/s
Iteration   5: 3925843.265 ops/s
Iteration   6: 3882892.594 ops/s
Iteration   7: 3900911.533 ops/s
Iteration   8: 3925464.786 ops/s
Iteration   9: 3919745.925 ops/s
Iteration  10: 3899372.300 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  4121514.815 ?(99.9%) 208596.878 ops/s [Average]
  (min, avg, max) = (3855334.207, 4121514.815, 4444278.826), stdev = 240220.474
  CI (99.9%): [3912917.937, 4330111.692] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:45
# Fork: 1 of 2
# Warmup Iteration   1: 4645253.967 ops/s
# Warmup Iteration   2: 4686623.826 ops/s
# Warmup Iteration   3: 4919040.868 ops/s
# Warmup Iteration   4: 4846190.347 ops/s
# Warmup Iteration   5: 4907029.666 ops/s
Iteration   1: 4736603.687 ops/s
Iteration   2: 4666065.179 ops/s
Iteration   3: 4661087.737 ops/s
Iteration   4: 4661002.196 ops/s
Iteration   5: 4685057.600 ops/s
Iteration   6: 4669817.917 ops/s
Iteration   7: 4914200.680 ops/s
Iteration   8: 4964957.972 ops/s
Iteration   9: 4909903.175 ops/s
Iteration  10: 4947575.589 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 4305521.309 ops/s
# Warmup Iteration   2: 4308838.483 ops/s
# Warmup Iteration   3: 4468206.662 ops/s
# Warmup Iteration   4: 4476187.640 ops/s
# Warmup Iteration   5: 4481765.024 ops/s
Iteration   1: 4486009.837 ops/s
Iteration   2: 4501619.732 ops/s
Iteration   3: 4471427.151 ops/s
Iteration   4: 4477214.870 ops/s
Iteration   5: 4509050.275 ops/s
Iteration   6: 4471165.081 ops/s
Iteration   7: 4467225.372 ops/s
Iteration   8: 4333476.508 ops/s
Iteration   9: 4495275.315 ops/s
Iteration  10: 4370057.455 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  4619939.667 ?(99.9%) 168457.689 ops/s [Average]
  (min, avg, max) = (4333476.508, 4619939.667, 4964957.972), stdev = 193996.126
  CI (99.9%): [4451481.977, 4788397.356] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 6453785.955 ops/s
# Warmup Iteration   2: 6989779.602 ops/s
# Warmup Iteration   3: 7159583.228 ops/s
# Warmup Iteration   4: 6975662.808 ops/s
# Warmup Iteration   5: 7019943.862 ops/s
Iteration   1: 7211676.421 ops/s
Iteration   2: 7049810.692 ops/s
Iteration   3: 6853775.799 ops/s
Iteration   4: 7082529.235 ops/s
Iteration   5: 7038361.859 ops/s
Iteration   6: 6967423.974 ops/s
Iteration   7: 7079494.499 ops/s
Iteration   8: 7151775.695 ops/s
Iteration   9: 7076845.199 ops/s
Iteration  10: 7118870.826 ops/s

# Run progress: 50.00% complete, ETA 00:06:43
# Fork: 2 of 2
# Warmup Iteration   1: 6343627.472 ops/s
# Warmup Iteration   2: 6842120.947 ops/s
# Warmup Iteration   3: 6951981.920 ops/s
# Warmup Iteration   4: 7073187.414 ops/s
# Warmup Iteration   5: 6947712.423 ops/s
Iteration   1: 7080379.837 ops/s
Iteration   2: 7023528.933 ops/s
Iteration   3: 7001806.567 ops/s
Iteration   4: 6870751.444 ops/s
Iteration   5: 6971948.495 ops/s
Iteration   6: 6851008.025 ops/s
Iteration   7: 6704626.647 ops/s
Iteration   8: 6882157.977 ops/s
Iteration   9: 6837113.167 ops/s
Iteration  10: 7190521.214 ops/s


Result "com.meylism.databind.Serialization.gson":
  7002220.325 ?(99.9%) 115814.867 ops/s [Average]
  (min, avg, max) = (6704626.647, 7002220.325, 7211676.421), stdev = 133372.573
  CI (99.9%): [6886405.458, 7118035.192] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 4967712.131 ops/s
# Warmup Iteration   2: 5117480.981 ops/s
# Warmup Iteration   3: 5009657.831 ops/s
# Warmup Iteration   4: 5178857.536 ops/s
# Warmup Iteration   5: 5110468.355 ops/s
Iteration   1: 4830156.652 ops/s
Iteration   2: 4982664.254 ops/s
Iteration   3: 4959861.857 ops/s
Iteration   4: 4984489.698 ops/s
Iteration   5: 5262548.081 ops/s
Iteration   6: 5104369.403 ops/s
Iteration   7: 5224292.785 ops/s
Iteration   8: 5249866.475 ops/s
Iteration   9: 5212623.927 ops/s
Iteration  10: 5041133.071 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 4902624.033 ops/s
# Warmup Iteration   2: 5071981.300 ops/s
# Warmup Iteration   3: 4991520.031 ops/s
# Warmup Iteration   4: 4868548.325 ops/s
# Warmup Iteration   5: 5024331.967 ops/s
Iteration   1: 4893971.068 ops/s
Iteration   2: 5104148.375 ops/s
Iteration   3: 4955433.730 ops/s
Iteration   4: 5000520.620 ops/s
Iteration   5: 4963990.440 ops/s
Iteration   6: 5003330.136 ops/s
Iteration   7: 5042235.430 ops/s
Iteration   8: 5175930.649 ops/s
Iteration   9: 4987929.351 ops/s
Iteration  10: 5012687.688 ops/s


Result "com.meylism.databind.Serialization.jackson":
  5049609.185 ?(99.9%) 105352.026 ops/s [Average]
  (min, avg, max) = (4830156.652, 5049609.185, 5262548.081), stdev = 121323.550
  CI (99.9%): [4944257.159, 5154961.210] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 4610603.788 ops/s
# Warmup Iteration   2: 4884565.892 ops/s
# Warmup Iteration   3: 4894526.857 ops/s
# Warmup Iteration   4: 4845928.356 ops/s
# Warmup Iteration   5: 4831987.739 ops/s
Iteration   1: 4787162.893 ops/s
Iteration   2: 4849299.580 ops/s
Iteration   3: 4718021.681 ops/s
Iteration   4: 4867772.871 ops/s
Iteration   5: 4895839.626 ops/s
Iteration   6: 4871253.553 ops/s
Iteration   7: 4855519.208 ops/s
Iteration   8: 4690893.620 ops/s
Iteration   9: 4801083.501 ops/s
Iteration  10: 4871626.220 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 4287510.241 ops/s
# Warmup Iteration   2: 4308155.294 ops/s
# Warmup Iteration   3: 4460103.031 ops/s
# Warmup Iteration   4: 4564131.148 ops/s
# Warmup Iteration   5: 4521241.348 ops/s
Iteration   1: 4577237.789 ops/s
Iteration   2: 4609755.247 ops/s
Iteration   3: 4328708.166 ops/s
Iteration   4: 4541674.712 ops/s
Iteration   5: 4428186.167 ops/s
Iteration   6: 4529372.153 ops/s
Iteration   7: 4454704.560 ops/s
Iteration   8: 4438924.816 ops/s
Iteration   9: 4410968.626 ops/s
Iteration  10: 4427435.498 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  4647772.024 ?(99.9%) 167946.819 ops/s [Average]
  (min, avg, max) = (4328708.166, 4647772.024, 4895839.626), stdev = 193407.807
  CI (99.9%): [4479825.205, 4815718.844] (assumes normal distribution)


# Run complete. Total time: 00:13:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score        Error  Units
Serialization.dsljson              thrpt   20  4121514.815 ? 208596.878  ops/s
Serialization.dsljson_reflection   thrpt   20  4619939.667 ? 168457.689  ops/s
Serialization.gson                 thrpt   20  7002220.325 ? 115814.867  ops/s
Serialization.jackson              thrpt   20  5049609.185 ? 105352.026  ops/s
Serialization.jackson_afterburner  thrpt   20  4647772.024 ? 167946.819  ops/s
