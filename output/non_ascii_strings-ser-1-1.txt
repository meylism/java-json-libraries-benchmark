# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 503466.126 ops/s
# Warmup Iteration   2: 509149.548 ops/s
# Warmup Iteration   3: 512621.416 ops/s
# Warmup Iteration   4: 489242.737 ops/s
# Warmup Iteration   5: 506104.232 ops/s
Iteration   1: 511739.426 ops/s
Iteration   2: 511555.125 ops/s
Iteration   3: 511153.108 ops/s
Iteration   4: 512782.138 ops/s
Iteration   5: 511859.628 ops/s
Iteration   6: 467943.574 ops/s
Iteration   7: 456838.354 ops/s
Iteration   8: 470237.858 ops/s
Iteration   9: 488996.081 ops/s
Iteration  10: 479336.901 ops/s

# Run progress: 10.00% complete, ETA 00:12:16
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 484040.956 ops/s
# Warmup Iteration   2: 467594.887 ops/s
# Warmup Iteration   3: 483393.456 ops/s
# Warmup Iteration   4: 490020.692 ops/s
# Warmup Iteration   5: 490011.977 ops/s
Iteration   1: 490743.332 ops/s
Iteration   2: 490581.808 ops/s
Iteration   3: 491606.325 ops/s
Iteration   4: 491685.817 ops/s
Iteration   5: 491977.075 ops/s
Iteration   6: 492097.847 ops/s
Iteration   7: 490219.735 ops/s
Iteration   8: 464728.444 ops/s
Iteration   9: 489770.941 ops/s
Iteration  10: 483506.734 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  489968.013 ?(99.9%) 14321.985 ops/s [Average]
  (min, avg, max) = (456838.354, 489968.013, 512782.138), stdev = 16493.219
  CI (99.9%): [475646.028, 504289.997] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 521249.487 ops/s
# Warmup Iteration   2: 524061.519 ops/s
# Warmup Iteration   3: 529698.969 ops/s
# Warmup Iteration   4: 529231.450 ops/s
# Warmup Iteration   5: 530373.301 ops/s
Iteration   1: 472766.934 ops/s
Iteration   2: 510027.606 ops/s
Iteration   3: 516546.563 ops/s
Iteration   4: 526673.775 ops/s
Iteration   5: 529462.146 ops/s
Iteration   6: 528592.665 ops/s
Iteration   7: 531394.605 ops/s
Iteration   8: 531147.440 ops/s
Iteration   9: 530154.758 ops/s
Iteration  10: 531200.160 ops/s

# Run progress: 30.00% complete, ETA 00:09:32
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 542979.451 ops/s
# Warmup Iteration   2: 560219.081 ops/s
# Warmup Iteration   3: 554455.755 ops/s
# Warmup Iteration   4: 558599.449 ops/s
# Warmup Iteration   5: 560102.550 ops/s
Iteration   1: 561174.581 ops/s
Iteration   2: 552056.013 ops/s
Iteration   3: 557982.007 ops/s
Iteration   4: 562515.473 ops/s
Iteration   5: 555204.255 ops/s
Iteration   6: 565371.493 ops/s
Iteration   7: 558752.355 ops/s
Iteration   8: 564394.254 ops/s
Iteration   9: 565579.811 ops/s
Iteration  10: 558244.382 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  540462.064 ?(99.9%) 20839.379 ops/s [Average]
  (min, avg, max) = (472766.934, 540462.064, 565579.811), stdev = 23998.660
  CI (99.9%): [519622.685, 561301.443] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 649135.687 ops/s
# Warmup Iteration   2: 827370.134 ops/s
# Warmup Iteration   3: 870651.752 ops/s
# Warmup Iteration   4: 868595.921 ops/s
# Warmup Iteration   5: 877068.505 ops/s
Iteration   1: 867108.179 ops/s
Iteration   2: 875896.118 ops/s
Iteration   3: 875419.228 ops/s
Iteration   4: 869659.078 ops/s
Iteration   5: 872078.059 ops/s
Iteration   6: 869277.903 ops/s
Iteration   7: 873015.252 ops/s
Iteration   8: 859815.038 ops/s
Iteration   9: 875020.189 ops/s
Iteration  10: 867528.101 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 665255.174 ops/s
# Warmup Iteration   2: 939941.530 ops/s
# Warmup Iteration   3: 937028.982 ops/s
# Warmup Iteration   4: 894772.265 ops/s
# Warmup Iteration   5: 867888.170 ops/s
Iteration   1: 855223.161 ops/s
Iteration   2: 920406.921 ops/s
Iteration   3: 932730.331 ops/s
Iteration   4: 935122.811 ops/s
Iteration   5: 928041.267 ops/s
Iteration   6: 942812.807 ops/s
Iteration   7: 941933.827 ops/s
Iteration   8: 936403.306 ops/s
Iteration   9: 942423.238 ops/s
Iteration  10: 930413.126 ops/s


Result "com.meylism.databind.Serialization.gson":
  898516.397 ?(99.9%) 29576.760 ops/s [Average]
  (min, avg, max) = (855223.161, 898516.397, 942812.807), stdev = 34060.641
  CI (99.9%): [868939.637, 928093.157] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:27
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 410898.472 ops/s
# Warmup Iteration   2: 429131.225 ops/s
# Warmup Iteration   3: 423304.474 ops/s
# Warmup Iteration   4: 432120.877 ops/s
# Warmup Iteration   5: 418718.084 ops/s
Iteration   1: 424508.560 ops/s
Iteration   2: 431450.016 ops/s
Iteration   3: 429215.286 ops/s
Iteration   4: 392874.753 ops/s
Iteration   5: 384460.718 ops/s
Iteration   6: 396707.241 ops/s
Iteration   7: 401608.609 ops/s
Iteration   8: 410949.073 ops/s
Iteration   9: 429942.708 ops/s
Iteration  10: 432880.713 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 471334.044 ops/s
# Warmup Iteration   2: 480288.717 ops/s
# Warmup Iteration   3: 455778.654 ops/s
# Warmup Iteration   4: 472422.662 ops/s
# Warmup Iteration   5: 484741.446 ops/s
Iteration   1: 428958.938 ops/s
Iteration   2: 465747.622 ops/s
Iteration   3: 498747.964 ops/s
Iteration   4: 455136.362 ops/s
Iteration   5: 449537.795 ops/s
Iteration   6: 459395.174 ops/s
Iteration   7: 487249.629 ops/s
Iteration   8: 494009.436 ops/s
Iteration   9: 493482.048 ops/s
Iteration  10: 496099.320 ops/s


Result "com.meylism.databind.Serialization.jackson":
  443148.098 ?(99.9%) 32103.819 ops/s [Average]
  (min, avg, max) = (384460.718, 443148.098, 498747.964), stdev = 36970.805
  CI (99.9%): [411044.280, 475251.917] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
434541.399 ops/s
# Warmup Iteration   2: 470812.891 ops/s
# Warmup Iteration   3: 473165.790 ops/s
# Warmup Iteration   4: 467062.703 ops/s
# Warmup Iteration   5: 439110.454 ops/s
Iteration   1: 469374.210 ops/s
Iteration   2: 469419.446 ops/s
Iteration   3: 477248.894 ops/s
Iteration   4: 462376.541 ops/s
Iteration   5: 475545.333 ops/s
Iteration   6: 470998.730 ops/s
Iteration   7: 464303.030 ops/s
Iteration   8: 470698.269 ops/s
Iteration   9: 466342.407 ops/s
Iteration  10: 472192.017 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
373667.004 ops/s
# Warmup Iteration   2: 387095.295 ops/s
# Warmup Iteration   3: 399348.604 ops/s
# Warmup Iteration   4: 403324.096 ops/s
# Warmup Iteration   5: 398928.095 ops/s
Iteration   1: 377565.579 ops/s
Iteration   2: 359606.328 ops/s
Iteration   3: 377240.188 ops/s
Iteration   4: 383711.873 ops/s
Iteration   5: 383297.544 ops/s
Iteration   6: 371284.226 ops/s
Iteration   7: 360844.445 ops/s
Iteration   8: 364513.553 ops/s
Iteration   9: 377343.916 ops/s
Iteration  10: 386322.761 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  422011.465 ?(99.9%) 43100.676 ops/s [Average]
  (min, avg, max) = (359606.328, 422011.465, 477248.894), stdev = 49634.803
  CI (99.9%): [378910.788, 465112.141] (assumes normal distribution)


# Run complete. Total time: 00:13:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score       Error  Units
Serialization.dsljson              thrpt   20  489968.013 ? 14321.985  ops/s
Serialization.dsljson_reflection   thrpt   20  540462.064 ? 20839.379  ops/s
Serialization.gson                 thrpt   20  898516.397 ? 29576.760  ops/s
Serialization.jackson              thrpt   20  443148.098 ? 32103.819  ops/s
Serialization.jackson_afterburner  thrpt   20  422011.465 ? 43100.676  ops/s
