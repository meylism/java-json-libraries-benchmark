# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 4327535.013 ops/s
# Warmup Iteration   2: 4181350.507 ops/s
# Warmup Iteration   3: 4348617.203 ops/s
# Warmup Iteration   4: 4427209.279 ops/s
# Warmup Iteration   5: 4363870.426 ops/s
Iteration   1: 4308921.779 ops/s
Iteration   2: 4299849.877 ops/s
Iteration   3: 4437277.578 ops/s
Iteration   4: 4308583.803 ops/s
Iteration   5: 4391364.130 ops/s
Iteration   6: 4396130.375 ops/s
Iteration   7: 4181756.971 ops/s
Iteration   8: 4176195.149 ops/s
Iteration   9: 4298318.141 ops/s
Iteration  10: 4093466.807 ops/s

# Run progress: 10.00% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 4451040.610 ops/s
# Warmup Iteration   2: 4418211.760 ops/s
# Warmup Iteration   3: 4252389.859 ops/s
# Warmup Iteration   4: 4306920.833 ops/s
# Warmup Iteration   5: 4467723.413 ops/s
Iteration   1: 4578040.365 ops/s
Iteration   2: 4547837.728 ops/s
Iteration   3: 4529257.328 ops/s
Iteration   4: 4497386.347 ops/s
Iteration   5: 4526211.474 ops/s
Iteration   6: 4524282.617 ops/s
Iteration   7: 4533154.283 ops/s
Iteration   8: 4387050.964 ops/s
Iteration   9: 4447313.915 ops/s
Iteration  10: 4540266.680 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  4400133.316 ?(99.9%) 122983.944 ops/s [Average]
  (min, avg, max) = (4093466.807, 4400133.316, 4578040.365), stdev = 141628.493
  CI (99.9%): [4277149.371, 4523117.260] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: 4865911.677 ops/s
# Warmup Iteration   2: 5009551.585 ops/s
# Warmup Iteration   3: 4737725.238 ops/s
# Warmup Iteration   4: 4991278.239 ops/s
# Warmup Iteration   5: 5020151.157 ops/s
Iteration   1: 5023732.192 ops/s
Iteration   2: 4908715.866 ops/s
Iteration   3: 5031059.947 ops/s
Iteration   4: 4938353.243 ops/s
Iteration   5: 4872949.481 ops/s
Iteration   6: 4985670.942 ops/s
Iteration   7: 4795132.944 ops/s
Iteration   8: 5005621.888 ops/s
Iteration   9: 4962345.279 ops/s
Iteration  10: 4737446.214 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 4177689.006 ops/s
# Warmup Iteration   2: 4076262.934 ops/s
# Warmup Iteration   3: 4225254.527 ops/s
# Warmup Iteration   4: 4347285.503 ops/s
# Warmup Iteration   5: 4299574.712 ops/s
Iteration   1: 4294096.511 ops/s
Iteration   2: 4344828.070 ops/s
Iteration   3: 4266862.215 ops/s
Iteration   4: 4266483.945 ops/s
Iteration   5: 4329154.552 ops/s
Iteration   6: 4048523.195 ops/s
Iteration   7: 4099195.126 ops/s
Iteration   8: 4292750.973 ops/s
Iteration   9: 4338523.272 ops/s
Iteration  10: 4331749.147 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  4593659.750 ?(99.9%) 308255.388 ops/s [Average]
  (min, avg, max) = (4048523.195, 4593659.750, 5031059.947), stdev = 354987.363
  CI (99.9%): [4285404.363, 4901915.138] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 5424391.749 ops/s
# Warmup Iteration   2: 5693828.370 ops/s
# Warmup Iteration   3: 5673619.254 ops/s
# Warmup Iteration   4: 5701376.527 ops/s
# Warmup Iteration   5: 5720849.216 ops/s
Iteration   1: 5642275.471 ops/s
Iteration   2: 5645668.298 ops/s
Iteration   3: 5750420.778 ops/s
Iteration   4: 5820191.768 ops/s
Iteration   5: 5923142.783 ops/s
Iteration   6: 5832918.639 ops/s
Iteration   7: 5761134.968 ops/s
Iteration   8: 5868912.451 ops/s
Iteration   9: 5936304.180 ops/s
Iteration  10: 5942653.285 ops/s

# Run progress: 50.00% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: 5735736.002 ops/s
# Warmup Iteration   2: 6310537.819 ops/s
# Warmup Iteration   3: 6408483.327 ops/s
# Warmup Iteration   4: 6480483.013 ops/s
# Warmup Iteration   5: 6292648.572 ops/s
Iteration   1: 6223055.792 ops/s
Iteration   2: 6529453.921 ops/s
Iteration   3: 6112634.767 ops/s
Iteration   4: 6021902.082 ops/s
Iteration   5: 6377923.017 ops/s
Iteration   6: 6070325.910 ops/s
Iteration   7: 6430881.178 ops/s
Iteration   8: 6533261.560 ops/s
Iteration   9: 6563606.810 ops/s
Iteration  10: 6078971.288 ops/s


Result "com.meylism.databind.Serialization.gson":
  6053281.947 ?(99.9%) 259108.902 ops/s [Average]
  (min, avg, max) = (5642275.471, 6053281.947, 6563606.810), stdev = 298390.197
  CI (99.9%): [5794173.045, 6312390.850] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 5239649.017 ops/s
# Warmup Iteration   2: 5556573.198 ops/s
# Warmup Iteration   3: 5422570.725 ops/s
# Warmup Iteration   4: 5444905.089 ops/s
# Warmup Iteration   5: 5501181.959 ops/s
Iteration   1: 5349723.471 ops/s
Iteration   2: 5445448.120 ops/s
Iteration   3: 5475276.843 ops/s
Iteration   4: 5478032.793 ops/s
Iteration   5: 5598057.753 ops/s
Iteration   6: 5560835.596 ops/s
Iteration   7: 5143638.219 ops/s
Iteration   8: 5337256.966 ops/s
Iteration   9: 5411562.482 ops/s
Iteration  10: 5663845.848 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 4947005.495 ops/s
# Warmup Iteration   2: 4962602.014 ops/s
# Warmup Iteration   3: 5105650.504 ops/s
# Warmup Iteration   4: 5097164.987 ops/s
# Warmup Iteration   5: 5089412.022 ops/s
Iteration   1: 4982742.593 ops/s
Iteration   2: 5124547.106 ops/s
Iteration   3: 5081472.192 ops/s
Iteration   4: 5044275.522 ops/s
Iteration   5: 5056636.462 ops/s
Iteration   6: 5123284.250 ops/s
Iteration   7: 5101947.818 ops/s
Iteration   8: 4994135.977 ops/s
Iteration   9: 5200255.827 ops/s
Iteration  10: 5119078.149 ops/s


Result "com.meylism.databind.Serialization.jackson":
  5264602.699 ?(99.9%) 188889.118 ops/s [Average]
  (min, avg, max) = (4982742.593, 5264602.699, 5663845.848), stdev = 217524.990
  CI (99.9%): [5075713.581, 5453491.818] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 4110575.972 ops/s
# Warmup Iteration   2: 4383997.626 ops/s
# Warmup Iteration   3: 4242243.552 ops/s
# Warmup Iteration   4: 4297970.988 ops/s
# Warmup Iteration   5: 4419246.392 ops/s
Iteration   1: 4528835.906 ops/s
Iteration   2: 4404509.916 ops/s
Iteration   3: 4365051.359 ops/s
Iteration   4: 4047084.104 ops/s
Iteration   5: 4267843.642 ops/s
Iteration   6: 4336140.864 ops/s
Iteration   7: 4430609.227 ops/s
Iteration   8: 4281270.398 ops/s
Iteration   9: 4164314.379 ops/s
Iteration  10: 4199847.779 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 5101481.513 ops/s
# Warmup Iteration   2: 5287424.128 ops/s
# Warmup Iteration   3: 5222661.683 ops/s
# Warmup Iteration   4: 5436583.678 ops/s
# Warmup Iteration   5: 5248508.731 ops/s
Iteration   1: 5238603.719 ops/s
Iteration   2: 5408295.539 ops/s
Iteration   3: 5437304.195 ops/s
Iteration   4: 5199362.286 ops/s
Iteration   5: 4996413.929 ops/s
Iteration   6: 5279800.024 ops/s
Iteration   7: 4993635.244 ops/s
Iteration   8: 5161061.682 ops/s
Iteration   9: 5318575.223 ops/s
Iteration  10: 5304623.830 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  4768159.162 ?(99.9%) 432903.205 ops/s [Average]
  (min, avg, max) = (4047084.104, 4768159.162, 5437304.195), stdev = 498531.974
  CI (99.9%): [4335255.958, 5201062.367] (assumes normal distribution)


# Run complete. Total time: 00:13:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score        Error  Units
Serialization.dsljson              thrpt   20  4400133.316 ? 122983.944  ops/s
Serialization.dsljson_reflection   thrpt   20  4593659.750 ? 308255.388  ops/s
Serialization.gson                 thrpt   20  6053281.947 ? 259108.902  ops/s
Serialization.jackson              thrpt   20  5264602.699 ? 188889.118  ops/s
Serialization.jackson_afterburner  thrpt   20  4768159.162 ? 432903.205  ops/s
