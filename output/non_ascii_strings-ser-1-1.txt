# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 880385.551 ops/s
# Warmup Iteration   2: 897958.227 ops/s
# Warmup Iteration   3: 901575.010 ops/s
# Warmup Iteration   4: 906571.972 ops/s
# Warmup Iteration   5: 903518.330 ops/s
Iteration   1: 901528.337 ops/s
Iteration   2: 902536.456 ops/s
Iteration   3: 898067.017 ops/s
Iteration   4: 872535.683 ops/s
Iteration   5: 865582.830 ops/s
Iteration   6: 889790.539 ops/s
Iteration   7: 882396.715 ops/s
Iteration   8: 868474.072 ops/s
Iteration   9: 894439.620 ops/s
Iteration  10: 883127.282 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
# Warmup Iteration   1: 953581.510 ops/s
# Warmup Iteration   2: 976567.581 ops/s
# Warmup Iteration   3: 977467.423 ops/s
# Warmup Iteration   4: 974047.069 ops/s
# Warmup Iteration   5: 994893.763 ops/s
Iteration   1: 983474.963 ops/s
Iteration   2: 992439.793 ops/s
Iteration   3: 993481.025 ops/s
Iteration   4: 983307.956 ops/s
Iteration   5: 988586.180 ops/s
Iteration   6: 983525.289 ops/s
Iteration   7: 985162.256 ops/s
Iteration   8: 977309.348 ops/s
Iteration   9: 985889.518 ops/s
Iteration  10: 970190.902 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  935092.289 ?(99.9%) 44809.879 ops/s [Average]
  (min, avg, max) = (865582.830, 935092.289, 993481.025), stdev = 51603.124
  CI (99.9%): [890282.410, 979902.169] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 758051.274 ops/s
# Warmup Iteration   2: 779701.267 ops/s
# Warmup Iteration   3: 765209.868 ops/s
# Warmup Iteration   4: 785956.278 ops/s
# Warmup Iteration   5: 788894.102 ops/s
Iteration   1: 788850.103 ops/s
Iteration   2: 792999.625 ops/s
Iteration   3: 742068.666 ops/s
Iteration   4: 757733.398 ops/s
Iteration   5: 789079.121 ops/s
Iteration   6: 790329.305 ops/s
Iteration   7: 793363.026 ops/s
Iteration   8: 782243.415 ops/s
Iteration   9: 773682.283 ops/s
Iteration  10: 772867.861 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 828516.239 ops/s
# Warmup Iteration   2: 862952.401 ops/s
# Warmup Iteration   3: 865116.643 ops/s
# Warmup Iteration   4: 863557.251 ops/s
# Warmup Iteration   5: 841032.462 ops/s
Iteration   1: 863938.089 ops/s
Iteration   2: 861359.525 ops/s
Iteration   3: 866845.860 ops/s
Iteration   4: 868516.951 ops/s
Iteration   5: 871503.302 ops/s
Iteration   6: 875755.086 ops/s
Iteration   7: 866074.164 ops/s
Iteration   8: 862245.060 ops/s
Iteration   9: 838833.125 ops/s
Iteration  10: 817437.612 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  818786.279 ?(99.9%) 38924.980 ops/s [Average]
  (min, avg, max) = (742068.666, 818786.279, 875755.086), stdev = 44826.065
  CI (99.9%): [779861.299, 857711.259] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 789990.882 ops/s
# Warmup Iteration   2: 928871.373 ops/s
# Warmup Iteration   3: 934934.325 ops/s
# Warmup Iteration   4: 932878.277 ops/s
# Warmup Iteration   5: 911115.509 ops/s
Iteration   1: 940617.641 ops/s
Iteration   2: 926387.033 ops/s
Iteration   3: 900359.382 ops/s
Iteration   4: 902924.936 ops/s
Iteration   5: 940165.802 ops/s
Iteration   6: 937835.901 ops/s
Iteration   7: 946758.949 ops/s
Iteration   8: 943339.271 ops/s
Iteration   9: 939735.351 ops/s
Iteration  10: 943116.683 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 1427482.344 ops/s
# Warmup Iteration   2: 1725556.780 ops/s
# Warmup Iteration   3: 1708589.166 ops/s
# Warmup Iteration   4: 1707140.489 ops/s
# Warmup Iteration   5: 1743830.003 ops/s
Iteration   1: 1750940.071 ops/s
Iteration   2: 1731559.899 ops/s
Iteration   3: 1746231.305 ops/s
Iteration   4: 1740784.966 ops/s
Iteration   5: 1747375.456 ops/s
Iteration   6: 1732510.102 ops/s
Iteration   7: 1741236.485 ops/s
Iteration   8: 1744490.086 ops/s
Iteration   9: 1744640.044 ops/s
Iteration  10: 1730051.012 ops/s


Result "com.meylism.databind.Serialization.gson":
  1336553.019 ?(99.9%) 360479.820 ops/s [Average]
  (min, avg, max) = (900359.382, 1336553.019, 1750940.071), stdev = 415129.097
  CI (99.9%): [976073.199, 1697032.839] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 920865.596 ops/s
# Warmup Iteration   2: 1015832.207 ops/s
# Warmup Iteration   3: 1017382.303 ops/s
# Warmup Iteration   4: 1011563.187 ops/s
# Warmup Iteration   5: 1030033.383 ops/s
Iteration   1: 1012149.854 ops/s
Iteration   2: 1022120.413 ops/s
Iteration   3: 1013978.995 ops/s
Iteration   4: 1025712.064 ops/s
Iteration   5: 1045225.057 ops/s
Iteration   6: 1037031.562 ops/s
Iteration   7: 1002759.310 ops/s
Iteration   8: 1021949.114 ops/s
Iteration   9: 989918.031 ops/s
Iteration  10: 983859.024 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 998328.667 ops/s
# Warmup Iteration   2: 1068442.167 ops/s
# Warmup Iteration   3: 1037978.764 ops/s
# Warmup Iteration   4: 1033500.372 ops/s
# Warmup Iteration   5: 1029700.034 ops/s
Iteration   1: 1031994.608 ops/s
Iteration   2: 1041079.037 ops/s
Iteration   3: 1043419.227 ops/s
Iteration   4: 1023727.876 ops/s
Iteration   5: 1012667.404 ops/s
Iteration   6: 1019245.500 ops/s
Iteration   7: 1012352.127 ops/s
Iteration   8: 979551.513 ops/s
Iteration   9: 986130.465 ops/s
Iteration  10: 1000260.119 ops/s


Result "com.meylism.databind.Serialization.jackson":
  1015256.565 ?(99.9%) 17321.103 ops/s [Average]
  (min, avg, max) = (979551.513, 1015256.565, 1045225.057), stdev = 19947.007
  CI (99.9%): [997935.462, 1032577.668] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 762019.544 ops/s
# Warmup Iteration   2: 822470.215 ops/s
# Warmup Iteration   3: 806772.021 ops/s
# Warmup Iteration   4: 823765.473 ops/s
# Warmup Iteration   5: 827269.234 ops/s
Iteration   1: 838704.219 ops/s
Iteration   2: 823869.576 ops/s
Iteration   3: 815760.453 ops/s
Iteration   4: 823897.140 ops/s
Iteration   5: 836536.625 ops/s
Iteration   6: 830318.598 ops/s
Iteration   7: 791004.692 ops/s
Iteration   8: 833713.748 ops/s
Iteration   9: 839770.238 ops/s
Iteration  10: 834581.343 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 932373.283 ops/s
# Warmup Iteration   2: 1012664.045 ops/s
# Warmup Iteration   3: 960551.544 ops/s
# Warmup Iteration   4: 1001666.704 ops/s
# Warmup Iteration   5: 1026239.689 ops/s
Iteration   1: 1031643.319 ops/s
Iteration   2: 978852.893 ops/s
Iteration   3: 1003830.506 ops/s
Iteration   4: 1000988.220 ops/s
Iteration   5: 1018682.740 ops/s
Iteration   6: 1013219.981 ops/s
Iteration   7: 1013193.975 ops/s
Iteration   8: 1025671.010 ops/s
Iteration   9: 1013715.269 ops/s
Iteration  10: 999463.911 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  918370.923 ?(99.9%) 82527.993 ops/s [Average]
  (min, avg, max) = (791004.692, 918370.923, 1031643.319), stdev = 95039.359
  CI (99.9%): [835842.930, 1000898.916] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt        Score        Error  Units
Serialization.dsljson              thrpt   20   935092.289 ?  44809.879  ops/s
Serialization.dsljson_reflection   thrpt   20   818786.279 ?  38924.980  ops/s
Serialization.gson                 thrpt   20  1336553.019 ? 360479.820  ops/s
Serialization.jackson              thrpt   20  1015256.565 ?  17321.103  ops/s
Serialization.jackson_afterburner  thrpt   20   918370.923 ?  82527.993  ops/s
