# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 447351.404 ops/s
# Warmup Iteration   2: 481851.806 ops/s
# Warmup Iteration   3: 502766.842 ops/s
# Warmup Iteration   4: 494553.206 ops/s
# Warmup Iteration   5: 496027.122 ops/s
Iteration   1: 485361.798 ops/s
Iteration   2: 484312.683 ops/s
Iteration   3: 483623.493 ops/s
Iteration   4: 488571.925 ops/s
Iteration   5: 483201.583 ops/s
Iteration   6: 483929.642 ops/s
Iteration   7: 496836.930 ops/s
Iteration   8: 540752.876 ops/s
Iteration   9: 501347.300 ops/s
Iteration  10: 505108.051 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 441358.988 ops/s
# Warmup Iteration   2: 532535.012 ops/s
# Warmup Iteration   3: 591285.305 ops/s
# Warmup Iteration   4: 548708.007 ops/s
# Warmup Iteration   5: 548698.038 ops/s
Iteration   1: 536401.333 ops/s
Iteration   2: 534123.851 ops/s
Iteration   3: 528625.492 ops/s
Iteration   4: 537230.419 ops/s
Iteration   5: 526604.673 ops/s
Iteration   6: 522767.327 ops/s
Iteration   7: 519019.218 ops/s
Iteration   8: 527626.808 ops/s
Iteration   9: 547916.959 ops/s
Iteration  10: 537982.775 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  513567.257 ?(99.9%) 20121.433 ops/s [Average]
  (min, avg, max) = (483201.583, 513567.257, 547916.959), stdev = 23171.872
  CI (99.9%): [493445.824, 533688.690] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 443066.250 ops/s
# Warmup Iteration   2: 446536.642 ops/s
# Warmup Iteration   3: 421525.643 ops/s
# Warmup Iteration   4: 421310.975 ops/s
# Warmup Iteration   5: 453924.333 ops/s
Iteration   1: 452571.106 ops/s
Iteration   2: 454748.782 ops/s
Iteration   3: 455697.864 ops/s
Iteration   4: 453911.302 ops/s
Iteration   5: 456932.524 ops/s
Iteration   6: 451614.281 ops/s
Iteration   7: 432608.981 ops/s
Iteration   8: 445184.918 ops/s
Iteration   9: 455318.289 ops/s
Iteration  10: 407238.658 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 409617.508 ops/s
# Warmup Iteration   2: 473289.696 ops/s
# Warmup Iteration   3: 549001.542 ops/s
# Warmup Iteration   4: 522013.511 ops/s
# Warmup Iteration   5: 508554.438 ops/s
Iteration   1: 495532.313 ops/s
Iteration   2: 499553.860 ops/s
Iteration   3: 533255.125 ops/s
Iteration   4: 511136.631 ops/s
Iteration   5: 476811.851 ops/s
Iteration   6: 494282.494 ops/s
Iteration   7: 488744.200 ops/s
Iteration   8: 493508.371 ops/s
Iteration   9: 483562.891 ops/s
Iteration  10: 497789.444 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  472000.194 ?(99.9%) 26211.630 ops/s [Average]
  (min, avg, max) = (407238.658, 472000.194, 533255.125), stdev = 30185.352
  CI (99.9%): [445788.564, 498211.824] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 73004.871 ops/s
# Warmup Iteration   2: 84553.657 ops/s
# Warmup Iteration   3: 85997.032 ops/s
# Warmup Iteration   4: 81526.185 ops/s
# Warmup Iteration   5: 81914.343 ops/s
Iteration   1: 82977.401 ops/s
Iteration   2: 86621.908 ops/s
Iteration   3: 90456.605 ops/s
Iteration   4: 89533.679 ops/s
Iteration   5: 88211.350 ops/s
Iteration   6: 84115.493 ops/s
Iteration   7: 82778.542 ops/s
Iteration   8: 82232.610 ops/s
Iteration   9: 92012.094 ops/s
Iteration  10: 94753.144 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 87679.804 ops/s
# Warmup Iteration   2: 99364.219 ops/s
# Warmup Iteration   3: 100546.725 ops/s
# Warmup Iteration   4: 91718.952 ops/s
# Warmup Iteration   5: 95225.796 ops/s
Iteration   1: 86476.212 ops/s
Iteration   2: 87403.108 ops/s
Iteration   3: 86564.953 ops/s
Iteration   4: 86045.217 ops/s
Iteration   5: 89119.566 ops/s
Iteration   6: 89882.149 ops/s
Iteration   7: 95750.648 ops/s
Iteration   8: 99507.209 ops/s
Iteration   9: 90715.517 ops/s
Iteration  10: 91682.406 ops/s


Result "com.meylism.databind.Deserialization.gson":
  88841.991 ?(99.9%) 3911.273 ops/s [Average]
  (min, avg, max) = (82232.610, 88841.991, 99507.209), stdev = 4504.228
  CI (99.9%): [84930.717, 92753.264] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 79804.273 ops/s
# Warmup Iteration   2: 94034.148 ops/s
# Warmup Iteration   3: 96840.634 ops/s
# Warmup Iteration   4: 93507.979 ops/s
# Warmup Iteration   5: 93955.005 ops/s
Iteration   1: 104465.202 ops/s
Iteration   2: 106990.941 ops/s
Iteration   3: 107297.152 ops/s
Iteration   4: 106710.751 ops/s
Iteration   5: 95611.306 ops/s
Iteration   6: 93938.196 ops/s
Iteration   7: 93679.251 ops/s
Iteration   8: 95792.436 ops/s
Iteration   9: 95518.181 ops/s
Iteration  10: 92827.374 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 81741.970 ops/s
# Warmup Iteration   2: 94627.309 ops/s
# Warmup Iteration   3: 93486.083 ops/s
# Warmup Iteration   4: 93273.498 ops/s
# Warmup Iteration   5: 92827.212 ops/s
Iteration   1: 91683.229 ops/s
Iteration   2: 92696.808 ops/s
Iteration   3: 92531.551 ops/s
Iteration   4: 92440.433 ops/s
Iteration   5: 91668.637 ops/s
Iteration   6: 92664.557 ops/s
Iteration   7: 92872.866 ops/s
Iteration   8: 90887.224 ops/s
Iteration   9: 91370.032 ops/s
Iteration  10: 92552.980 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  95709.955 ?(99.9%) 4906.596 ops/s [Average]
  (min, avg, max) = (90887.224, 95709.955, 107297.152), stdev = 5650.443
  CI (99.9%): [90803.359, 100616.551] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
77507.030 ops/s
# Warmup Iteration   2: 91834.060 ops/s
# Warmup Iteration   3: 91316.794 ops/s
# Warmup Iteration   4: 90918.338 ops/s
# Warmup Iteration   5: 90396.986 ops/s
Iteration   1: 88999.980 ops/s
Iteration   2: 88849.976 ops/s
Iteration   3: 91701.031 ops/s
Iteration   4: 89522.759 ops/s
Iteration   5: 90423.571 ops/s
Iteration   6: 90422.258 ops/s
Iteration   7: 89765.924 ops/s
Iteration   8: 89553.094 ops/s
Iteration   9: 90316.420 ops/s
Iteration  10: 95175.630 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
80411.742 ops/s
# Warmup Iteration   2: 98060.256 ops/s
# Warmup Iteration   3: 100363.706 ops/s
# Warmup Iteration   4: 99973.972 ops/s
# Warmup Iteration   5: 91775.535 ops/s
Iteration   1: 94325.052 ops/s
Iteration   2: 91503.734 ops/s
Iteration   3: 93460.060 ops/s
Iteration   4: 91280.439 ops/s
Iteration   5: 93374.341 ops/s
Iteration   6: 92940.952 ops/s
Iteration   7: 91529.554 ops/s
Iteration   8: 91491.633 ops/s
Iteration   9: 91792.959 ops/s
Iteration  10: 97115.961 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  91677.266 ?(99.9%) 1886.859 ops/s [Average]
  (min, avg, max) = (88849.976, 91677.266, 97115.961), stdev = 2172.910
  CI (99.9%): [89790.407, 93564.126] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt       Score       Error  Units
Deserialization.dsljson              thrpt   20  513567.257 ? 20121.433  ops/s
Deserialization.dsljson_reflection   thrpt   20  472000.194 ? 26211.630  ops/s
Deserialization.gson                 thrpt   20   88841.991 ?  3911.273  ops/s
Deserialization.jackson              thrpt   20   95709.955 ?  4906.596  ops/s
Deserialization.jackson_afterburner  thrpt   20   91677.266 ?  1886.859  ops/s
