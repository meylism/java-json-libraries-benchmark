# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 456770.086 ops/s
# Warmup Iteration   2: 444021.707 ops/s
# Warmup Iteration   3: 478489.121 ops/s
# Warmup Iteration   4: 436427.583 ops/s
# Warmup Iteration   5: 423380.896 ops/s
Iteration   1: 425624.948 ops/s
Iteration   2: 429220.017 ops/s
Iteration   3: 437065.629 ops/s
Iteration   4: 420855.135 ops/s
Iteration   5: 428640.570 ops/s
Iteration   6: 425586.955 ops/s
Iteration   7: 438222.671 ops/s
Iteration   8: 437641.792 ops/s
Iteration   9: 431783.229 ops/s
Iteration  10: 423456.426 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
# Warmup Iteration   1: 437826.406 ops/s
# Warmup Iteration   2: 485074.886 ops/s
# Warmup Iteration   3: 485820.157 ops/s
# Warmup Iteration   4: 528276.599 ops/s
# Warmup Iteration   5: 524952.006 ops/s
Iteration   1: 526570.006 ops/s
Iteration   2: 523467.933 ops/s
Iteration   3: 509547.689 ops/s
Iteration   4: 524048.662 ops/s
Iteration   5: 519819.076 ops/s
Iteration   6: 517498.553 ops/s
Iteration   7: 510509.021 ops/s
Iteration   8: 527130.423 ops/s
Iteration   9: 523924.450 ops/s
Iteration  10: 519708.330 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  475016.076 ?(99.9%) 40613.175 ops/s [Average]
  (min, avg, max) = (420855.135, 475016.076, 527130.423), stdev = 46770.193
  CI (99.9%): [434402.900, 515629.251] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 468684.945 ops/s
# Warmup Iteration   2: 462609.997 ops/s
# Warmup Iteration   3: 461692.862 ops/s
# Warmup Iteration   4: 441243.058 ops/s
# Warmup Iteration   5: 438123.891 ops/s
Iteration   1: 439477.086 ops/s
Iteration   2: 446045.446 ops/s
Iteration   3: 440918.980 ops/s
Iteration   4: 443307.386 ops/s
Iteration   5: 429887.605 ops/s
Iteration   6: 443804.838 ops/s
Iteration   7: 439125.703 ops/s
Iteration   8: 425919.921 ops/s
Iteration   9: 409759.416 ops/s
Iteration  10: 415764.817 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 441724.213 ops/s
# Warmup Iteration   2: 461971.428 ops/s
# Warmup Iteration   3: 475186.038 ops/s
# Warmup Iteration   4: 460439.182 ops/s
# Warmup Iteration   5: 454515.178 ops/s
Iteration   1: 443705.312 ops/s
Iteration   2: 444671.754 ops/s
Iteration   3: 425780.711 ops/s
Iteration   4: 451907.451 ops/s
Iteration   5: 459802.947 ops/s
Iteration   6: 447619.878 ops/s
Iteration   7: 445253.767 ops/s
Iteration   8: 458844.599 ops/s
Iteration   9: 451055.829 ops/s
Iteration  10: 452361.341 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  440750.739 ?(99.9%) 11517.328 ops/s [Average]
  (min, avg, max) = (409759.416, 440750.739, 459802.947), stdev = 13263.372
  CI (99.9%): [429233.411, 452268.068] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 83068.126 ops/s
# Warmup Iteration   2: 90906.087 ops/s
# Warmup Iteration   3: 92282.533 ops/s
# Warmup Iteration   4: 91846.274 ops/s
# Warmup Iteration   5: 91614.785 ops/s
Iteration   1: 90680.094 ops/s
Iteration   2: 92108.560 ops/s
Iteration   3: 90872.868 ops/s
Iteration   4: 90169.172 ops/s
Iteration   5: 92353.688 ops/s
Iteration   6: 93045.256 ops/s
Iteration   7: 89398.114 ops/s
Iteration   8: 88897.347 ops/s
Iteration   9: 91379.096 ops/s
Iteration  10: 92815.617 ops/s

# Run progress: 50.00% complete, ETA 00:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 79666.449 ops/s
# Warmup Iteration   2: 92250.705 ops/s
# Warmup Iteration   3: 93057.142 ops/s
# Warmup Iteration   4: 91727.778 ops/s
# Warmup Iteration   5: 92306.591 ops/s
Iteration   1: 91546.567 ops/s
Iteration   2: 90811.099 ops/s
Iteration   3: 91561.036 ops/s
Iteration   4: 90776.172 ops/s
Iteration   5: 91782.867 ops/s
Iteration   6: 91288.952 ops/s
Iteration   7: 91724.648 ops/s
Iteration   8: 90638.699 ops/s
Iteration   9: 90886.628 ops/s
Iteration  10: 90775.778 ops/s


Result "com.meylism.databind.Deserialization.gson":
  91175.613 ?(99.9%) 890.429 ops/s [Average]
  (min, avg, max) = (88897.347, 91175.613, 93045.256), stdev = 1025.420
  CI (99.9%): [90285.184, 92066.042] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 86983.220 ops/s
# Warmup Iteration   2: 95268.922 ops/s
# Warmup Iteration   3: 95942.305 ops/s
# Warmup Iteration   4: 97453.710 ops/s
# Warmup Iteration   5: 97075.298 ops/s
Iteration   1: 98297.015 ops/s
Iteration   2: 97856.006 ops/s
Iteration   3: 97824.148 ops/s
Iteration   4: 98508.703 ops/s
Iteration   5: 97657.188 ops/s
Iteration   6: 97333.380 ops/s
Iteration   7: 95535.088 ops/s
Iteration   8: 98092.816 ops/s
Iteration   9: 97821.631 ops/s
Iteration  10: 98053.269 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 85776.322 ops/s
# Warmup Iteration   2: 97951.842 ops/s
# Warmup Iteration   3: 99135.867 ops/s
# Warmup Iteration   4: 97277.605 ops/s
# Warmup Iteration   5: 97378.601 ops/s
Iteration   1: 98479.397 ops/s
Iteration   2: 97420.507 ops/s
Iteration   3: 97822.281 ops/s
Iteration   4: 97541.846 ops/s
Iteration   5: 96148.806 ops/s
Iteration   6: 97594.587 ops/s
Iteration   7: 96524.651 ops/s
Iteration   8: 95320.726 ops/s
Iteration   9: 97759.011 ops/s
Iteration  10: 99293.612 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  97544.233 ?(99.9%) 854.773 ops/s [Average]
  (min, avg, max) = (95320.726, 97544.233, 99293.612), stdev = 984.357
  CI (99.9%): [96689.461, 98399.006] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 93921.761 ops/s
# Warmup Iteration   2: 104555.392 ops/s
# Warmup Iteration   3: 103770.821 ops/s
# Warmup Iteration   4: 100969.696 ops/s
# Warmup Iteration   5: 102696.845 ops/s
Iteration   1: 102632.312 ops/s
Iteration   2: 103350.595 ops/s
Iteration   3: 103271.285 ops/s
Iteration   4: 104992.453 ops/s
Iteration   5: 103841.215 ops/s
Iteration   6: 101463.330 ops/s
Iteration   7: 105088.692 ops/s
Iteration   8: 105211.371 ops/s
Iteration   9: 105515.848 ops/s
Iteration  10: 105182.346 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 93373.848 ops/s
# Warmup Iteration   2: 102072.374 ops/s
# Warmup Iteration   3: 102177.371 ops/s
# Warmup Iteration   4: 101582.852 ops/s
# Warmup Iteration   5: 101980.872 ops/s
Iteration   1: 99875.307 ops/s
Iteration   2: 102231.470 ops/s
Iteration   3: 102684.133 ops/s
Iteration   4: 102833.041 ops/s
Iteration   5: 102371.945 ops/s
Iteration   6: 102264.131 ops/s
Iteration   7: 102753.629 ops/s
Iteration   8: 102138.914 ops/s
Iteration   9: 101974.961 ops/s
Iteration  10: 103464.445 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  103157.071 ?(99.9%) 1271.054 ops/s [Average]
  (min, avg, max) = (99875.307, 103157.071, 105515.848), stdev = 1463.748
  CI (99.9%): [101886.017, 104428.125] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt       Score       Error  Units
Deserialization.dsljson              thrpt   20  475016.076 ? 40613.175  ops/s
Deserialization.dsljson_reflection   thrpt   20  440750.739 ? 11517.328  ops/s
Deserialization.gson                 thrpt   20   91175.613 ?   890.429  ops/s
Deserialization.jackson              thrpt   20   97544.233 ?   854.773  ops/s
Deserialization.jackson_afterburner  thrpt   20  103157.071 ?  1271.054  ops/s
