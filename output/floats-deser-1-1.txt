# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 1033708.474 ops/s
# Warmup Iteration   2: 963947.359 ops/s
# Warmup Iteration   3: 981047.440 ops/s
# Warmup Iteration   4: 967762.823 ops/s
# Warmup Iteration   5: 985818.638 ops/s
Iteration   1: 1002887.321 ops/s
Iteration   2: 982638.050 ops/s
Iteration   3: 980481.342 ops/s
Iteration   4: 1001958.450 ops/s
Iteration   5: 972249.809 ops/s
Iteration   6: 989553.606 ops/s
Iteration   7: 975662.464 ops/s
Iteration   8: 999695.582 ops/s
Iteration   9: 978287.501 ops/s
Iteration  10: 997551.693 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: 887411.863 ops/s
# Warmup Iteration   2: 893060.267 ops/s
# Warmup Iteration   3: 886319.080 ops/s
# Warmup Iteration   4: 887273.870 ops/s
# Warmup Iteration   5: 912158.583 ops/s
Iteration   1: 858591.204 ops/s
Iteration   2: 938985.667 ops/s
Iteration   3: 878301.366 ops/s
Iteration   4: 913889.392 ops/s
Iteration   5: 907288.680 ops/s
Iteration   6: 846996.665 ops/s
Iteration   7: 904144.897 ops/s
Iteration   8: 928646.432 ops/s
Iteration   9: 942324.066 ops/s
Iteration  10: 931102.410 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  946561.830 ?(99.9%) 42649.584 ops/s [Average]
  (min, avg, max) = (846996.665, 946561.830, 1002887.321), stdev = 49115.324
  CI (99.9%): [903912.246, 989211.414] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: 906562.985 ops/s
# Warmup Iteration   2: 809887.452 ops/s
# Warmup Iteration   3: 811217.291 ops/s
# Warmup Iteration   4: 906306.606 ops/s
# Warmup Iteration   5: 893424.543 ops/s
Iteration   1: 896383.908 ops/s
Iteration   2: 875220.811 ops/s
Iteration   3: 861801.994 ops/s
Iteration   4: 870269.368 ops/s
Iteration   5: 917949.115 ops/s
Iteration   6: 907651.442 ops/s
Iteration   7: 888773.168 ops/s
Iteration   8: 839601.870 ops/s
Iteration   9: 884065.853 ops/s
Iteration  10: 870440.392 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: 1161758.272 ops/s
# Warmup Iteration   2: 1229581.488 ops/s
# Warmup Iteration   3: 1164587.135 ops/s
# Warmup Iteration   4: 1114669.073 ops/s
# Warmup Iteration   5: 1069048.444 ops/s
Iteration   1: 1094261.094 ops/s
Iteration   2: 1081962.319 ops/s
Iteration   3: 1086356.613 ops/s
Iteration   4: 1077428.670 ops/s
Iteration   5: 1072234.955 ops/s
Iteration   6: 1097824.611 ops/s
Iteration   7: 1090773.394 ops/s
Iteration   8: 1086620.662 ops/s
Iteration   9: 1094029.016 ops/s
Iteration  10: 1071408.119 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  983252.869 ?(99.9%) 92100.522 ops/s [Average]
  (min, avg, max) = (839601.870, 983252.869, 1097824.611), stdev = 106063.098
  CI (99.9%): [891152.347, 1075353.391] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 416539.872 ops/s
# Warmup Iteration   2: 445911.722 ops/s
# Warmup Iteration   3: 451404.757 ops/s
# Warmup Iteration   4: 450566.710 ops/s
# Warmup Iteration   5: 444329.950 ops/s
Iteration   1: 417363.705 ops/s
Iteration   2: 451794.848 ops/s
Iteration   3: 461625.791 ops/s
Iteration   4: 460240.703 ops/s
Iteration   5: 443580.938 ops/s
Iteration   6: 447016.707 ops/s
Iteration   7: 447285.630 ops/s
Iteration   8: 417668.927 ops/s
Iteration   9: 456484.531 ops/s
Iteration  10: 445522.427 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: 416323.347 ops/s
# Warmup Iteration   2: 437784.305 ops/s
# Warmup Iteration   3: 449466.387 ops/s
# Warmup Iteration   4: 440551.877 ops/s
# Warmup Iteration   5: 443032.092 ops/s
Iteration   1: 447514.098 ops/s
Iteration   2: 462579.716 ops/s
Iteration   3: 446908.218 ops/s
Iteration   4: 443633.053 ops/s
Iteration   5: 464772.122 ops/s
Iteration   6: 451648.877 ops/s
Iteration   7: 425951.688 ops/s
Iteration   8: 432403.198 ops/s
Iteration   9: 422229.548 ops/s
Iteration  10: 442937.399 ops/s


Result "com.meylism.databind.Deserialization.gson":
  444458.106 ?(99.9%) 12604.950 ops/s [Average]
  (min, avg, max) = (417363.705, 444458.106, 464772.122), stdev = 14515.879
  CI (99.9%): [431853.156, 457063.056] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: 482889.574 ops/s
# Warmup Iteration   2: 505850.439 ops/s
# Warmup Iteration   3: 527653.432 ops/s
# Warmup Iteration   4: 531114.520 ops/s
# Warmup Iteration   5: 528989.889 ops/s
Iteration   1: 520792.638 ops/s
Iteration   2: 547266.769 ops/s
Iteration   3: 487737.926 ops/s
Iteration   4: 531830.289 ops/s
Iteration   5: 540274.420 ops/s
Iteration   6: 517908.990 ops/s
Iteration   7: 531784.039 ops/s
Iteration   8: 527396.915 ops/s
Iteration   9: 516020.074 ops/s
Iteration  10: 532408.945 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: 477255.877 ops/s
# Warmup Iteration   2: 505785.389 ops/s
# Warmup Iteration   3: 505525.184 ops/s
# Warmup Iteration   4: 506243.732 ops/s
# Warmup Iteration   5: 479350.858 ops/s
Iteration   1: 500150.770 ops/s
Iteration   2: 505761.003 ops/s
Iteration   3: 507587.938 ops/s
Iteration   4: 489933.602 ops/s
Iteration   5: 494582.957 ops/s
Iteration   6: 499093.335 ops/s
Iteration   7: 517834.914 ops/s
Iteration   8: 483210.200 ops/s
Iteration   9: 475240.555 ops/s
Iteration  10: 505799.288 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  511630.778 ?(99.9%) 17371.685 ops/s [Average]
  (min, avg, max) = (475240.555, 511630.778, 547266.769), stdev = 20005.259
  CI (99.9%): [494259.093, 529002.464] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: 477424.539 ops/s
# Warmup Iteration   2: 518037.409 ops/s
# Warmup Iteration   3: 509959.045 ops/s
# Warmup Iteration   4: 504079.914 ops/s
# Warmup Iteration   5: 518037.078 ops/s
Iteration   1: 524357.045 ops/s
Iteration   2: 515149.315 ops/s
Iteration   3: 512642.641 ops/s
Iteration   4: 505391.319 ops/s
Iteration   5: 523338.852 ops/s
Iteration   6: 525345.638 ops/s
Iteration   7: 501287.035 ops/s
Iteration   8: 513908.163 ops/s
Iteration   9: 531093.882 ops/s
Iteration  10: 504140.801 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 479435.982 ops/s
# Warmup Iteration   2: 521272.144 ops/s
# Warmup Iteration   3: 510234.267 ops/s
# Warmup Iteration   4: 508239.456 ops/s
# Warmup Iteration   5: 527492.366 ops/s
Iteration   1: 480220.837 ops/s
Iteration   2: 495038.946 ops/s
Iteration   3: 517320.695 ops/s
Iteration   4: 550920.423 ops/s
Iteration   5: 525833.770 ops/s
Iteration   6: 515130.780 ops/s
Iteration   7: 519411.669 ops/s
Iteration   8: 515459.135 ops/s
Iteration   9: 507215.874 ops/s
Iteration  10: 526847.039 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  515502.693 ?(99.9%) 12856.439 ops/s [Average]
  (min, avg, max) = (480220.837, 515502.693, 550920.423), stdev = 14805.494
  CI (99.9%): [502646.254, 528359.132] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt       Score       Error  Units
Deserialization.dsljson              thrpt   20  946561.830 ? 42649.584  ops/s
Deserialization.dsljson_reflection   thrpt   20  983252.869 ? 92100.522  ops/s
Deserialization.gson                 thrpt   20  444458.106 ? 12604.950  ops/s
Deserialization.jackson              thrpt   20  511630.778 ? 17371.685  ops/s
Deserialization.jackson_afterburner  thrpt   20  515502.693 ? 12856.439  ops/s
