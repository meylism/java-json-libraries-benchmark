# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
51075.666 ops/s
# Warmup Iteration   2: 53679.167 ops/s
# Warmup Iteration   3: 53749.153 ops/s
# Warmup Iteration   4: 53633.702 ops/s
# Warmup Iteration   5: 53659.331 ops/s
Iteration   1: 53777.130 ops/s
Iteration   2: 53950.197 ops/s
Iteration   3: 53811.565 ops/s
Iteration   4: 53484.236 ops/s
Iteration   5: 53792.558 ops/s
Iteration   6: 53521.964 ops/s
Iteration   7: 53889.588 ops/s
Iteration   8: 53939.315 ops/s
Iteration   9: 53551.933 ops/s
Iteration  10: 53644.764 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
50461.120 ops/s
# Warmup Iteration   2: 52075.940 ops/s
# Warmup Iteration   3: 52237.254 ops/s
# Warmup Iteration   4: 51868.624 ops/s
# Warmup Iteration   5: 52226.802 ops/s
Iteration   1: 52350.314 ops/s
Iteration   2: 52909.981 ops/s
Iteration   3: 52779.015 ops/s
Iteration   4: 52170.136 ops/s
Iteration   5: 52696.294 ops/s
Iteration   6: 52537.026 ops/s
Iteration   7: 52713.259 ops/s
Iteration   8: 52580.253 ops/s
Iteration   9: 52659.236 ops/s
Iteration  10: 52341.982 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  53155.037 ±(99.9%) 545.412 ops/s [Average]
  (min, avg, max) = (52170.136, 53155.037, 53950.197), stdev = 628.098
  CI (99.9%): [52609.625, 53700.450] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
52182.681 ops/s
# Warmup Iteration   2: 56021.159 ops/s
# Warmup Iteration   3: 56095.601 ops/s
# Warmup Iteration   4: 56149.266 ops/s
# Warmup Iteration   5: 56067.851 ops/s
Iteration   1: 56135.113 ops/s
Iteration   2: 56101.686 ops/s
Iteration   3: 56124.231 ops/s
Iteration   4: 56108.479 ops/s
Iteration   5: 56097.020 ops/s
Iteration   6: 56008.395 ops/s
Iteration   7: 56116.514 ops/s
Iteration   8: 56103.107 ops/s
Iteration   9: 56096.713 ops/s
Iteration  10: 56083.613 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
52016.046 ops/s
# Warmup Iteration   2: 53785.310 ops/s
# Warmup Iteration   3: 53939.785 ops/s
# Warmup Iteration   4: 53814.973 ops/s
# Warmup Iteration   5: 53964.905 ops/s
Iteration   1: 53869.853 ops/s
Iteration   2: 53671.274 ops/s
Iteration   3: 53788.285 ops/s
Iteration   4: 53884.384 ops/s
Iteration   5: 53921.982 ops/s
Iteration   6: 53921.218 ops/s
Iteration   7: 53851.046 ops/s
Iteration   8: 53811.799 ops/s
Iteration   9: 53693.369 ops/s
Iteration  10: 53747.319 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  54956.770 ±(99.9%) 1017.908 ops/s [Average]
  (min, avg, max) = (53671.274, 54956.770, 56135.113), stdev = 1172.224
  CI (99.9%): [53938.862, 55974.678] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
45326.010 ops/s
# Warmup Iteration   2: 47819.801 ops/s
# Warmup Iteration   3: 47910.799 ops/s
# Warmup Iteration   4: 48066.883 ops/s
# Warmup Iteration   5: 48100.754 ops/s
Iteration   1: 48072.432 ops/s
Iteration   2: 48000.791 ops/s
Iteration   3: 48044.550 ops/s
Iteration   4: 47979.634 ops/s
Iteration   5: 47801.755 ops/s
Iteration   6: 47844.502 ops/s
Iteration   7: 48051.396 ops/s
Iteration   8: 48186.712 ops/s
Iteration   9: 47816.841 ops/s
Iteration  10: 47988.223 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
44087.539 ops/s
# Warmup Iteration   2: 47022.894 ops/s
# Warmup Iteration   3: 47257.087 ops/s
# Warmup Iteration   4: 47200.653 ops/s
# Warmup Iteration   5: 47154.272 ops/s
Iteration   1: 47169.476 ops/s
Iteration   2: 47185.509 ops/s
Iteration   3: 47195.204 ops/s
Iteration   4: 47260.442 ops/s
Iteration   5: 47203.387 ops/s
Iteration   6: 47266.581 ops/s
Iteration   7: 47209.106 ops/s
Iteration   8: 47247.700 ops/s
Iteration   9: 47224.174 ops/s
Iteration  10: 47266.638 ops/s


Result "com.meylism.databind.Serialization.gson":
  47600.753 ±(99.9%) 345.386 ops/s [Average]
  (min, avg, max) = (47169.476, 47600.753, 48186.712), stdev = 397.747
  CI (99.9%): [47255.367, 47946.138] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
51016.536 ops/s
# Warmup Iteration   2: 53871.102 ops/s
# Warmup Iteration   3: 53976.840 ops/s
# Warmup Iteration   4: 53980.291 ops/s
# Warmup Iteration   5: 54105.286 ops/s
Iteration   1: 54135.820 ops/s
Iteration   2: 53870.819 ops/s
Iteration   3: 54034.124 ops/s
Iteration   4: 54045.615 ops/s
Iteration   5: 53869.700 ops/s
Iteration   6: 53886.726 ops/s
Iteration   7: 53793.856 ops/s
Iteration   8: 54051.410 ops/s
Iteration   9: 53824.718 ops/s
Iteration  10: 53898.083 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
49846.694 ops/s
# Warmup Iteration   2: 52432.106 ops/s
# Warmup Iteration   3: 52581.987 ops/s
# Warmup Iteration   4: 52686.461 ops/s
# Warmup Iteration   5: 52592.482 ops/s
Iteration   1: 52253.332 ops/s
Iteration   2: 52382.552 ops/s
Iteration   3: 52403.092 ops/s
Iteration   4: 52344.991 ops/s
Iteration   5: 52861.289 ops/s
Iteration   6: 52823.436 ops/s
Iteration   7: 52516.796 ops/s
Iteration   8: 51597.193 ops/s
Iteration   9: 52924.384 ops/s
Iteration  10: 52532.629 ops/s


Result "com.meylism.databind.Serialization.jackson":
  53202.528 ±(99.9%) 700.256 ops/s [Average]
  (min, avg, max) = (51597.193, 53202.528, 54135.820), stdev = 806.416
  CI (99.9%): [52502.272, 53902.785] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
50057.479 ops/s
# Warmup Iteration   2: 53012.205 ops/s
# Warmup Iteration   3: 53201.366 ops/s
# Warmup Iteration   4: 53199.339 ops/s
# Warmup Iteration   5: 53186.229 ops/s
Iteration   1: 53139.444 ops/s
Iteration   2: 53150.319 ops/s
Iteration   3: 53175.767 ops/s
Iteration   4: 53064.328 ops/s
Iteration   5: 52984.183 ops/s
Iteration   6: 53130.761 ops/s
Iteration   7: 53188.660 ops/s
Iteration   8: 53254.079 ops/s
Iteration   9: 53173.829 ops/s
Iteration  10: 53171.212 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
49665.443 ops/s
# Warmup Iteration   2: 52455.174 ops/s
# Warmup Iteration   3: 52603.712 ops/s
# Warmup Iteration   4: 52600.394 ops/s
# Warmup Iteration   5: 52753.060 ops/s
Iteration   1: 52376.730 ops/s
Iteration   2: 52759.925 ops/s
Iteration   3: 52754.900 ops/s
Iteration   4: 52419.295 ops/s
Iteration   5: 52589.399 ops/s
Iteration   6: 52589.422 ops/s
Iteration   7: 52773.441 ops/s
Iteration   8: 52557.885 ops/s
Iteration   9: 52753.287 ops/s
Iteration  10: 52577.938 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  52879.240 ±(99.9%) 254.247 ops/s [Average]
  (min, avg, max) = (52376.730, 52879.240, 53254.079), stdev = 292.791
  CI (99.9%): [52624.994, 53133.487] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt      Score      Error  Units
Serialization.dsljson              thrpt   20  53155.037 ±  545.412  ops/s
Serialization.dsljson_reflection   thrpt   20  54956.770 ± 1017.908  ops/s
Serialization.gson                 thrpt   20  47600.753 ±  345.386  ops/s
Serialization.jackson              thrpt   20  53202.528 ±  700.256  ops/s
Serialization.jackson_afterburner  thrpt   20  52879.240 ±  254.247  ops/s
