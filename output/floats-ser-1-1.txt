# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 196633.312 ops/s
# Warmup Iteration   2: 200099.567 ops/s
# Warmup Iteration   3: 202316.999 ops/s
# Warmup Iteration   4: 203768.875 ops/s
# Warmup Iteration   5: 199428.707 ops/s
Iteration   1: 197232.779 ops/s
Iteration   2: 197786.276 ops/s
Iteration   3: 205073.889 ops/s
Iteration   4: 208210.314 ops/s
Iteration   5: 204566.380 ops/s
Iteration   6: 201540.447 ops/s
Iteration   7: 202986.232 ops/s
Iteration   8: 202641.218 ops/s
Iteration   9: 201458.396 ops/s
Iteration  10: 201335.276 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: 223947.752 ops/s
# Warmup Iteration   2: 243067.948 ops/s
# Warmup Iteration   3: 232510.650 ops/s
# Warmup Iteration   4: 234028.044 ops/s
# Warmup Iteration   5: 237230.871 ops/s
Iteration   1: 236111.917 ops/s
Iteration   2: 235558.244 ops/s
Iteration   3: 236302.480 ops/s
Iteration   4: 236777.467 ops/s
Iteration   5: 238112.324 ops/s
Iteration   6: 243301.457 ops/s
Iteration   7: 236721.375 ops/s
Iteration   8: 243480.723 ops/s
Iteration   9: 241745.944 ops/s
Iteration  10: 244031.210 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  220748.717 ?(99.9%) 16697.855 ops/s [Average]
  (min, avg, max) = (197232.779, 220748.717, 244031.210), stdev = 19229.275
  CI (99.9%): [204050.862, 237446.573] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: 212513.604 ops/s
# Warmup Iteration   2: 221557.650 ops/s
# Warmup Iteration   3: 220778.330 ops/s
# Warmup Iteration   4: 220613.876 ops/s
# Warmup Iteration   5: 215954.114 ops/s
Iteration   1: 221846.532 ops/s
Iteration   2: 220157.571 ops/s
Iteration   3: 215861.753 ops/s
Iteration   4: 219930.399 ops/s
Iteration   5: 217181.316 ops/s
Iteration   6: 216337.976 ops/s
Iteration   7: 217668.393 ops/s
Iteration   8: 216646.320 ops/s
Iteration   9: 224063.752 ops/s
Iteration  10: 216447.947 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: 208998.600 ops/s
# Warmup Iteration   2: 219742.613 ops/s
# Warmup Iteration   3: 221846.909 ops/s
# Warmup Iteration   4: 218656.794 ops/s
# Warmup Iteration   5: 219374.438 ops/s
Iteration   1: 220733.449 ops/s
Iteration   2: 221677.642 ops/s
Iteration   3: 210966.109 ops/s
Iteration   4: 213433.063 ops/s
Iteration   5: 223297.176 ops/s
Iteration   6: 221280.114 ops/s
Iteration   7: 218623.152 ops/s
Iteration   8: 216749.364 ops/s
Iteration   9: 225611.912 ops/s
Iteration  10: 210979.690 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  218474.681 ?(99.9%) 3491.219 ops/s [Average]
  (min, avg, max) = (210966.109, 218474.681, 225611.912), stdev = 4020.493
  CI (99.9%): [214983.463, 221965.900] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 199270.498 ops/s
# Warmup Iteration   2: 211154.036 ops/s
# Warmup Iteration   3: 209712.542 ops/s
# Warmup Iteration   4: 211020.658 ops/s
# Warmup Iteration   5: 209497.664 ops/s
Iteration   1: 213756.029 ops/s
Iteration   2: 208859.434 ops/s
Iteration   3: 206551.752 ops/s
Iteration   4: 213778.886 ops/s
Iteration   5: 215508.641 ops/s
Iteration   6: 210742.859 ops/s
Iteration   7: 218710.526 ops/s
Iteration   8: 216171.893 ops/s
Iteration   9: 210583.096 ops/s
Iteration  10: 215792.947 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: 238468.874 ops/s
# Warmup Iteration   2: 247233.377 ops/s
# Warmup Iteration   3: 259822.243 ops/s
# Warmup Iteration   4: 257239.198 ops/s
# Warmup Iteration   5: 256867.815 ops/s
Iteration   1: 265267.443 ops/s
Iteration   2: 255530.579 ops/s
Iteration   3: 250707.376 ops/s
Iteration   4: 248326.090 ops/s
Iteration   5: 253879.412 ops/s
Iteration   6: 243526.313 ops/s
Iteration   7: 250009.750 ops/s
Iteration   8: 240197.509 ops/s
Iteration   9: 241283.796 ops/s
Iteration  10: 248527.161 ops/s


Result "com.meylism.databind.Serialization.gson":
  231385.575 ?(99.9%) 17081.517 ops/s [Average]
  (min, avg, max) = (206551.752, 231385.575, 265267.443), stdev = 19671.100
  CI (99.9%): [214304.058, 248467.091] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: 273670.059 ops/s
# Warmup Iteration   2: 295218.141 ops/s
# Warmup Iteration   3: 290278.745 ops/s
# Warmup Iteration   4: 285171.488 ops/s
# Warmup Iteration   5: 289367.620 ops/s
Iteration   1: 286857.609 ops/s
Iteration   2: 284871.575 ops/s
Iteration   3: 279383.110 ops/s
Iteration   4: 268095.073 ops/s
Iteration   5: 284281.750 ops/s
Iteration   6: 279578.695 ops/s
Iteration   7: 283959.026 ops/s
Iteration   8: 282296.460 ops/s
Iteration   9: 281355.199 ops/s
Iteration  10: 277083.731 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: 240289.021 ops/s
# Warmup Iteration   2: 254110.821 ops/s
# Warmup Iteration   3: 255649.136 ops/s
# Warmup Iteration   4: 252795.194 ops/s
# Warmup Iteration   5: 246045.274 ops/s
Iteration   1: 236699.328 ops/s
Iteration   2: 256980.834 ops/s
Iteration   3: 256486.404 ops/s
Iteration   4: 253426.008 ops/s
Iteration   5: 248433.991 ops/s
Iteration   6: 254635.300 ops/s
Iteration   7: 258713.572 ops/s
Iteration   8: 236734.539 ops/s
Iteration   9: 248022.838 ops/s
Iteration  10: 248371.469 ops/s


Result "com.meylism.databind.Serialization.jackson":
  265313.326 ?(99.9%) 14908.236 ops/s [Average]
  (min, avg, max) = (236699.328, 265313.326, 286857.609), stdev = 17168.347
  CI (99.9%): [250405.089, 280221.562] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: 248791.136 ops/s
# Warmup Iteration   2: 258798.555 ops/s
# Warmup Iteration   3: 257689.741 ops/s
# Warmup Iteration   4: 257342.598 ops/s
# Warmup Iteration   5: 252872.521 ops/s
Iteration   1: 264557.353 ops/s
Iteration   2: 246523.643 ops/s
Iteration   3: 254440.992 ops/s
Iteration   4: 250876.869 ops/s
Iteration   5: 252483.582 ops/s
Iteration   6: 261840.082 ops/s
Iteration   7: 251211.654 ops/s
Iteration   8: 255386.481 ops/s
Iteration   9: 256797.560 ops/s
Iteration  10: 256329.162 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 227460.669 ops/s
# Warmup Iteration   2: 239161.402 ops/s
# Warmup Iteration   3: 234761.154 ops/s
# Warmup Iteration   4: 234385.441 ops/s
# Warmup Iteration   5: 238083.707 ops/s
Iteration   1: 246235.022 ops/s
Iteration   2: 240911.968 ops/s
Iteration   3: 244901.969 ops/s
Iteration   4: 244265.492 ops/s
Iteration   5: 243305.720 ops/s
Iteration   6: 243449.666 ops/s
Iteration   7: 226023.386 ops/s
Iteration   8: 234087.586 ops/s
Iteration   9: 241381.568 ops/s
Iteration  10: 240553.029 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  247778.139 ?(99.9%) 8076.989 ops/s [Average]
  (min, avg, max) = (226023.386, 247778.139, 264557.353), stdev = 9301.473
  CI (99.9%): [239701.150, 255855.128] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score       Error  Units
Serialization.dsljson              thrpt   20  220748.717 ? 16697.855  ops/s
Serialization.dsljson_reflection   thrpt   20  218474.681 ?  3491.219  ops/s
Serialization.gson                 thrpt   20  231385.575 ? 17081.517  ops/s
Serialization.jackson              thrpt   20  265313.326 ? 14908.236  ops/s
Serialization.jackson_afterburner  thrpt   20  247778.139 ?  8076.989  ops/s
