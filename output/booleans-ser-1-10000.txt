# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 122.781 ops/s
# Warmup Iteration   2: 119.402 ops/s
# Warmup Iteration   3: 124.109 ops/s
# Warmup Iteration   4: 123.620 ops/s
# Warmup Iteration   5: 121.528 ops/s
Iteration   1: 112.489 ops/s
Iteration   2: 126.171 ops/s
Iteration   3: 129.238 ops/s
Iteration   4: 127.711 ops/s
Iteration   5: 127.358 ops/s
Iteration   6: 128.614 ops/s
Iteration   7: 127.744 ops/s
Iteration   8: 129.098 ops/s
Iteration   9: 128.373 ops/s
Iteration  10: 128.131 ops/s

# Run progress: 10.00% complete, ETA 00:12:43
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 130.926 ops/s
# Warmup Iteration   2: 130.558 ops/s
# Warmup Iteration   3: 124.567 ops/s
# Warmup Iteration   4: 124.378 ops/s
# Warmup Iteration   5: 122.680 ops/s
Iteration   1: 122.984 ops/s
Iteration   2: 129.503 ops/s
Iteration   3: 131.041 ops/s
Iteration   4: 119.051 ops/s
Iteration   5: 118.915 ops/s
Iteration   6: 112.393 ops/s
Iteration   7: 113.669 ops/s
Iteration   8: 116.784 ops/s
Iteration   9: 115.962 ops/s
Iteration  10: 123.142 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  123.419 ?(99.9%) 5.530 ops/s [Average]
  (min, avg, max) = (112.393, 123.419, 131.041), stdev = 6.368
  CI (99.9%): [117.889, 128.949] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:18
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 116.608 ops/s
# Warmup Iteration   2: 117.869 ops/s
# Warmup Iteration   3: 117.101 ops/s
# Warmup Iteration   4: 122.696 ops/s
# Warmup Iteration   5: 117.294 ops/s
Iteration   1: 118.480 ops/s
Iteration   2: 119.528 ops/s
Iteration   3: 119.530 ops/s
Iteration   4: 121.881 ops/s
Iteration   5: 117.830 ops/s
Iteration   6: 119.138 ops/s
Iteration   7: 122.761 ops/s
Iteration   8: 119.634 ops/s
Iteration   9: 112.146 ops/s
Iteration  10: 112.071 ops/s

# Run progress: 30.00% complete, ETA 00:09:53
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 126.471 ops/s
# Warmup Iteration   2: 123.688 ops/s
# Warmup Iteration   3: 130.630 ops/s
# Warmup Iteration   4: 125.790 ops/s
# Warmup Iteration   5: 119.177 ops/s
Iteration   1: 119.900 ops/s
Iteration   2: 115.068 ops/s
Iteration   3: 117.981 ops/s
Iteration   4: 112.677 ops/s
Iteration   5: 119.412 ops/s
Iteration   6: 118.752 ops/s
Iteration   7: 121.280 ops/s
Iteration   8: 130.216 ops/s
Iteration   9: 131.001 ops/s
Iteration  10: 127.408 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  119.835 ?(99.9%) 4.496 ops/s [Average]
  (min, avg, max) = (112.071, 119.835, 131.001), stdev = 5.178
  CI (99.9%): [115.339, 124.331] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:28
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 30.871 ops/s
# Warmup Iteration   2: 27.625 ops/s
# Warmup Iteration   3: 28.916 ops/s
# Warmup Iteration   4: 28.614 ops/s
# Warmup Iteration   5: 29.091 ops/s
Iteration   1: 31.247 ops/s
Iteration   2: 31.189 ops/s
Iteration   3: 31.601 ops/s
Iteration   4: 31.363 ops/s
Iteration   5: 28.168 ops/s
Iteration   6: 29.398 ops/s
Iteration   7: 28.552 ops/s
Iteration   8: 28.210 ops/s
Iteration   9: 28.621 ops/s
Iteration  10: 29.075 ops/s

# Run progress: 50.00% complete, ETA 00:07:13
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 31.259 ops/s
# Warmup Iteration   2: 28.818 ops/s
# Warmup Iteration   3: 30.585 ops/s
# Warmup Iteration   4: 29.339 ops/s
# Warmup Iteration   5: 28.757 ops/s
Iteration   1: 27.888 ops/s
Iteration   2: 28.555 ops/s
Iteration   3: 29.232 ops/s
Iteration   4: 28.860 ops/s
Iteration   5: 28.861 ops/s
Iteration   6: 27.950 ops/s
Iteration   7: 28.849 ops/s
Iteration   8: 29.484 ops/s
Iteration   9: 29.808 ops/s
Iteration  10: 29.136 ops/s


Result "com.meylism.databind.Serialization.gson":
  29.302 ?(99.9%) 1.011 ops/s [Average]
  (min, avg, max) = (27.888, 29.302, 31.601), stdev = 1.164
  CI (99.9%): [28.292, 30.313] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 74.508 ops/s
# Warmup Iteration   2: 81.191 ops/s
# Warmup Iteration   3: 76.877 ops/s
# Warmup Iteration   4: 79.378 ops/s
# Warmup Iteration   5: 83.495 ops/s
Iteration   1: 82.921 ops/s
Iteration   2: 83.116 ops/s
Iteration   3: 83.069 ops/s
Iteration   4: 74.637 ops/s
Iteration   5: 78.264 ops/s
Iteration   6: 76.172 ops/s
Iteration   7: 76.085 ops/s
Iteration   8: 74.190 ops/s
Iteration   9: 73.833 ops/s
Iteration  10: 71.974 ops/s

# Run progress: 70.00% complete, ETA 00:04:23
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 74.687 ops/s
# Warmup Iteration   2: 76.688 ops/s
# Warmup Iteration   3: 75.160 ops/s
# Warmup Iteration   4: 74.867 ops/s
# Warmup Iteration   5: 79.153 ops/s
Iteration   1: 76.421 ops/s
Iteration   2: 73.516 ops/s
Iteration   3: 73.078 ops/s
Iteration   4: 76.455 ops/s
Iteration   5: 75.524 ops/s
Iteration   6: 73.150 ops/s
Iteration   7: 75.845 ops/s
Iteration   8: 76.462 ops/s
Iteration   9: 75.246 ops/s
Iteration  10: 73.596 ops/s


Result "com.meylism.databind.Serialization.jackson":
  76.178 ?(99.9%) 2.881 ops/s [Average]
  (min, avg, max) = (71.974, 76.178, 83.116), stdev = 3.317
  CI (99.9%): [73.297, 79.058] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
72.733 ops/s
# Warmup Iteration   2: 75.199 ops/s
# Warmup Iteration   3: 79.483 ops/s
# Warmup Iteration   4: 79.246 ops/s
# Warmup Iteration   5: 75.146 ops/s
Iteration   1: 75.966 ops/s
Iteration   2: 80.212 ops/s
Iteration   3: 74.176 ops/s
Iteration   4: 74.645 ops/s
Iteration   5: 73.422 ops/s
Iteration   6: 72.544 ops/s
Iteration   7: 74.772 ops/s
Iteration   8: 74.144 ops/s
Iteration   9: 74.361 ops/s
Iteration  10: 77.750 ops/s

# Run progress: 90.00% complete, ETA 00:01:27
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
77.188 ops/s
# Warmup Iteration   2: 77.178 ops/s
# Warmup Iteration   3: 80.198 ops/s
# Warmup Iteration   4: 83.657 ops/s
# Warmup Iteration   5: 79.573 ops/s
Iteration   1: 80.357 ops/s
Iteration   2: 80.145 ops/s
Iteration   3: 78.157 ops/s
Iteration   4: 75.256 ops/s
Iteration   5: 79.614 ops/s
Iteration   6: 79.615 ops/s
Iteration   7: 77.272 ops/s
Iteration   8: 78.432 ops/s
Iteration   9: 80.058 ops/s
Iteration  10: 75.502 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  76.820 ?(99.9%) 2.276 ops/s [Average]
  (min, avg, max) = (72.544, 76.820, 80.357), stdev = 2.621
  CI (99.9%): [74.544, 79.096] (assumes normal distribution)


# Run complete. Total time: 00:14:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt    Score   Error  Units
Serialization.dsljson              thrpt   20  123.419 ? 5.530  ops/s
Serialization.dsljson_reflection   thrpt   20  119.835 ? 4.496  ops/s
Serialization.gson                 thrpt   20   29.302 ? 1.011  ops/s
Serialization.jackson              thrpt   20   76.178 ? 2.881  ops/s
Serialization.jackson_afterburner  thrpt   20   76.820 ? 2.276  ops/s
