# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 122.996 ops/s
# Warmup Iteration   2: 124.828 ops/s
# Warmup Iteration   3: 125.395 ops/s
# Warmup Iteration   4: 125.416 ops/s
# Warmup Iteration   5: 124.832 ops/s
Iteration   1: 125.252 ops/s
Iteration   2: 124.479 ops/s
Iteration   3: 125.615 ops/s
Iteration   4: 119.937 ops/s
Iteration   5: 121.419 ops/s
Iteration   6: 124.183 ops/s
Iteration   7: 126.368 ops/s
Iteration   8: 125.595 ops/s
Iteration   9: 125.646 ops/s
Iteration  10: 125.308 ops/s

# Run progress: 10.00% complete, ETA 00:08:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 95.038 ops/s
# Warmup Iteration   2: 96.053 ops/s
# Warmup Iteration   3: 95.769 ops/s
# Warmup Iteration   4: 95.774 ops/s
# Warmup Iteration   5: 95.584 ops/s
Iteration   1: 95.352 ops/s
Iteration   2: 95.523 ops/s
Iteration   3: 95.862 ops/s
Iteration   4: 94.931 ops/s
Iteration   5: 95.549 ops/s
Iteration   6: 95.608 ops/s
Iteration   7: 95.826 ops/s
Iteration   8: 95.693 ops/s
Iteration   9: 95.890 ops/s
Iteration  10: 95.652 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  109.984 ?(99.9%) 12.886 ops/s [Average]
  (min, avg, max) = (94.931, 109.984, 126.368), stdev = 14.840
  CI (99.9%): [97.098, 122.871] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:33
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 125.198 ops/s
# Warmup Iteration   2: 124.084 ops/s
# Warmup Iteration   3: 124.754 ops/s
# Warmup Iteration   4: 125.113 ops/s
# Warmup Iteration   5: 124.802 ops/s
Iteration   1: 124.722 ops/s
Iteration   2: 125.024 ops/s
Iteration   3: 124.866 ops/s
Iteration   4: 125.061 ops/s
Iteration   5: 123.947 ops/s
Iteration   6: 121.024 ops/s
Iteration   7: 122.281 ops/s
Iteration   8: 124.375 ops/s
Iteration   9: 124.340 ops/s
Iteration  10: 124.361 ops/s

# Run progress: 30.00% complete, ETA 00:06:36
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 126.238 ops/s
# Warmup Iteration   2: 126.477 ops/s
# Warmup Iteration   3: 125.846 ops/s
# Warmup Iteration   4: 126.497 ops/s
# Warmup Iteration   5: 124.067 ops/s
Iteration   1: 126.456 ops/s
Iteration   2: 126.158 ops/s
Iteration   3: 126.733 ops/s
Iteration   4: 125.942 ops/s
Iteration   5: 126.409 ops/s
Iteration   6: 126.146 ops/s
Iteration   7: 121.415 ops/s
Iteration   8: 121.535 ops/s
Iteration   9: 122.897 ops/s
Iteration  10: 126.516 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  124.510 ?(99.9%) 1.582 ops/s [Average]
  (min, avg, max) = (121.024, 124.510, 126.733), stdev = 1.822
  CI (99.9%): [122.928, 126.093] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:39
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 24.690 ops/s
# Warmup Iteration   2: 24.965 ops/s
# Warmup Iteration   3: 25.076 ops/s
# Warmup Iteration   4: 24.925 ops/s
# Warmup Iteration   5: 25.110 ops/s
Iteration   1: 24.746 ops/s
Iteration   2: 25.011 ops/s
Iteration   3: 24.984 ops/s
Iteration   4: 25.027 ops/s
Iteration   5: 25.025 ops/s
Iteration   6: 24.977 ops/s
Iteration   7: 24.330 ops/s
Iteration   8: 23.344 ops/s
Iteration   9: 24.819 ops/s
Iteration  10: 24.743 ops/s

# Run progress: 50.00% complete, ETA 00:04:46
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 26.836 ops/s
# Warmup Iteration   2: 27.163 ops/s
# Warmup Iteration   3: 27.153 ops/s
# Warmup Iteration   4: 27.226 ops/s
# Warmup Iteration   5: 27.288 ops/s
Iteration   1: 27.240 ops/s
Iteration   2: 27.212 ops/s
Iteration   3: 27.331 ops/s
Iteration   4: 27.119 ops/s
Iteration   5: 27.307 ops/s
Iteration   6: 27.250 ops/s
Iteration   7: 27.187 ops/s
Iteration   8: 24.375 ops/s
Iteration   9: 25.598 ops/s
Iteration  10: 26.187 ops/s


Result "com.meylism.databind.Serialization.gson":
  25.691 ?(99.9%) 1.109 ops/s [Average]
  (min, avg, max) = (23.344, 25.691, 27.331), stdev = 1.277
  CI (99.9%): [24.582, 26.800] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:50
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 81.225 ops/s
# Warmup Iteration   2: 82.113 ops/s
# Warmup Iteration   3: 82.064 ops/s
# Warmup Iteration   4: 82.087 ops/s
# Warmup Iteration   5: 82.420 ops/s
Iteration   1: 82.435 ops/s
Iteration   2: 82.069 ops/s
Iteration   3: 82.173 ops/s
Iteration   4: 82.258 ops/s
Iteration   5: 81.912 ops/s
Iteration   6: 82.314 ops/s
Iteration   7: 82.328 ops/s
Iteration   8: 82.463 ops/s
Iteration   9: 76.541 ops/s
Iteration  10: 82.226 ops/s

# Run progress: 70.00% complete, ETA 00:02:52
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 73.921 ops/s
# Warmup Iteration   2: 81.354 ops/s
# Warmup Iteration   3: 81.759 ops/s
# Warmup Iteration   4: 81.880 ops/s
# Warmup Iteration   5: 82.117 ops/s
Iteration   1: 82.239 ops/s
Iteration   2: 82.477 ops/s
Iteration   3: 81.633 ops/s
Iteration   4: 82.440 ops/s
Iteration   5: 81.632 ops/s
Iteration   6: 82.098 ops/s
Iteration   7: 82.276 ops/s
Iteration   8: 82.151 ops/s
Iteration   9: 79.469 ops/s
Iteration  10: 76.906 ops/s


Result "com.meylism.databind.Serialization.jackson":
  81.502 ?(99.9%) 1.528 ops/s [Average]
  (min, avg, max) = (76.541, 81.502, 82.477), stdev = 1.760
  CI (99.9%): [79.974, 83.030] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
56.863 ops/s
# Warmup Iteration   2: 56.278 ops/s
# Warmup Iteration   3: 58.122 ops/s
# Warmup Iteration   4: 58.349 ops/s
# Warmup Iteration   5: 58.341 ops/s
Iteration   1: 58.633 ops/s
Iteration   2: 58.476 ops/s
Iteration   3: 58.644 ops/s
Iteration   4: 58.306 ops/s
Iteration   5: 58.227 ops/s
Iteration   6: 58.319 ops/s
Iteration   7: 58.302 ops/s
Iteration   8: 58.356 ops/s
Iteration   9: 58.169 ops/s
Iteration  10: 58.285 ops/s

# Run progress: 90.00% complete, ETA 00:00:57
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
79.876 ops/s
# Warmup Iteration   2: 81.700 ops/s
# Warmup Iteration   3: 81.820 ops/s
# Warmup Iteration   4: 81.487 ops/s
# Warmup Iteration   5: 81.708 ops/s
Iteration   1: 81.703 ops/s
Iteration   2: 81.718 ops/s
Iteration   3: 81.686 ops/s
Iteration   4: 81.906 ops/s
Iteration   5: 81.537 ops/s
Iteration   6: 81.960 ops/s
Iteration   7: 81.805 ops/s
Iteration   8: 81.805 ops/s
Iteration   9: 81.844 ops/s
Iteration  10: 81.868 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  70.077 ?(99.9%) 10.429 ops/s [Average]
  (min, avg, max) = (58.169, 70.077, 81.960), stdev = 12.011
  CI (99.9%): [59.648, 80.507] (assumes normal distribution)


# Run complete. Total time: 00:09:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt    Score    Error  Units
Serialization.dsljson              thrpt   20  109.984 ? 12.886  ops/s
Serialization.dsljson_reflection   thrpt   20  124.510 ?  1.582  ops/s
Serialization.gson                 thrpt   20   25.691 ?  1.109  ops/s
Serialization.jackson              thrpt   20   81.502 ?  1.528  ops/s
Serialization.jackson_afterburner  thrpt   20   70.077 ? 10.429  ops/s
