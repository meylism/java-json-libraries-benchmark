# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
11988.517 ops/s
# Warmup Iteration   2: 13231.454 ops/s
# Warmup Iteration   3: 13219.934 ops/s
# Warmup Iteration   4: 13124.266 ops/s
# Warmup Iteration   5: 13129.414 ops/s
Iteration   1: 13147.264 ops/s
Iteration   2: 13304.169 ops/s
Iteration   3: 13271.184 ops/s
Iteration   4: 13024.501 ops/s
Iteration   5: 12769.058 ops/s
Iteration   6: 12572.218 ops/s
Iteration   7: 13488.954 ops/s
Iteration   8: 13395.977 ops/s
Iteration   9: 13214.163 ops/s
Iteration  10: 13483.027 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
14062.225 ops/s
# Warmup Iteration   2: 15366.928 ops/s
# Warmup Iteration   3: 15220.783 ops/s
# Warmup Iteration   4: 15460.877 ops/s
# Warmup Iteration   5: 15622.302 ops/s
Iteration   1: 15155.076 ops/s
Iteration   2: 15600.351 ops/s
Iteration   3: 15787.550 ops/s
Iteration   4: 15921.608 ops/s
Iteration   5: 15335.876 ops/s
Iteration   6: 15419.627 ops/s
Iteration   7: 15529.378 ops/s
Iteration   8: 15216.860 ops/s
Iteration   9: 14502.791 ops/s
Iteration  10: 14702.777 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  14242.120 ?(99.9%) 1010.625 ops/s [Average]
  (min, avg, max) = (12572.218, 14242.120, 15921.608), stdev = 1163.838
  CI (99.9%): [13231.495, 15252.746] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
14093.515 ops/s
# Warmup Iteration   2: 15646.791 ops/s
# Warmup Iteration   3: 15643.240 ops/s
# Warmup Iteration   4: 15372.010 ops/s
# Warmup Iteration   5: 15387.755 ops/s
Iteration   1: 15016.751 ops/s
Iteration   2: 15937.705 ops/s
Iteration   3: 15838.338 ops/s
Iteration   4: 16057.650 ops/s
Iteration   5: 15915.965 ops/s
Iteration   6: 15973.668 ops/s
Iteration   7: 15911.353 ops/s
Iteration   8: 15976.183 ops/s
Iteration   9: 15718.255 ops/s
Iteration  10: 15622.158 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
14176.048 ops/s
# Warmup Iteration   2: 15608.756 ops/s
# Warmup Iteration   3: 15164.693 ops/s
# Warmup Iteration   4: 15308.482 ops/s
# Warmup Iteration   5: 15214.766 ops/s
Iteration   1: 14947.604 ops/s
Iteration   2: 13794.169 ops/s
Iteration   3: 15023.885 ops/s
Iteration   4: 15169.935 ops/s
Iteration   5: 14775.667 ops/s
Iteration   6: 15626.401 ops/s
Iteration   7: 14882.100 ops/s
Iteration   8: 15130.060 ops/s
Iteration   9: 14286.457 ops/s
Iteration  10: 14724.051 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  15316.418 ?(99.9%) 553.412 ops/s [Average]
  (min, avg, max) = (13794.169, 15316.418, 16057.650), stdev = 637.310
  CI (99.9%): [14763.006, 15869.830] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:05
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
7109.926 ops/s
# Warmup Iteration   2: 7835.439 ops/s
# Warmup Iteration   3: 7818.654 ops/s
# Warmup Iteration   4: 7440.841 ops/s
# Warmup Iteration   5: 7718.996 ops/s
Iteration   1: 7921.302 ops/s
Iteration   2: 7855.315 ops/s
Iteration   3: 7769.860 ops/s
Iteration   4: 7787.551 ops/s
Iteration   5: 7305.057 ops/s
Iteration   6: 7904.187 ops/s
Iteration   7: 7871.964 ops/s
Iteration   8: 7661.085 ops/s
Iteration   9: 7653.973 ops/s
Iteration  10: 8043.344 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
7199.881 ops/s
# Warmup Iteration   2: 7818.502 ops/s
# Warmup Iteration   3: 7969.761 ops/s
# Warmup Iteration   4: 8041.343 ops/s
# Warmup Iteration   5: 8000.751 ops/s
Iteration   1: 7991.821 ops/s
Iteration   2: 7672.300 ops/s
Iteration   3: 8139.549 ops/s
Iteration   4: 8058.780 ops/s
Iteration   5: 7547.143 ops/s
Iteration   6: 7746.233 ops/s
Iteration   7: 8001.701 ops/s
Iteration   8: 7714.332 ops/s
Iteration   9: 7937.923 ops/s
Iteration  10: 7813.608 ops/s


Result "com.meylism.databind.Deserialization.gson":
  7819.851 ?(99.9%) 171.512 ops/s [Average]
  (min, avg, max) = (7305.057, 7819.851, 8139.549), stdev = 197.513
  CI (99.9%): [7648.340, 7991.363] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
8786.401 ops/s
# Warmup Iteration   2: 10135.427 ops/s
# Warmup Iteration   3: 10246.004 ops/s
# Warmup Iteration   4: 9847.946 ops/s
# Warmup Iteration   5: 10073.563 ops/s
Iteration   1: 9926.804 ops/s
Iteration   2: 10312.166 ops/s
Iteration   3: 9849.719 ops/s
Iteration   4: 10295.657 ops/s
Iteration   5: 10417.090 ops/s
Iteration   6: 10274.010 ops/s
Iteration   7: 10010.577 ops/s
Iteration   8: 9632.948 ops/s
Iteration   9: 9745.214 ops/s
Iteration  10: 9992.887 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
8770.104 ops/s
# Warmup Iteration   2: 10186.659 ops/s
# Warmup Iteration   3: 10122.688 ops/s
# Warmup Iteration   4: 9949.125 ops/s
# Warmup Iteration   5: 9765.133 ops/s
Iteration   1: 9308.417 ops/s
Iteration   2: 9828.318 ops/s
Iteration   3: 9739.048 ops/s
Iteration   4: 9925.406 ops/s
Iteration   5: 9201.318 ops/s
Iteration   6: 9531.876 ops/s
Iteration   7: 9995.188 ops/s
Iteration   8: 9651.235 ops/s
Iteration   9: 9516.640 ops/s
Iteration  10: 9800.718 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  9847.762 ?(99.9%) 283.948 ops/s [Average]
  (min, avg, max) = (9201.318, 9847.762, 10417.090), stdev = 326.995
  CI (99.9%): [9563.814, 10131.710] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
8909.868 ops/s
# Warmup Iteration   2: 9981.411 ops/s
# Warmup Iteration   3: 10078.986 ops/s
# Warmup Iteration   4: 9695.176 ops/s
# Warmup Iteration   5: 9873.572 ops/s
Iteration   1: 10150.875 ops/s
Iteration   2: 10074.017 ops/s
Iteration   3: 10000.279 ops/s
Iteration   4: 10326.521 ops/s
Iteration   5: 9652.884 ops/s
Iteration   6: 9955.635 ops/s
Iteration   7: 10189.944 ops/s
Iteration   8: 9994.627 ops/s
Iteration   9: 9909.393 ops/s
Iteration  10: 9869.846 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
8780.930 ops/s
# Warmup Iteration   2: 10055.288 ops/s
# Warmup Iteration   3: 10214.029 ops/s
# Warmup Iteration   4: 9995.687 ops/s
# Warmup Iteration   5: 10246.501 ops/s
Iteration   1: 10302.250 ops/s
Iteration   2: 10248.496 ops/s
Iteration   3: 10077.969 ops/s
Iteration   4: 10211.839 ops/s
Iteration   5: 9941.583 ops/s
Iteration   6: 9407.986 ops/s
Iteration   7: 9382.602 ops/s
Iteration   8: 9406.734 ops/s
Iteration   9: 9460.079 ops/s
Iteration  10: 9694.352 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  9912.896 ?(99.9%) 270.438 ops/s [Average]
  (min, avg, max) = (9382.602, 9912.896, 10326.521), stdev = 311.437
  CI (99.9%): [9642.458, 10183.333] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt      Score      Error  Units
Deserialization.dsljson              thrpt   20  14242.120 ? 1010.625  ops/s
Deserialization.dsljson_reflection   thrpt   20  15316.418 ?  553.412  ops/s
Deserialization.gson                 thrpt   20   7819.851 ?  171.512  ops/s
Deserialization.jackson              thrpt   20   9847.762 ?  283.948  ops/s
Deserialization.jackson_afterburner  thrpt   20   9912.896 ?  270.438  ops/s
