# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2899.485 ops/s
# Warmup Iteration   2: 3266.858 ops/s
# Warmup Iteration   3: 3269.834 ops/s
# Warmup Iteration   4: 3269.480 ops/s
# Warmup Iteration   5: 3272.548 ops/s
Iteration   1: 3265.557 ops/s
Iteration   2: 3270.988 ops/s
Iteration   3: 3266.504 ops/s
Iteration   4: 3268.995 ops/s
Iteration   5: 3263.913 ops/s
Iteration   6: 3265.741 ops/s
Iteration   7: 3266.584 ops/s
Iteration   8: 3264.079 ops/s
Iteration   9: 3276.766 ops/s
Iteration  10: 3269.766 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2875.960 ops/s
# Warmup Iteration   2: 3284.401 ops/s
# Warmup Iteration   3: 3296.506 ops/s
# Warmup Iteration   4: 3301.466 ops/s
# Warmup Iteration   5: 3294.919 ops/s
Iteration   1: 3292.328 ops/s
Iteration   2: 3302.702 ops/s
Iteration   3: 3287.460 ops/s
Iteration   4: 3301.160 ops/s
Iteration   5: 3294.624 ops/s
Iteration   6: 3301.744 ops/s
Iteration   7: 3297.532 ops/s
Iteration   8: 3302.355 ops/s
Iteration   9: 3298.294 ops/s
Iteration  10: 3292.866 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  3282.498 ±(99.9%) 13.576 ops/s [Average]
  (min, avg, max) = (3263.913, 3282.498, 3302.702), stdev = 15.634
  CI (99.9%): [3268.922, 3296.073] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:49
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2934.231 ops/s
# Warmup Iteration   2: 3325.037 ops/s
# Warmup Iteration   3: 3323.027 ops/s
# Warmup Iteration   4: 3326.841 ops/s
# Warmup Iteration   5: 3331.210 ops/s
Iteration   1: 3325.767 ops/s
Iteration   2: 3326.363 ops/s
Iteration   3: 3318.239 ops/s
Iteration   4: 3324.109 ops/s
Iteration   5: 3321.834 ops/s
Iteration   6: 3317.446 ops/s
Iteration   7: 3320.976 ops/s
Iteration   8: 3330.373 ops/s
Iteration   9: 3324.540 ops/s
Iteration  10: 3329.321 ops/s

# Run progress: 30.00% complete, ETA 00:09:28
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2958.155 ops/s
# Warmup Iteration   2: 3340.457 ops/s
# Warmup Iteration   3: 3343.900 ops/s
# Warmup Iteration   4: 3343.544 ops/s
# Warmup Iteration   5: 3342.936 ops/s
Iteration   1: 3341.284 ops/s
Iteration   2: 3342.555 ops/s
Iteration   3: 3344.591 ops/s
Iteration   4: 3341.974 ops/s
Iteration   5: 3338.030 ops/s
Iteration   6: 3341.439 ops/s
Iteration   7: 3346.855 ops/s
Iteration   8: 3341.513 ops/s
Iteration   9: 3345.058 ops/s
Iteration  10: 3335.487 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  3332.888 ±(99.9%) 8.646 ops/s [Average]
  (min, avg, max) = (3317.446, 3332.888, 3346.855), stdev = 9.957
  CI (99.9%): [3324.242, 3341.534] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:07
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1355.139 ops/s
# Warmup Iteration   2: 1526.111 ops/s
# Warmup Iteration   3: 1527.265 ops/s
# Warmup Iteration   4: 1528.289 ops/s
# Warmup Iteration   5: 1516.976 ops/s
Iteration   1: 1527.144 ops/s
Iteration   2: 1524.514 ops/s
Iteration   3: 1525.738 ops/s
Iteration   4: 1520.608 ops/s
Iteration   5: 1524.747 ops/s
Iteration   6: 1521.426 ops/s
Iteration   7: 1526.070 ops/s
Iteration   8: 1515.506 ops/s
Iteration   9: 1527.302 ops/s
Iteration  10: 1525.310 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1254.528 ops/s
# Warmup Iteration   2: 1441.515 ops/s
# Warmup Iteration   3: 1442.074 ops/s
# Warmup Iteration   4: 1441.905 ops/s
# Warmup Iteration   5: 1437.639 ops/s
Iteration   1: 1435.741 ops/s
Iteration   2: 1440.729 ops/s
Iteration   3: 1440.330 ops/s
Iteration   4: 1438.811 ops/s
Iteration   5: 1440.874 ops/s
Iteration   6: 1441.240 ops/s
Iteration   7: 1441.684 ops/s
Iteration   8: 1429.944 ops/s
Iteration   9: 1438.329 ops/s
Iteration  10: 1424.064 ops/s


Result "com.meylism.databind.Deserialization.gson":
  1480.506 ±(99.9%) 38.822 ops/s [Average]
  (min, avg, max) = (1424.064, 1480.506, 1527.302), stdev = 44.707
  CI (99.9%): [1441.684, 1519.327] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1645.135 ops/s
# Warmup Iteration   2: 1928.649 ops/s
# Warmup Iteration   3: 1933.820 ops/s
# Warmup Iteration   4: 1932.818 ops/s
# Warmup Iteration   5: 1937.018 ops/s
Iteration   1: 1939.510 ops/s
Iteration   2: 1929.925 ops/s
Iteration   3: 1923.690 ops/s
Iteration   4: 1935.390 ops/s
Iteration   5: 1932.917 ops/s
Iteration   6: 1938.984 ops/s
Iteration   7: 1940.129 ops/s
Iteration   8: 1939.212 ops/s
Iteration   9: 1938.178 ops/s
Iteration  10: 1937.024 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1558.753 ops/s
# Warmup Iteration   2: 1906.049 ops/s
# Warmup Iteration   3: 1904.529 ops/s
# Warmup Iteration   4: 1899.604 ops/s
# Warmup Iteration   5: 1905.206 ops/s
Iteration   1: 1905.514 ops/s
Iteration   2: 1898.013 ops/s
Iteration   3: 1904.243 ops/s
Iteration   4: 1892.567 ops/s
Iteration   5: 1904.183 ops/s
Iteration   6: 1903.668 ops/s
Iteration   7: 1897.608 ops/s
Iteration   8: 1854.200 ops/s
Iteration   9: 1904.974 ops/s
Iteration  10: 1905.442 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  1916.269 ±(99.9%) 19.774 ops/s [Average]
  (min, avg, max) = (1854.200, 1916.269, 1940.129), stdev = 22.772
  CI (99.9%): [1896.494, 1936.043] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1609.980 ops/s
# Warmup Iteration   2: 1944.108 ops/s
# Warmup Iteration   3: 1943.545 ops/s
# Warmup Iteration   4: 1940.246 ops/s
# Warmup Iteration   5: 1943.807 ops/s
Iteration   1: 1938.517 ops/s
Iteration   2: 1936.117 ops/s
Iteration   3: 1929.911 ops/s
Iteration   4: 1943.701 ops/s
Iteration   5: 1939.913 ops/s
Iteration   6: 1943.458 ops/s
Iteration   7: 1944.892 ops/s
Iteration   8: 1946.081 ops/s
Iteration   9: 1943.234 ops/s
Iteration  10: 1942.378 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1623.765 ops/s
# Warmup Iteration   2: 1919.927 ops/s
# Warmup Iteration   3: 1919.792 ops/s
# Warmup Iteration   4: 1914.764 ops/s
# Warmup Iteration   5: 1920.911 ops/s
Iteration   1: 1917.992 ops/s
Iteration   2: 1917.251 ops/s
Iteration   3: 1914.592 ops/s
Iteration   4: 1914.948 ops/s
Iteration   5: 1915.238 ops/s
Iteration   6: 1921.287 ops/s
Iteration   7: 1921.511 ops/s
Iteration   8: 1921.127 ops/s
Iteration   9: 1920.729 ops/s
Iteration  10: 1922.080 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  1929.748 ±(99.9%) 10.444 ops/s [Average]
  (min, avg, max) = (1914.592, 1929.748, 1946.081), stdev = 12.027
  CI (99.9%): [1919.304, 1940.192] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt     Score    Error  Units
Deserialization.dsljson              thrpt   20  3282.498 ± 13.576  ops/s
Deserialization.dsljson_reflection   thrpt   20  3332.888 ±  8.646  ops/s
Deserialization.gson                 thrpt   20  1480.506 ± 38.822  ops/s
Deserialization.jackson              thrpt   20  1916.269 ± 19.774  ops/s
Deserialization.jackson_afterburner  thrpt   20  1929.748 ± 10.444  ops/s
