# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
11522.800 ops/s
# Warmup Iteration   2: 12323.292 ops/s
# Warmup Iteration   3: 12376.107 ops/s
# Warmup Iteration   4: 12368.506 ops/s
# Warmup Iteration   5: 12370.897 ops/s
Iteration   1: 12384.250 ops/s
Iteration   2: 12346.536 ops/s
Iteration   3: 12382.475 ops/s
Iteration   4: 12377.150 ops/s
Iteration   5: 12371.811 ops/s
Iteration   6: 12365.412 ops/s
Iteration   7: 12365.478 ops/s
Iteration   8: 12329.050 ops/s
Iteration   9: 12375.554 ops/s
Iteration  10: 12384.242 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
11606.091 ops/s
# Warmup Iteration   2: 12316.317 ops/s
# Warmup Iteration   3: 12341.691 ops/s
# Warmup Iteration   4: 12334.653 ops/s
# Warmup Iteration   5: 12344.536 ops/s
Iteration   1: 12330.796 ops/s
Iteration   2: 12335.831 ops/s
Iteration   3: 12314.116 ops/s
Iteration   4: 12275.554 ops/s
Iteration   5: 12325.341 ops/s
Iteration   6: 12327.697 ops/s
Iteration   7: 12337.123 ops/s
Iteration   8: 12312.678 ops/s
Iteration   9: 12336.166 ops/s
Iteration  10: 12327.187 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  12345.222 ±(99.9%) 25.600 ops/s [Average]
  (min, avg, max) = (12275.554, 12345.222, 12384.250), stdev = 29.481
  CI (99.9%): [12319.623, 12370.822] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
12086.769 ops/s
# Warmup Iteration   2: 12310.230 ops/s
# Warmup Iteration   3: 12310.964 ops/s
# Warmup Iteration   4: 12284.618 ops/s
# Warmup Iteration   5: 12343.198 ops/s
Iteration   1: 12341.124 ops/s
Iteration   2: 12307.185 ops/s
Iteration   3: 12327.053 ops/s
Iteration   4: 12278.733 ops/s
Iteration   5: 12269.985 ops/s
Iteration   6: 12346.929 ops/s
Iteration   7: 12283.987 ops/s
Iteration   8: 12296.200 ops/s
Iteration   9: 12303.975 ops/s
Iteration  10: 12267.860 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
12301.413 ops/s
# Warmup Iteration   2: 13054.572 ops/s
# Warmup Iteration   3: 13069.573 ops/s
# Warmup Iteration   4: 13055.294 ops/s
# Warmup Iteration   5: 13063.177 ops/s
Iteration   1: 13015.581 ops/s
Iteration   2: 13070.726 ops/s
Iteration   3: 13035.153 ops/s
Iteration   4: 13055.436 ops/s
Iteration   5: 13063.380 ops/s
Iteration   6: 13058.956 ops/s
Iteration   7: 13036.277 ops/s
Iteration   8: 13045.250 ops/s
Iteration   9: 13060.418 ops/s
Iteration  10: 13054.718 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  12675.946 ±(99.9%) 333.465 ops/s [Average]
  (min, avg, max) = (12267.860, 12675.946, 13070.726), stdev = 384.019
  CI (99.9%): [12342.481, 13009.412] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6708.065 ops/s
# Warmup Iteration   2: 7076.750 ops/s
# Warmup Iteration   3: 7122.738 ops/s
# Warmup Iteration   4: 7121.249 ops/s
# Warmup Iteration   5: 7121.381 ops/s
Iteration   1: 7113.285 ops/s
Iteration   2: 7106.087 ops/s
Iteration   3: 7119.965 ops/s
Iteration   4: 7119.478 ops/s
Iteration   5: 7099.835 ops/s
Iteration   6: 7115.907 ops/s
Iteration   7: 7108.227 ops/s
Iteration   8: 7106.277 ops/s
Iteration   9: 7114.097 ops/s
Iteration  10: 7120.021 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6483.856 ops/s
# Warmup Iteration   2: 6885.032 ops/s
# Warmup Iteration   3: 6942.403 ops/s
# Warmup Iteration   4: 6948.608 ops/s
# Warmup Iteration   5: 6949.989 ops/s
Iteration   1: 6955.984 ops/s
Iteration   2: 6929.970 ops/s
Iteration   3: 6954.686 ops/s
Iteration   4: 6957.522 ops/s
Iteration   5: 6952.068 ops/s
Iteration   6: 6950.782 ops/s
Iteration   7: 6943.545 ops/s
Iteration   8: 6942.534 ops/s
Iteration   9: 6949.520 ops/s
Iteration  10: 6956.535 ops/s


Result "com.meylism.databind.Deserialization.gson":
  7030.816 ±(99.9%) 72.908 ops/s [Average]
  (min, avg, max) = (6929.970, 7030.816, 7120.021), stdev = 83.961
  CI (99.9%): [6957.908, 7103.724] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
15091.158 ops/s
# Warmup Iteration   2: 15971.904 ops/s
# Warmup Iteration   3: 16029.182 ops/s
# Warmup Iteration   4: 16032.976 ops/s
# Warmup Iteration   5: 16041.635 ops/s
Iteration   1: 16018.533 ops/s
Iteration   2: 16016.693 ops/s
Iteration   3: 16016.671 ops/s
Iteration   4: 16003.072 ops/s
Iteration   5: 16026.378 ops/s
Iteration   6: 16000.042 ops/s
Iteration   7: 16028.738 ops/s
Iteration   8: 16034.171 ops/s
Iteration   9: 16014.931 ops/s
Iteration  10: 16042.997 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
13966.097 ops/s
# Warmup Iteration   2: 14750.004 ops/s
# Warmup Iteration   3: 14795.019 ops/s
# Warmup Iteration   4: 14773.348 ops/s
# Warmup Iteration   5: 14779.540 ops/s
Iteration   1: 14784.205 ops/s
Iteration   2: 14773.006 ops/s
Iteration   3: 14757.946 ops/s
Iteration   4: 14771.534 ops/s
Iteration   5: 14752.865 ops/s
Iteration   6: 14787.712 ops/s
Iteration   7: 14768.354 ops/s
Iteration   8: 14400.483 ops/s
Iteration   9: 14772.071 ops/s
Iteration  10: 14782.576 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  15377.649 ±(99.9%) 576.865 ops/s [Average]
  (min, avg, max) = (14400.483, 15377.649, 16042.997), stdev = 664.319
  CI (99.9%): [14800.784, 15954.514] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
14011.134 ops/s
# Warmup Iteration   2: 14741.275 ops/s
# Warmup Iteration   3: 14822.489 ops/s
# Warmup Iteration   4: 14820.809 ops/s
# Warmup Iteration   5: 14824.841 ops/s
Iteration   1: 14769.706 ops/s
Iteration   2: 14813.331 ops/s
Iteration   3: 14765.319 ops/s
Iteration   4: 14816.324 ops/s
Iteration   5: 14789.891 ops/s
Iteration   6: 14789.606 ops/s
Iteration   7: 14817.774 ops/s
Iteration   8: 14773.710 ops/s
Iteration   9: 14808.075 ops/s
Iteration  10: 14796.486 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
13568.645 ops/s
# Warmup Iteration   2: 14224.258 ops/s
# Warmup Iteration   3: 14269.687 ops/s
# Warmup Iteration   4: 14271.073 ops/s
# Warmup Iteration   5: 14246.759 ops/s
Iteration   1: 14241.183 ops/s
Iteration   2: 14226.995 ops/s
Iteration   3: 14245.857 ops/s
Iteration   4: 14256.634 ops/s
Iteration   5: 14214.892 ops/s
Iteration   6: 14259.660 ops/s
Iteration   7: 14238.292 ops/s
Iteration   8: 14252.528 ops/s
Iteration   9: 14255.059 ops/s
Iteration  10: 14247.804 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  14518.956 ±(99.9%) 245.489 ops/s [Average]
  (min, avg, max) = (14214.892, 14518.956, 14817.774), stdev = 282.705
  CI (99.9%): [14273.468, 14764.445] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt      Score     Error  Units
Deserialization.dsljson              thrpt   20  12345.222 ±  25.600  ops/s
Deserialization.dsljson_reflection   thrpt   20  12675.946 ± 333.465  ops/s
Deserialization.gson                 thrpt   20   7030.816 ±  72.908  ops/s
Deserialization.jackson              thrpt   20  15377.649 ± 576.865  ops/s
Deserialization.jackson_afterburner  thrpt   20  14518.956 ± 245.489  ops/s
