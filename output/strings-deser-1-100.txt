# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 13226.020 ops/s
# Warmup Iteration   2: 14075.607 ops/s
# Warmup Iteration   3: 14209.946 ops/s
# Warmup Iteration   4: 14416.822 ops/s
# Warmup Iteration   5: 14321.936 ops/s
Iteration   1: 14511.316 ops/s
Iteration   2: 14434.888 ops/s
Iteration   3: 14485.739 ops/s
Iteration   4: 14517.088 ops/s
Iteration   5: 14357.297 ops/s
Iteration   6: 14449.822 ops/s
Iteration   7: 14456.431 ops/s
Iteration   8: 14056.790 ops/s
Iteration   9: 14293.038 ops/s
Iteration  10: 14338.856 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
# Warmup Iteration   1: 15001.270 ops/s
# Warmup Iteration   2: 15665.789 ops/s
# Warmup Iteration   3: 15813.949 ops/s
# Warmup Iteration   4: 15747.558 ops/s
# Warmup Iteration   5: 15791.983 ops/s
Iteration   1: 15558.902 ops/s
Iteration   2: 15908.827 ops/s
Iteration   3: 15859.914 ops/s
Iteration   4: 15847.926 ops/s
Iteration   5: 15337.196 ops/s
Iteration   6: 15839.025 ops/s
Iteration   7: 15503.239 ops/s
Iteration   8: 15786.578 ops/s
Iteration   9: 15828.588 ops/s
Iteration  10: 15759.023 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  15056.524 ?(99.9%) 610.090 ops/s [Average]
  (min, avg, max) = (14056.790, 15056.524, 15908.827), stdev = 702.581
  CI (99.9%): [14446.434, 15666.614] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 12635.680 ops/s
# Warmup Iteration   2: 13508.544 ops/s
# Warmup Iteration   3: 13589.904 ops/s
# Warmup Iteration   4: 13443.317 ops/s
# Warmup Iteration   5: 13597.256 ops/s
Iteration   1: 13630.048 ops/s
Iteration   2: 13605.954 ops/s
Iteration   3: 13627.726 ops/s
Iteration   4: 13650.515 ops/s
Iteration   5: 13640.224 ops/s
Iteration   6: 13688.238 ops/s
Iteration   7: 13693.465 ops/s
Iteration   8: 13618.154 ops/s
Iteration   9: 13592.905 ops/s
Iteration  10: 13677.981 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 15520.037 ops/s
# Warmup Iteration   2: 16249.431 ops/s
# Warmup Iteration   3: 15991.555 ops/s
# Warmup Iteration   4: 16056.686 ops/s
# Warmup Iteration   5: 15829.026 ops/s
Iteration   1: 15737.771 ops/s
Iteration   2: 15921.597 ops/s
Iteration   3: 16102.529 ops/s
Iteration   4: 16098.575 ops/s
Iteration   5: 16200.630 ops/s
Iteration   6: 16087.951 ops/s
Iteration   7: 15739.678 ops/s
Iteration   8: 16169.695 ops/s
Iteration   9: 15995.717 ops/s
Iteration  10: 16003.450 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  14824.140 ?(99.9%) 1057.427 ops/s [Average]
  (min, avg, max) = (13592.905, 14824.140, 16200.630), stdev = 1217.734
  CI (99.9%): [13766.714, 15881.567] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 10188.718 ops/s
# Warmup Iteration   2: 10583.908 ops/s
# Warmup Iteration   3: 10899.434 ops/s
# Warmup Iteration   4: 10988.036 ops/s
# Warmup Iteration   5: 11088.876 ops/s
Iteration   1: 11104.571 ops/s
Iteration   2: 11115.542 ops/s
Iteration   3: 11150.692 ops/s
Iteration   4: 10969.903 ops/s
Iteration   5: 10808.064 ops/s
Iteration   6: 10955.370 ops/s
Iteration   7: 10914.613 ops/s
Iteration   8: 10848.543 ops/s
Iteration   9: 10494.280 ops/s
Iteration  10: 11127.701 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 10755.785 ops/s
# Warmup Iteration   2: 11670.108 ops/s
# Warmup Iteration   3: 11680.536 ops/s
# Warmup Iteration   4: 11704.320 ops/s
# Warmup Iteration   5: 11628.523 ops/s
Iteration   1: 11836.786 ops/s
Iteration   2: 11809.825 ops/s
Iteration   3: 11783.202 ops/s
Iteration   4: 11826.359 ops/s
Iteration   5: 11809.929 ops/s
Iteration   6: 11836.066 ops/s
Iteration   7: 11764.101 ops/s
Iteration   8: 11720.130 ops/s
Iteration   9: 11746.979 ops/s
Iteration  10: 11816.084 ops/s


Result "com.meylism.databind.Deserialization.gson":
  11371.937 ?(99.9%) 396.231 ops/s [Average]
  (min, avg, max) = (10494.280, 11371.937, 11836.786), stdev = 456.300
  CI (99.9%): [10975.707, 11768.168] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 12909.505 ops/s
# Warmup Iteration   2: 14162.950 ops/s
# Warmup Iteration   3: 14269.249 ops/s
# Warmup Iteration   4: 13858.068 ops/s
# Warmup Iteration   5: 13834.878 ops/s
Iteration   1: 14059.454 ops/s
Iteration   2: 14327.565 ops/s
Iteration   3: 14382.365 ops/s
Iteration   4: 14321.554 ops/s
Iteration   5: 14267.531 ops/s
Iteration   6: 14134.491 ops/s
Iteration   7: 14297.618 ops/s
Iteration   8: 13873.577 ops/s
Iteration   9: 13769.301 ops/s
Iteration  10: 14380.565 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 13860.509 ops/s
# Warmup Iteration   2: 14526.729 ops/s
# Warmup Iteration   3: 14320.111 ops/s
# Warmup Iteration   4: 14490.951 ops/s
# Warmup Iteration   5: 14488.299 ops/s
Iteration   1: 14411.444 ops/s
Iteration   2: 14330.419 ops/s
Iteration   3: 14444.223 ops/s
Iteration   4: 14637.331 ops/s
Iteration   5: 14641.980 ops/s
Iteration   6: 14501.603 ops/s
Iteration   7: 13923.626 ops/s
Iteration   8: 14193.999 ops/s
Iteration   9: 14597.704 ops/s
Iteration  10: 14144.585 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  14282.047 ?(99.9%) 211.679 ops/s [Average]
  (min, avg, max) = (13769.301, 14282.047, 14641.980), stdev = 243.770
  CI (99.9%): [14070.367, 14493.726] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 13753.231 ops/s
# Warmup Iteration   2: 14485.536 ops/s
# Warmup Iteration   3: 14593.175 ops/s
# Warmup Iteration   4: 14666.952 ops/s
# Warmup Iteration   5: 14305.785 ops/s
Iteration   1: 14548.723 ops/s
Iteration   2: 13833.353 ops/s
Iteration   3: 14654.223 ops/s
Iteration   4: 14452.609 ops/s
Iteration   5: 14671.292 ops/s
Iteration   6: 14644.873 ops/s
Iteration   7: 14609.737 ops/s
Iteration   8: 14523.414 ops/s
Iteration   9: 14747.915 ops/s
Iteration  10: 14660.782 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 13399.853 ops/s
# Warmup Iteration   2: 14366.580 ops/s
# Warmup Iteration   3: 14440.047 ops/s
# Warmup Iteration   4: 14425.583 ops/s
# Warmup Iteration   5: 14481.947 ops/s
Iteration   1: 14537.638 ops/s
Iteration   2: 14225.947 ops/s
Iteration   3: 14485.971 ops/s
Iteration   4: 14646.449 ops/s
Iteration   5: 14513.876 ops/s
Iteration   6: 14353.244 ops/s
Iteration   7: 14494.026 ops/s
Iteration   8: 14498.963 ops/s
Iteration   9: 14473.972 ops/s
Iteration  10: 14458.757 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  14501.788 ?(99.9%) 171.984 ops/s [Average]
  (min, avg, max) = (13833.353, 14501.788, 14747.915), stdev = 198.057
  CI (99.9%): [14329.805, 14673.772] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt      Score      Error  Units
Deserialization.dsljson              thrpt   20  15056.524 ?  610.090  ops/s
Deserialization.dsljson_reflection   thrpt   20  14824.140 ? 1057.427  ops/s
Deserialization.gson                 thrpt   20  11371.937 ?  396.231  ops/s
Deserialization.jackson              thrpt   20  14282.047 ?  211.679  ops/s
Deserialization.jackson_afterburner  thrpt   20  14501.788 ?  171.984  ops/s
