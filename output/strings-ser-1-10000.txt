# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 125.135 ops/s
# Warmup Iteration   2: 123.391 ops/s
# Warmup Iteration   3: 126.547 ops/s
# Warmup Iteration   4: 124.194 ops/s
# Warmup Iteration   5: 122.245 ops/s
Iteration   1: 124.061 ops/s
Iteration   2: 125.808 ops/s
Iteration   3: 123.651 ops/s
Iteration   4: 122.819 ops/s
Iteration   5: 126.711 ops/s
Iteration   6: 125.590 ops/s
Iteration   7: 122.408 ops/s
Iteration   8: 121.918 ops/s
Iteration   9: 122.997 ops/s
Iteration  10: 124.055 ops/s

# Run progress: 10.00% complete, ETA 00:08:32
# Fork: 2 of 2
# Warmup Iteration   1: 127.253 ops/s
# Warmup Iteration   2: 130.923 ops/s
# Warmup Iteration   3: 131.634 ops/s
# Warmup Iteration   4: 130.920 ops/s
# Warmup Iteration   5: 131.401 ops/s
Iteration   1: 131.810 ops/s
Iteration   2: 123.054 ops/s
Iteration   3: 124.753 ops/s
Iteration   4: 128.120 ops/s
Iteration   5: 131.990 ops/s
Iteration   6: 130.748 ops/s
Iteration   7: 131.496 ops/s
Iteration   8: 132.490 ops/s
Iteration   9: 131.919 ops/s
Iteration  10: 130.872 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  126.863 ?(99.9%) 3.366 ops/s [Average]
  (min, avg, max) = (121.918, 126.863, 132.490), stdev = 3.877
  CI (99.9%): [123.497, 130.230] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:34
# Fork: 1 of 2
# Warmup Iteration   1: 124.332 ops/s
# Warmup Iteration   2: 129.158 ops/s
# Warmup Iteration   3: 124.970 ops/s
# Warmup Iteration   4: 122.924 ops/s
# Warmup Iteration   5: 123.930 ops/s
Iteration   1: 130.172 ops/s
Iteration   2: 128.478 ops/s
Iteration   3: 125.898 ops/s
Iteration   4: 131.332 ops/s
Iteration   5: 127.378 ops/s
Iteration   6: 129.916 ops/s
Iteration   7: 130.143 ops/s
Iteration   8: 130.267 ops/s
Iteration   9: 130.683 ops/s
Iteration  10: 129.073 ops/s

# Run progress: 30.00% complete, ETA 00:06:38
# Fork: 2 of 2
# Warmup Iteration   1: 126.056 ops/s
# Warmup Iteration   2: 128.113 ops/s
# Warmup Iteration   3: 127.707 ops/s
# Warmup Iteration   4: 127.914 ops/s
# Warmup Iteration   5: 127.464 ops/s
Iteration   1: 126.860 ops/s
Iteration   2: 128.843 ops/s
Iteration   3: 129.072 ops/s
Iteration   4: 129.106 ops/s
Iteration   5: 127.003 ops/s
Iteration   6: 127.133 ops/s
Iteration   7: 128.744 ops/s
Iteration   8: 128.762 ops/s
Iteration   9: 128.436 ops/s
Iteration  10: 129.625 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  128.846 ?(99.9%) 1.234 ops/s [Average]
  (min, avg, max) = (125.898, 128.846, 131.332), stdev = 1.421
  CI (99.9%): [127.612, 130.080] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:41
# Fork: 1 of 2
# Warmup Iteration   1: 71.162 ops/s
# Warmup Iteration   2: 70.253 ops/s
# Warmup Iteration   3: 68.304 ops/s
# Warmup Iteration   4: 67.497 ops/s
# Warmup Iteration   5: 68.054 ops/s
Iteration   1: 68.400 ops/s
Iteration   2: 69.356 ops/s
Iteration   3: 68.015 ops/s
Iteration   4: 68.058 ops/s
Iteration   5: 68.719 ops/s
Iteration   6: 68.382 ops/s
Iteration   7: 68.067 ops/s
Iteration   8: 67.460 ops/s
Iteration   9: 68.751 ops/s
Iteration  10: 66.998 ops/s

# Run progress: 50.00% complete, ETA 00:04:44
# Fork: 2 of 2
# Warmup Iteration   1: 99.493 ops/s
# Warmup Iteration   2: 101.506 ops/s
# Warmup Iteration   3: 100.865 ops/s
# Warmup Iteration   4: 102.434 ops/s
# Warmup Iteration   5: 102.136 ops/s
Iteration   1: 103.058 ops/s
Iteration   2: 102.807 ops/s
Iteration   3: 102.218 ops/s
Iteration   4: 101.086 ops/s
Iteration   5: 99.829 ops/s
Iteration   6: 103.354 ops/s
Iteration   7: 96.898 ops/s
Iteration   8: 96.066 ops/s
Iteration   9: 95.781 ops/s
Iteration  10: 97.020 ops/s


Result "com.meylism.databind.Serialization.gson":
  84.016 ?(99.9%) 14.199 ops/s [Average]
  (min, avg, max) = (66.998, 84.016, 103.354), stdev = 16.351
  CI (99.9%): [69.817, 98.215] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:47
# Fork: 1 of 2
# Warmup Iteration   1: 121.547 ops/s
# Warmup Iteration   2: 124.848 ops/s
# Warmup Iteration   3: 124.754 ops/s
# Warmup Iteration   4: 123.109 ops/s
# Warmup Iteration   5: 125.368 ops/s
Iteration   1: 125.714 ops/s
Iteration   2: 125.526 ops/s
Iteration   3: 126.036 ops/s
Iteration   4: 126.689 ops/s
Iteration   5: 124.763 ops/s
Iteration   6: 123.401 ops/s
Iteration   7: 118.968 ops/s
Iteration   8: 117.189 ops/s
Iteration   9: 112.671 ops/s
Iteration  10: 112.311 ops/s

# Run progress: 70.00% complete, ETA 00:02:50
# Fork: 2 of 2
# Warmup Iteration   1: 118.066 ops/s
# Warmup Iteration   2: 125.256 ops/s
# Warmup Iteration   3: 125.066 ops/s
# Warmup Iteration   4: 123.770 ops/s
# Warmup Iteration   5: 121.503 ops/s
Iteration   1: 121.096 ops/s
Iteration   2: 125.651 ops/s
Iteration   3: 124.226 ops/s
Iteration   4: 122.381 ops/s
Iteration   5: 120.574 ops/s
Iteration   6: 119.596 ops/s
Iteration   7: 116.647 ops/s
Iteration   8: 119.287 ops/s
Iteration   9: 117.180 ops/s
Iteration  10: 117.427 ops/s


Result "com.meylism.databind.Serialization.jackson":
  120.867 ?(99.9%) 3.826 ops/s [Average]
  (min, avg, max) = (112.311, 120.867, 126.689), stdev = 4.406
  CI (99.9%): [117.041, 124.693] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:53
# Fork: 1 of 2
# Warmup Iteration   1: 93.901 ops/s
# Warmup Iteration   2: 95.985 ops/s
# Warmup Iteration   3: 96.241 ops/s
# Warmup Iteration   4: 95.889 ops/s
# Warmup Iteration   5: 96.762 ops/s
Iteration   1: 93.798 ops/s
Iteration   2: 97.267 ops/s
Iteration   3: 95.466 ops/s
Iteration   4: 96.964 ops/s
Iteration   5: 97.321 ops/s
Iteration   6: 97.033 ops/s
Iteration   7: 96.087 ops/s
Iteration   8: 96.704 ops/s
Iteration   9: 97.409 ops/s
Iteration  10: 96.594 ops/s

# Run progress: 90.00% complete, ETA 00:00:56
# Fork: 2 of 2
# Warmup Iteration   1: 122.585 ops/s
# Warmup Iteration   2: 127.408 ops/s
# Warmup Iteration   3: 127.044 ops/s
# Warmup Iteration   4: 128.223 ops/s
# Warmup Iteration   5: 128.647 ops/s
Iteration   1: 128.712 ops/s
Iteration   2: 126.398 ops/s
Iteration   3: 129.354 ops/s
Iteration   4: 128.855 ops/s
Iteration   5: 128.677 ops/s
Iteration   6: 126.033 ops/s
Iteration   7: 129.154 ops/s
Iteration   8: 124.110 ops/s
Iteration   9: 129.075 ops/s
Iteration  10: 129.843 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  112.243 ?(99.9%) 14.116 ops/s [Average]
  (min, avg, max) = (93.798, 112.243, 129.843), stdev = 16.257
  CI (99.9%): [98.126, 126.359] (assumes normal distribution)


# Run complete. Total time: 00:09:29

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt    Score    Error  Units
Serialization.dsljson              thrpt   20  126.863 ?  3.366  ops/s
Serialization.dsljson_reflection   thrpt   20  128.846 ?  1.234  ops/s
Serialization.gson                 thrpt   20   84.016 ? 14.199  ops/s
Serialization.jackson              thrpt   20  120.867 ?  3.826  ops/s
Serialization.jackson_afterburner  thrpt   20  112.243 ? 14.116  ops/s
