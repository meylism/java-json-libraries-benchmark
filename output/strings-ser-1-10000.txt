# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 31.331 ops/s
# Warmup Iteration   2: 31.725 ops/s
# Warmup Iteration   3: 34.025 ops/s
# Warmup Iteration   4: 33.119 ops/s
# Warmup Iteration   5: 32.400 ops/s
Iteration   1: 31.376 ops/s
Iteration   2: 31.057 ops/s
Iteration   3: 31.573 ops/s
Iteration   4: 31.105 ops/s
Iteration   5: 31.692 ops/s
Iteration   6: 34.559 ops/s
Iteration   7: 33.057 ops/s
Iteration   8: 32.008 ops/s
Iteration   9: 32.391 ops/s
Iteration  10: 33.067 ops/s

# Run progress: 10.00% complete, ETA 00:14:09
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 32.397 ops/s
# Warmup Iteration   2: 32.242 ops/s
# Warmup Iteration   3: 32.926 ops/s
# Warmup Iteration   4: 33.105 ops/s
# Warmup Iteration   5: 32.997 ops/s
Iteration   1: 33.714 ops/s
Iteration   2: 33.926 ops/s
Iteration   3: 36.967 ops/s
Iteration   4: 36.021 ops/s
Iteration   5: 34.825 ops/s
Iteration   6: 35.539 ops/s
Iteration   7: 35.672 ops/s
Iteration   8: 31.610 ops/s
Iteration   9: 34.696 ops/s
Iteration  10: 32.948 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  33.390 ?(99.9%) 1.574 ops/s [Average]
  (min, avg, max) = (31.057, 33.390, 36.967), stdev = 1.813
  CI (99.9%): [31.816, 34.965] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:12:31
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 32.905 ops/s
# Warmup Iteration   2: 33.486 ops/s
# Warmup Iteration   3: 32.576 ops/s
# Warmup Iteration   4: 33.180 ops/s
# Warmup Iteration   5: 36.765 ops/s
Iteration   1: 34.254 ops/s
Iteration   2: 34.218 ops/s
Iteration   3: 33.915 ops/s
Iteration   4: 33.393 ops/s
Iteration   5: 33.560 ops/s
Iteration   6: 35.632 ops/s
Iteration   7: 37.773 ops/s
Iteration   8: 37.068 ops/s
Iteration   9: 36.685 ops/s
Iteration  10: 36.987 ops/s

# Run progress: 30.00% complete, ETA 00:10:56
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 36.553 ops/s
# Warmup Iteration   2: 33.971 ops/s
# Warmup Iteration   3: 34.031 ops/s
# Warmup Iteration   4: 34.539 ops/s
# Warmup Iteration   5: 35.205 ops/s
Iteration   1: 34.968 ops/s
Iteration   2: 36.620 ops/s
Iteration   3: 34.436 ops/s
Iteration   4: 33.589 ops/s
Iteration   5: 33.676 ops/s
Iteration   6: 35.377 ops/s
Iteration   7: 36.831 ops/s
Iteration   8: 36.768 ops/s
Iteration   9: 36.483 ops/s
Iteration  10: 36.642 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  35.444 ?(99.9%) 1.267 ops/s [Average]
  (min, avg, max) = (33.393, 35.444, 37.773), stdev = 1.459
  CI (99.9%): [34.177, 36.710] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:09:21
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 74.712 ops/s
# Warmup Iteration   2: 75.982 ops/s
# Warmup Iteration   3: 75.080 ops/s
# Warmup Iteration   4: 68.278 ops/s
# Warmup Iteration   5: 74.941 ops/s
Iteration   1: 75.976 ops/s
Iteration   2: 77.320 ops/s
Iteration   3: 76.834 ops/s
Iteration   4: 76.580 ops/s
Iteration   5: 76.353 ops/s
Iteration   6: 75.666 ops/s
Iteration   7: 74.869 ops/s
Iteration   8: 75.453 ops/s
Iteration   9: 75.233 ops/s
Iteration  10: 76.613 ops/s

# Run progress: 50.00% complete, ETA 00:07:42
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 72.974 ops/s
# Warmup Iteration   2: 67.219 ops/s
# Warmup Iteration   3: 67.976 ops/s
# Warmup Iteration   4: 72.440 ops/s
# Warmup Iteration   5: 74.195 ops/s
Iteration   1: 67.395 ops/s
Iteration   2: 74.657 ops/s
Iteration   3: 73.879 ops/s
Iteration   4: 72.608 ops/s
Iteration   5: 70.346 ops/s
Iteration   6: 75.248 ops/s
Iteration   7: 70.076 ops/s
Iteration   8: 67.539 ops/s
Iteration   9: 67.217 ops/s
Iteration  10: 71.940 ops/s


Result "com.meylism.databind.Serialization.gson":
  73.590 ?(99.9%) 2.915 ops/s [Average]
  (min, avg, max) = (67.217, 73.590, 77.320), stdev = 3.357
  CI (99.9%): [70.675, 76.505] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:06:06
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 31.953 ops/s
# Warmup Iteration   2: 29.924 ops/s
# Warmup Iteration   3: 30.939 ops/s
# Warmup Iteration   4: 31.536 ops/s
# Warmup Iteration   5: 29.967 ops/s
Iteration   1: 31.335 ops/s
Iteration   2: 29.492 ops/s
Iteration   3: 32.569 ops/s
Iteration   4: 32.850 ops/s
Iteration   5: 32.204 ops/s
Iteration   6: 32.310 ops/s
Iteration   7: 31.029 ops/s
Iteration   8: 32.433 ops/s
Iteration   9: 32.102 ops/s
Iteration  10: 31.936 ops/s

# Run progress: 70.00% complete, ETA 00:04:36
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 30.634 ops/s
# Warmup Iteration   2: 30.809 ops/s
# Warmup Iteration   3: 31.219 ops/s
# Warmup Iteration   4: 29.446 ops/s
# Warmup Iteration   5: 29.670 ops/s
Iteration   1: 28.996 ops/s
Iteration   2: 29.212 ops/s
Iteration   3: 32.479 ops/s
Iteration   4: 29.570 ops/s
Iteration   5: 31.012 ops/s
Iteration   6: 33.181 ops/s
Iteration   7: 32.996 ops/s
Iteration   8: 32.635 ops/s
Iteration   9: 32.436 ops/s
Iteration  10: 32.427 ops/s


Result "com.meylism.databind.Serialization.jackson":
  31.660 ?(99.9%) 1.159 ops/s [Average]
  (min, avg, max) = (28.996, 31.660, 33.181), stdev = 1.334
  CI (99.9%): [30.502, 32.819] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:03:04
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
27.302 ops/s
# Warmup Iteration   2: 29.260 ops/s
# Warmup Iteration   3: 30.271 ops/s
# Warmup Iteration   4: 27.291 ops/s
# Warmup Iteration   5: 28.320 ops/s
Iteration   1: 27.453 ops/s
Iteration   2: 26.952 ops/s
Iteration   3: 28.513 ops/s
Iteration   4: 27.225 ops/s
Iteration   5: 27.143 ops/s
Iteration   6: 27.403 ops/s
Iteration   7: 28.151 ops/s
Iteration   8: 26.971 ops/s
Iteration   9: 26.929 ops/s
Iteration  10: 27.742 ops/s

# Run progress: 90.00% complete, ETA 00:01:32
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
28.795 ops/s
# Warmup Iteration   2: 28.984 ops/s
# Warmup Iteration   3: 29.100 ops/s
# Warmup Iteration   4: 30.212 ops/s
# Warmup Iteration   5: 30.385 ops/s
Iteration   1: 27.004 ops/s
Iteration   2: 28.506 ops/s
Iteration   3: 29.266 ops/s
Iteration   4: 31.444 ops/s
Iteration   5: 32.118 ops/s
Iteration   6: 32.357 ops/s
Iteration   7: 32.187 ops/s
Iteration   8: 29.824 ops/s
Iteration   9: 30.942 ops/s
Iteration  10: 30.238 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  28.919 ?(99.9%) 1.713 ops/s [Average]
  (min, avg, max) = (26.929, 28.919, 32.357), stdev = 1.973
  CI (99.9%): [27.205, 30.632] (assumes normal distribution)


# Run complete. Total time: 00:15:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt   Score   Error  Units
Serialization.dsljson              thrpt   20  33.390 ? 1.574  ops/s
Serialization.dsljson_reflection   thrpt   20  35.444 ? 1.267  ops/s
Serialization.gson                 thrpt   20  73.590 ? 2.915  ops/s
Serialization.jackson              thrpt   20  31.660 ? 1.159  ops/s
Serialization.jackson_afterburner  thrpt   20  28.919 ? 1.713  ops/s
