# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
56.248 ops/s
# Warmup Iteration   2: 56.322 ops/s
# Warmup Iteration   3: 56.240 ops/s
# Warmup Iteration   4: 56.524 ops/s
# Warmup Iteration   5: 56.174 ops/s
Iteration   1: 56.271 ops/s
Iteration   2: 56.452 ops/s
Iteration   3: 56.194 ops/s
Iteration   4: 56.584 ops/s
Iteration   5: 56.223 ops/s
Iteration   6: 56.211 ops/s
Iteration   7: 56.269 ops/s
Iteration   8: 56.199 ops/s
Iteration   9: 56.212 ops/s
Iteration  10: 56.258 ops/s

# Run progress: 10.00% complete, ETA 00:12:31
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
56.358 ops/s
# Warmup Iteration   2: 56.194 ops/s
# Warmup Iteration   3: 56.169 ops/s
# Warmup Iteration   4: 56.130 ops/s
# Warmup Iteration   5: 56.057 ops/s
Iteration   1: 56.151 ops/s
Iteration   2: 56.358 ops/s
Iteration   3: 56.178 ops/s
Iteration   4: 56.172 ops/s
Iteration   5: 56.167 ops/s
Iteration   6: 56.107 ops/s
Iteration   7: 56.176 ops/s
Iteration   8: 56.138 ops/s
Iteration   9: 56.134 ops/s
Iteration  10: 56.444 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  56.245 ±(99.9%) 0.108 ops/s [Average]
  (min, avg, max) = (56.107, 56.245, 56.584), stdev = 0.124
  CI (99.9%): [56.137, 56.352] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:08
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
56.317 ops/s
# Warmup Iteration   2: 56.229 ops/s
# Warmup Iteration   3: 56.160 ops/s
# Warmup Iteration   4: 56.184 ops/s
# Warmup Iteration   5: 56.193 ops/s
Iteration   1: 56.469 ops/s
Iteration   2: 56.245 ops/s
Iteration   3: 56.306 ops/s
Iteration   4: 56.289 ops/s
Iteration   5: 56.165 ops/s
Iteration   6: 56.228 ops/s
Iteration   7: 56.272 ops/s
Iteration   8: 56.280 ops/s
Iteration   9: 56.350 ops/s
Iteration  10: 56.223 ops/s

# Run progress: 30.00% complete, ETA 00:09:44
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
55.924 ops/s
# Warmup Iteration   2: 56.094 ops/s
# Warmup Iteration   3: 56.020 ops/s
# Warmup Iteration   4: 56.178 ops/s
# Warmup Iteration   5: 56.131 ops/s
Iteration   1: 56.151 ops/s
Iteration   2: 56.042 ops/s
Iteration   3: 55.933 ops/s
Iteration   4: 56.171 ops/s
Iteration   5: 55.972 ops/s
Iteration   6: 56.128 ops/s
Iteration   7: 56.167 ops/s
Iteration   8: 56.201 ops/s
Iteration   9: 56.092 ops/s
Iteration  10: 56.090 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  56.189 ±(99.9%) 0.111 ops/s [Average]
  (min, avg, max) = (55.933, 56.189, 56.469), stdev = 0.128
  CI (99.9%): [56.078, 56.299] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
53.986 ops/s
# Warmup Iteration   2: 54.985 ops/s
# Warmup Iteration   3: 55.001 ops/s
# Warmup Iteration   4: 54.906 ops/s
# Warmup Iteration   5: 55.000 ops/s
Iteration   1: 55.033 ops/s
Iteration   2: 54.927 ops/s
Iteration   3: 55.023 ops/s
Iteration   4: 54.872 ops/s
Iteration   5: 55.023 ops/s
Iteration   6: 54.937 ops/s
Iteration   7: 54.997 ops/s
Iteration   8: 55.037 ops/s
Iteration   9: 55.016 ops/s
Iteration  10: 54.723 ops/s

# Run progress: 50.00% complete, ETA 00:06:57
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
54.557 ops/s
# Warmup Iteration   2: 55.186 ops/s
# Warmup Iteration   3: 55.239 ops/s
# Warmup Iteration   4: 55.240 ops/s
# Warmup Iteration   5: 55.187 ops/s
Iteration   1: 55.271 ops/s
Iteration   2: 55.184 ops/s
Iteration   3: 55.245 ops/s
Iteration   4: 55.167 ops/s
Iteration   5: 55.080 ops/s
Iteration   6: 55.178 ops/s
Iteration   7: 55.245 ops/s
Iteration   8: 55.291 ops/s
Iteration   9: 55.235 ops/s
Iteration  10: 55.174 ops/s


Result "com.meylism.databind.Serialization.gson":
  55.083 ±(99.9%) 0.131 ops/s [Average]
  (min, avg, max) = (54.723, 55.083, 55.291), stdev = 0.151
  CI (99.9%): [54.952, 55.214] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:33
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
53.096 ops/s
# Warmup Iteration   2: 53.118 ops/s
# Warmup Iteration   3: 53.315 ops/s
# Warmup Iteration   4: 53.272 ops/s
# Warmup Iteration   5: 53.127 ops/s
Iteration   1: 53.154 ops/s
Iteration   2: 53.423 ops/s
Iteration   3: 53.081 ops/s
Iteration   4: 53.294 ops/s
Iteration   5: 53.092 ops/s
Iteration   6: 53.093 ops/s
Iteration   7: 53.028 ops/s
Iteration   8: 53.063 ops/s
Iteration   9: 53.044 ops/s
Iteration  10: 53.088 ops/s

# Run progress: 70.00% complete, ETA 00:04:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
56.009 ops/s
# Warmup Iteration   2: 56.232 ops/s
# Warmup Iteration   3: 56.217 ops/s
# Warmup Iteration   4: 56.181 ops/s
# Warmup Iteration   5: 56.137 ops/s
Iteration   1: 56.071 ops/s
Iteration   2: 56.035 ops/s
Iteration   3: 56.058 ops/s
Iteration   4: 56.171 ops/s
Iteration   5: 56.045 ops/s
Iteration   6: 56.004 ops/s
Iteration   7: 54.987 ops/s
Iteration   8: 56.095 ops/s
Iteration   9: 56.010 ops/s
Iteration  10: 56.192 ops/s


Result "com.meylism.databind.Serialization.jackson":
  54.551 ±(99.9%) 1.280 ops/s [Average]
  (min, avg, max) = (53.028, 54.551, 56.192), stdev = 1.475
  CI (99.9%): [53.271, 55.832] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:46
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
52.712 ops/s
# Warmup Iteration   2: 53.000 ops/s
# Warmup Iteration   3: 52.986 ops/s
# Warmup Iteration   4: 53.076 ops/s
# Warmup Iteration   5: 53.114 ops/s
Iteration   1: 53.062 ops/s
Iteration   2: 53.012 ops/s
Iteration   3: 53.041 ops/s
Iteration   4: 53.002 ops/s
Iteration   5: 53.053 ops/s
Iteration   6: 53.079 ops/s
Iteration   7: 53.191 ops/s
Iteration   8: 53.030 ops/s
Iteration   9: 53.027 ops/s
Iteration  10: 53.115 ops/s

# Run progress: 90.00% complete, ETA 00:01:23
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
52.797 ops/s
# Warmup Iteration   2: 53.077 ops/s
# Warmup Iteration   3: 53.045 ops/s
# Warmup Iteration   4: 53.078 ops/s
# Warmup Iteration   5: 53.051 ops/s
Iteration   1: 53.168 ops/s
Iteration   2: 53.091 ops/s
Iteration   3: 53.278 ops/s
Iteration   4: 52.973 ops/s
Iteration   5: 53.203 ops/s
Iteration   6: 53.146 ops/s
Iteration   7: 53.197 ops/s
Iteration   8: 52.998 ops/s
Iteration   9: 53.215 ops/s
Iteration  10: 52.768 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  53.082 ±(99.9%) 0.099 ops/s [Average]
  (min, avg, max) = (52.768, 53.082, 53.278), stdev = 0.114
  CI (99.9%): [52.984, 53.181] (assumes normal distribution)


# Run complete. Total time: 00:13:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt   Score   Error  Units
Serialization.dsljson              thrpt   20  56.245 ± 0.108  ops/s
Serialization.dsljson_reflection   thrpt   20  56.189 ± 0.111  ops/s
Serialization.gson                 thrpt   20  55.083 ± 0.131  ops/s
Serialization.jackson              thrpt   20  54.551 ± 1.280  ops/s
Serialization.jackson_afterburner  thrpt   20  53.082 ± 0.099  ops/s
