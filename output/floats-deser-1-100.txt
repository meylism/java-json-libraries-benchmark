# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 4192.769 ops/s
# Warmup Iteration   2: 5044.872 ops/s
# Warmup Iteration   3: 5004.824 ops/s
# Warmup Iteration   4: 5079.986 ops/s
# Warmup Iteration   5: 5295.538 ops/s
Iteration   1: 5337.846 ops/s
Iteration   2: 5308.964 ops/s
Iteration   3: 5345.832 ops/s
Iteration   4: 5386.319 ops/s
Iteration   5: 5267.354 ops/s
Iteration   6: 5372.542 ops/s
Iteration   7: 5277.112 ops/s
Iteration   8: 5335.771 ops/s
Iteration   9: 5264.099 ops/s
Iteration  10: 5313.669 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 5137.386 ops/s
# Warmup Iteration   2: 4958.735 ops/s
# Warmup Iteration   3: 5053.859 ops/s
# Warmup Iteration   4: 5392.833 ops/s
# Warmup Iteration   5: 5406.271 ops/s
Iteration   1: 5374.742 ops/s
Iteration   2: 5305.945 ops/s
Iteration   3: 5304.847 ops/s
Iteration   4: 5400.248 ops/s
Iteration   5: 5452.228 ops/s
Iteration   6: 5422.055 ops/s
Iteration   7: 5449.524 ops/s
Iteration   8: 5450.580 ops/s
Iteration   9: 5311.409 ops/s
Iteration  10: 5471.096 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  5357.609 ?(99.9%) 57.219 ops/s [Average]
  (min, avg, max) = (5264.099, 5357.609, 5471.096), stdev = 65.893
  CI (99.9%): [5300.390, 5414.828] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:27
# Fork: 1 of 2
# Warmup Iteration   1: 4671.902 ops/s
# Warmup Iteration   2: 4432.525 ops/s
# Warmup Iteration   3: 4863.379 ops/s
# Warmup Iteration   4: 4433.775 ops/s
# Warmup Iteration   5: 4422.860 ops/s
Iteration   1: 4408.417 ops/s
Iteration   2: 4518.442 ops/s
Iteration   3: 4519.082 ops/s
Iteration   4: 4482.144 ops/s
Iteration   5: 4499.879 ops/s
Iteration   6: 4505.328 ops/s
Iteration   7: 4468.892 ops/s
Iteration   8: 4505.320 ops/s
Iteration   9: 4500.652 ops/s
Iteration  10: 4542.059 ops/s

# Run progress: 30.00% complete, ETA 00:06:31
# Fork: 2 of 2
# Warmup Iteration   1: 5188.453 ops/s
# Warmup Iteration   2: 5357.686 ops/s
# Warmup Iteration   3: 5293.880 ops/s
# Warmup Iteration   4: 5237.210 ops/s
# Warmup Iteration   5: 5181.443 ops/s
Iteration   1: 5333.213 ops/s
Iteration   2: 5222.043 ops/s
Iteration   3: 5255.134 ops/s
Iteration   4: 5313.370 ops/s
Iteration   5: 5218.502 ops/s
Iteration   6: 5223.598 ops/s
Iteration   7: 5331.084 ops/s
Iteration   8: 5426.064 ops/s
Iteration   9: 5381.813 ops/s
Iteration  10: 5285.463 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  4897.025 ?(99.9%) 361.326 ops/s [Average]
  (min, avg, max) = (4408.417, 4897.025, 5426.064), stdev = 416.103
  CI (99.9%): [4535.699, 5258.351] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 849.011 ops/s
# Warmup Iteration   2: 893.344 ops/s
# Warmup Iteration   3: 917.509 ops/s
# Warmup Iteration   4: 908.367 ops/s
# Warmup Iteration   5: 915.336 ops/s
Iteration   1: 915.417 ops/s
Iteration   2: 898.448 ops/s
Iteration   3: 909.556 ops/s
Iteration   4: 908.368 ops/s
Iteration   5: 881.382 ops/s
Iteration   6: 881.562 ops/s
Iteration   7: 921.553 ops/s
Iteration   8: 925.577 ops/s
Iteration   9: 916.989 ops/s
Iteration  10: 925.246 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 870.268 ops/s
# Warmup Iteration   2: 909.052 ops/s
# Warmup Iteration   3: 920.781 ops/s
# Warmup Iteration   4: 909.039 ops/s
# Warmup Iteration   5: 915.396 ops/s
Iteration   1: 922.176 ops/s
Iteration   2: 912.449 ops/s
Iteration   3: 887.954 ops/s
Iteration   4: 902.654 ops/s
Iteration   5: 905.071 ops/s
Iteration   6: 908.670 ops/s
Iteration   7: 913.191 ops/s
Iteration   8: 905.558 ops/s
Iteration   9: 903.328 ops/s
Iteration  10: 882.035 ops/s


Result "com.meylism.databind.Deserialization.gson":
  906.359 ?(99.9%) 12.220 ops/s [Average]
  (min, avg, max) = (881.382, 906.359, 925.577), stdev = 14.072
  CI (99.9%): [894.140, 918.579] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 928.699 ops/s
# Warmup Iteration   2: 975.031 ops/s
# Warmup Iteration   3: 967.910 ops/s
# Warmup Iteration   4: 981.509 ops/s
# Warmup Iteration   5: 991.302 ops/s
Iteration   1: 977.722 ops/s
Iteration   2: 971.404 ops/s
Iteration   3: 987.855 ops/s
Iteration   4: 979.588 ops/s
Iteration   5: 952.827 ops/s
Iteration   6: 984.410 ops/s
Iteration   7: 983.016 ops/s
Iteration   8: 996.199 ops/s
Iteration   9: 993.527 ops/s
Iteration  10: 976.758 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 935.168 ops/s
# Warmup Iteration   2: 965.404 ops/s
# Warmup Iteration   3: 1023.387 ops/s
# Warmup Iteration   4: 1018.108 ops/s
# Warmup Iteration   5: 1019.265 ops/s
Iteration   1: 1002.904 ops/s
Iteration   2: 1017.356 ops/s
Iteration   3: 1024.453 ops/s
Iteration   4: 985.697 ops/s
Iteration   5: 1012.480 ops/s
Iteration   6: 999.956 ops/s
Iteration   7: 994.552 ops/s
Iteration   8: 1017.673 ops/s
Iteration   9: 1001.501 ops/s
Iteration  10: 1022.196 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  994.104 ?(99.9%) 16.235 ops/s [Average]
  (min, avg, max) = (952.827, 994.104, 1024.453), stdev = 18.696
  CI (99.9%): [977.869, 1010.338] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 870.392 ops/s
# Warmup Iteration   2: 951.254 ops/s
# Warmup Iteration   3: 934.941 ops/s
# Warmup Iteration   4: 956.078 ops/s
# Warmup Iteration   5: 951.079 ops/s
Iteration   1: 962.881 ops/s
Iteration   2: 955.630 ops/s
Iteration   3: 957.137 ops/s
Iteration   4: 962.792 ops/s
Iteration   5: 966.702 ops/s
Iteration   6: 960.796 ops/s
Iteration   7: 958.219 ops/s
Iteration   8: 943.226 ops/s
Iteration   9: 951.046 ops/s
Iteration  10: 964.823 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 931.822 ops/s
# Warmup Iteration   2: 971.498 ops/s
# Warmup Iteration   3: 1028.220 ops/s
# Warmup Iteration   4: 1017.860 ops/s
# Warmup Iteration   5: 1032.370 ops/s
Iteration   1: 1008.348 ops/s
Iteration   2: 1007.302 ops/s
Iteration   3: 1006.845 ops/s
Iteration   4: 1014.905 ops/s
Iteration   5: 990.164 ops/s
Iteration   6: 992.002 ops/s
Iteration   7: 1025.479 ops/s
Iteration   8: 1020.153 ops/s
Iteration   9: 980.375 ops/s
Iteration  10: 1009.905 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  981.936 ?(99.9%) 23.045 ops/s [Average]
  (min, avg, max) = (943.226, 981.936, 1025.479), stdev = 26.539
  CI (99.9%): [958.891, 1004.982] (assumes normal distribution)


# Run complete. Total time: 00:09:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt     Score     Error  Units
Deserialization.dsljson              thrpt   20  5357.609 ?  57.219  ops/s
Deserialization.dsljson_reflection   thrpt   20  4897.025 ? 361.326  ops/s
Deserialization.gson                 thrpt   20   906.359 ?  12.220  ops/s
Deserialization.jackson              thrpt   20   994.104 ?  16.235  ops/s
Deserialization.jackson_afterburner  thrpt   20   981.936 ?  23.045  ops/s
