# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4707.809 ops/s
# Warmup Iteration   2: 4917.809 ops/s
# Warmup Iteration   3: 4916.558 ops/s
# Warmup Iteration   4: 4925.413 ops/s
# Warmup Iteration   5: 4927.238 ops/s
Iteration   1: 4908.094 ops/s
Iteration   2: 4924.141 ops/s
Iteration   3: 4918.672 ops/s
Iteration   4: 4911.217 ops/s
Iteration   5: 4917.944 ops/s
Iteration   6: 4909.678 ops/s
Iteration   7: 4908.817 ops/s
Iteration   8: 4919.544 ops/s
Iteration   9: 4923.224 ops/s
Iteration  10: 4924.975 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4674.117 ops/s
# Warmup Iteration   2: 4878.492 ops/s
# Warmup Iteration   3: 4873.579 ops/s
# Warmup Iteration   4: 4880.679 ops/s
# Warmup Iteration   5: 4878.665 ops/s
Iteration   1: 4869.287 ops/s
Iteration   2: 4868.721 ops/s
Iteration   3: 4880.860 ops/s
Iteration   4: 4868.345 ops/s
Iteration   5: 4871.390 ops/s
Iteration   6: 4869.400 ops/s
Iteration   7: 4867.275 ops/s
Iteration   8: 4871.003 ops/s
Iteration   9: 4866.471 ops/s
Iteration  10: 4872.873 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  4893.597 ±(99.9%) 21.043 ops/s [Average]
  (min, avg, max) = (4866.471, 4893.597, 4924.975), stdev = 24.234
  CI (99.9%): [4872.553, 4914.640] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:49
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4029.774 ops/s
# Warmup Iteration   2: 3166.863 ops/s
# Warmup Iteration   3: 3159.217 ops/s
# Warmup Iteration   4: 3141.895 ops/s
# Warmup Iteration   5: 3133.101 ops/s
Iteration   1: 3167.981 ops/s
Iteration   2: 3125.062 ops/s
Iteration   3: 3117.676 ops/s
Iteration   4: 3111.584 ops/s
Iteration   5: 3166.126 ops/s
Iteration   6: 3115.660 ops/s
Iteration   7: 3174.774 ops/s
Iteration   8: 3145.705 ops/s
Iteration   9: 3114.003 ops/s
Iteration  10: 3110.038 ops/s

# Run progress: 30.00% complete, ETA 00:09:28
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4104.713 ops/s
# Warmup Iteration   2: 4835.940 ops/s
# Warmup Iteration   3: 4837.150 ops/s
# Warmup Iteration   4: 4843.004 ops/s
# Warmup Iteration   5: 4840.332 ops/s
Iteration   1: 4837.021 ops/s
Iteration   2: 4842.746 ops/s
Iteration   3: 4834.603 ops/s
Iteration   4: 4836.132 ops/s
Iteration   5: 4831.823 ops/s
Iteration   6: 4831.908 ops/s
Iteration   7: 4832.504 ops/s
Iteration   8: 4843.621 ops/s
Iteration   9: 4834.916 ops/s
Iteration  10: 4839.871 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  3985.688 ±(99.9%) 758.179 ops/s [Average]
  (min, avg, max) = (3110.038, 3985.688, 4843.621), stdev = 873.120
  CI (99.9%): [3227.509, 4743.866] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
889.208 ops/s
# Warmup Iteration   2: 945.583 ops/s
# Warmup Iteration   3: 942.802 ops/s
# Warmup Iteration   4: 947.134 ops/s
# Warmup Iteration   5: 946.433 ops/s
Iteration   1: 947.673 ops/s
Iteration   2: 946.088 ops/s
Iteration   3: 947.053 ops/s
Iteration   4: 945.119 ops/s
Iteration   5: 938.440 ops/s
Iteration   6: 924.570 ops/s
Iteration   7: 948.545 ops/s
Iteration   8: 947.459 ops/s
Iteration   9: 949.502 ops/s
Iteration  10: 950.180 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
890.288 ops/s
# Warmup Iteration   2: 941.253 ops/s
# Warmup Iteration   3: 940.511 ops/s
# Warmup Iteration   4: 941.530 ops/s
# Warmup Iteration   5: 941.422 ops/s
Iteration   1: 940.895 ops/s
Iteration   2: 940.047 ops/s
Iteration   3: 939.225 ops/s
Iteration   4: 941.888 ops/s
Iteration   5: 940.727 ops/s
Iteration   6: 935.120 ops/s
Iteration   7: 937.868 ops/s
Iteration   8: 941.309 ops/s
Iteration   9: 940.954 ops/s
Iteration  10: 940.662 ops/s


Result "com.meylism.databind.Deserialization.gson":
  942.166 ±(99.9%) 5.187 ops/s [Average]
  (min, avg, max) = (924.570, 942.166, 950.180), stdev = 5.974
  CI (99.9%): [936.979, 947.354] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
994.390 ops/s
# Warmup Iteration   2: 1063.860 ops/s
# Warmup Iteration   3: 1065.335 ops/s
# Warmup Iteration   4: 1064.947 ops/s
# Warmup Iteration   5: 1065.701 ops/s
Iteration   1: 1060.078 ops/s
Iteration   2: 1064.426 ops/s
Iteration   3: 1063.278 ops/s
Iteration   4: 1051.275 ops/s
Iteration   5: 1064.551 ops/s
Iteration   6: 1063.974 ops/s
Iteration   7: 1064.945 ops/s
Iteration   8: 1062.916 ops/s
Iteration   9: 1062.820 ops/s
Iteration  10: 1065.168 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
982.344 ops/s
# Warmup Iteration   2: 1049.767 ops/s
# Warmup Iteration   3: 1050.101 ops/s
# Warmup Iteration   4: 1050.542 ops/s
# Warmup Iteration   5: 1049.884 ops/s
Iteration   1: 1048.597 ops/s
Iteration   2: 1048.351 ops/s
Iteration   3: 1048.164 ops/s
Iteration   4: 1048.587 ops/s
Iteration   5: 1050.363 ops/s
Iteration   6: 1046.856 ops/s
Iteration   7: 1049.926 ops/s
Iteration   8: 1022.875 ops/s
Iteration   9: 1049.778 ops/s
Iteration  10: 1049.174 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  1054.305 ±(99.9%) 9.053 ops/s [Average]
  (min, avg, max) = (1022.875, 1054.305, 1065.168), stdev = 10.425
  CI (99.9%): [1045.252, 1063.358] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
997.710 ops/s
# Warmup Iteration   2: 1063.221 ops/s
# Warmup Iteration   3: 1063.197 ops/s
# Warmup Iteration   4: 1063.859 ops/s
# Warmup Iteration   5: 1063.360 ops/s
Iteration   1: 1061.027 ops/s
Iteration   2: 1063.333 ops/s
Iteration   3: 1062.321 ops/s
Iteration   4: 1053.627 ops/s
Iteration   5: 1062.445 ops/s
Iteration   6: 1061.616 ops/s
Iteration   7: 1062.809 ops/s
Iteration   8: 1061.226 ops/s
Iteration   9: 1061.796 ops/s
Iteration  10: 1062.487 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
994.550 ops/s
# Warmup Iteration   2: 1057.902 ops/s
# Warmup Iteration   3: 1057.596 ops/s
# Warmup Iteration   4: 1059.256 ops/s
# Warmup Iteration   5: 1058.924 ops/s
Iteration   1: 1060.554 ops/s
Iteration   2: 1060.033 ops/s
Iteration   3: 1058.210 ops/s
Iteration   4: 1052.341 ops/s
Iteration   5: 1060.956 ops/s
Iteration   6: 1060.644 ops/s
Iteration   7: 1058.510 ops/s
Iteration   8: 1059.243 ops/s
Iteration   9: 1059.276 ops/s
Iteration  10: 1060.619 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  1060.154 ±(99.9%) 2.458 ops/s [Average]
  (min, avg, max) = (1052.341, 1060.154, 1063.333), stdev = 2.831
  CI (99.9%): [1057.695, 1062.612] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt     Score     Error  Units
Deserialization.dsljson              thrpt   20  4893.597 ±  21.043  ops/s
Deserialization.dsljson_reflection   thrpt   20  3985.688 ± 758.179  ops/s
Deserialization.gson                 thrpt   20   942.166 ±   5.187  ops/s
Deserialization.jackson              thrpt   20  1054.305 ±   9.053  ops/s
Deserialization.jackson_afterburner  thrpt   20  1060.154 ±   2.458  ops/s
