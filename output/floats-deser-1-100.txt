# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
10699.309 ops/s
# Warmup Iteration   2: 8493.847 ops/s
# Warmup Iteration   3: 8540.178 ops/s
# Warmup Iteration   4: 8539.423 ops/s
# Warmup Iteration   5: 8482.710 ops/s
Iteration   1: 8366.735 ops/s
Iteration   2: 8381.179 ops/s
Iteration   3: 8065.688 ops/s
Iteration   4: 8231.031 ops/s
Iteration   5: 8159.749 ops/s
Iteration   6: 8111.317 ops/s
Iteration   7: 7773.452 ops/s
Iteration   8: 8494.706 ops/s
Iteration   9: 8370.537 ops/s
Iteration  10: 8487.874 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
10973.459 ops/s
# Warmup Iteration   2: 9060.634 ops/s
# Warmup Iteration   3: 8823.650 ops/s
# Warmup Iteration   4: 8993.157 ops/s
# Warmup Iteration   5: 8909.794 ops/s
Iteration   1: 8784.371 ops/s
Iteration   2: 8584.624 ops/s
Iteration   3: 9053.020 ops/s
Iteration   4: 9180.056 ops/s
Iteration   5: 9005.662 ops/s
Iteration   6: 9069.696 ops/s
Iteration   7: 9181.336 ops/s
Iteration   8: 9069.644 ops/s
Iteration   9: 9126.877 ops/s
Iteration  10: 9263.252 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  8638.040 ?(99.9%) 394.637 ops/s [Average]
  (min, avg, max) = (7773.452, 8638.040, 9263.252), stdev = 454.465
  CI (99.9%): [8243.403, 9032.677] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
10690.967 ops/s
# Warmup Iteration   2: 7874.102 ops/s
# Warmup Iteration   3: 7851.634 ops/s
# Warmup Iteration   4: 7910.705 ops/s
# Warmup Iteration   5: 7799.714 ops/s
Iteration   1: 8060.816 ops/s
Iteration   2: 7818.452 ops/s
Iteration   3: 7809.233 ops/s
Iteration   4: 7826.234 ops/s
Iteration   5: 7771.295 ops/s
Iteration   6: 7835.251 ops/s
Iteration   7: 7680.959 ops/s
Iteration   8: 7917.099 ops/s
Iteration   9: 7664.998 ops/s
Iteration  10: 7655.644 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
26065.735 ops/s
# Warmup Iteration   2: 30285.156 ops/s
# Warmup Iteration   3: 29939.397 ops/s
# Warmup Iteration   4: 30424.574 ops/s
# Warmup Iteration   5: 30027.937 ops/s
Iteration   1: 29231.337 ops/s
Iteration   2: 29271.090 ops/s
Iteration   3: 26696.543 ops/s
Iteration   4: 30258.935 ops/s
Iteration   5: 29692.098 ops/s
Iteration   6: 30701.503 ops/s
Iteration   7: 30663.795 ops/s
Iteration   8: 28843.968 ops/s
Iteration   9: 28586.893 ops/s
Iteration  10: 28205.938 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  18509.604 ?(99.9%) 9566.157 ops/s [Average]
  (min, avg, max) = (7655.644, 18509.604, 30701.503), stdev = 11016.400
  CI (99.9%): [8943.447, 28075.761] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
3911.491 ops/s
# Warmup Iteration   2: 4308.542 ops/s
# Warmup Iteration   3: 4219.545 ops/s
# Warmup Iteration   4: 4238.401 ops/s
# Warmup Iteration   5: 4255.049 ops/s
Iteration   1: 4242.734 ops/s
Iteration   2: 4527.682 ops/s
Iteration   3: 4347.797 ops/s
Iteration   4: 4443.502 ops/s
Iteration   5: 4283.398 ops/s
Iteration   6: 4461.416 ops/s
Iteration   7: 4367.508 ops/s
Iteration   8: 4409.857 ops/s
Iteration   9: 4187.007 ops/s
Iteration  10: 4274.009 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
3934.507 ops/s
# Warmup Iteration   2: 4264.368 ops/s
# Warmup Iteration   3: 4331.977 ops/s
# Warmup Iteration   4: 4347.999 ops/s
# Warmup Iteration   5: 4397.233 ops/s
Iteration   1: 4378.495 ops/s
Iteration   2: 4150.125 ops/s
Iteration   3: 4351.335 ops/s
Iteration   4: 4306.961 ops/s
Iteration   5: 4057.924 ops/s
Iteration   6: 4340.520 ops/s
Iteration   7: 4223.248 ops/s
Iteration   8: 4209.397 ops/s
Iteration   9: 4244.443 ops/s
Iteration  10: 4142.543 ops/s


Result "com.meylism.databind.Deserialization.gson":
  4297.495 ?(99.9%) 103.092 ops/s [Average]
  (min, avg, max) = (4057.924, 4297.495, 4527.682), stdev = 118.721
  CI (99.9%): [4194.403, 4400.587] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
4269.026 ops/s
# Warmup Iteration   2: 4831.568 ops/s
# Warmup Iteration   3: 4775.449 ops/s
# Warmup Iteration   4: 4732.256 ops/s
# Warmup Iteration   5: 4887.537 ops/s
Iteration   1: 4818.997 ops/s
Iteration   2: 4965.846 ops/s
Iteration   3: 4791.368 ops/s
Iteration   4: 4927.984 ops/s
Iteration   5: 4994.789 ops/s
Iteration   6: 4705.663 ops/s
Iteration   7: 4874.098 ops/s
Iteration   8: 4954.570 ops/s
Iteration   9: 4945.765 ops/s
Iteration  10: 4755.870 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
4519.810 ops/s
# Warmup Iteration   2: 4737.820 ops/s
# Warmup Iteration   3: 5024.794 ops/s
# Warmup Iteration   4: 4761.374 ops/s
# Warmup Iteration   5: 4936.790 ops/s
Iteration   1: 4717.820 ops/s
Iteration   2: 4812.582 ops/s
Iteration   3: 4697.528 ops/s
Iteration   4: 5016.668 ops/s
Iteration   5: 5037.487 ops/s
Iteration   6: 4947.304 ops/s
Iteration   7: 4798.519 ops/s
Iteration   8: 5044.513 ops/s
Iteration   9: 4750.148 ops/s
Iteration  10: 4563.816 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  4856.067 ?(99.9%) 116.397 ops/s [Average]
  (min, avg, max) = (4563.816, 4856.067, 5044.513), stdev = 134.043
  CI (99.9%): [4739.670, 4972.464] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4526.822 ops/s
# Warmup Iteration   2: 4719.262 ops/s
# Warmup Iteration   3: 4780.806 ops/s
# Warmup Iteration   4: 4687.026 ops/s
# Warmup Iteration   5: 4757.519 ops/s
Iteration   1: 4660.323 ops/s
Iteration   2: 4521.608 ops/s
Iteration   3: 4352.363 ops/s
Iteration   4: 4703.782 ops/s
Iteration   5: 4691.741 ops/s
Iteration   6: 4643.140 ops/s
Iteration   7: 4678.618 ops/s
Iteration   8: 5027.177 ops/s
Iteration   9: 4882.106 ops/s
Iteration  10: 4711.318 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4520.406 ops/s
# Warmup Iteration   2: 4663.734 ops/s
# Warmup Iteration   3: 4885.599 ops/s
# Warmup Iteration   4: 4753.384 ops/s
# Warmup Iteration   5: 4750.733 ops/s
Iteration   1: 4692.579 ops/s
Iteration   2: 4840.879 ops/s
Iteration   3: 4893.883 ops/s
Iteration   4: 4995.557 ops/s
Iteration   5: 4945.780 ops/s
Iteration   6: 4991.462 ops/s
Iteration   7: 4997.362 ops/s
Iteration   8: 4686.344 ops/s
Iteration   9: 4866.608 ops/s
Iteration  10: 4855.753 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  4781.919 ?(99.9%) 153.663 ops/s [Average]
  (min, avg, max) = (4352.363, 4781.919, 5027.177), stdev = 176.959
  CI (99.9%): [4628.256, 4935.582] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt      Score      Error  Units
Deserialization.dsljson              thrpt   20   8638.040 ?  394.637  ops/s
Deserialization.dsljson_reflection   thrpt   20  18509.604 ? 9566.157  ops/s
Deserialization.gson                 thrpt   20   4297.495 ?  103.092  ops/s
Deserialization.jackson              thrpt   20   4856.067 ?  116.397  ops/s
Deserialization.jackson_afterburner  thrpt   20   4781.919 ?  153.663  ops/s
