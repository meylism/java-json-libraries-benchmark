# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 7741.455 ops/s
# Warmup Iteration   2: 8253.729 ops/s
# Warmup Iteration   3: 8290.898 ops/s
# Warmup Iteration   4: 8196.461 ops/s
# Warmup Iteration   5: 8153.928 ops/s
Iteration   1: 8191.922 ops/s
Iteration   2: 8264.077 ops/s
Iteration   3: 8339.208 ops/s
Iteration   4: 8386.871 ops/s
Iteration   5: 8348.879 ops/s
Iteration   6: 8156.897 ops/s
Iteration   7: 8407.606 ops/s
Iteration   8: 8175.674 ops/s
Iteration   9: 8279.489 ops/s
Iteration  10: 8364.841 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 7970.406 ops/s
# Warmup Iteration   2: 8291.047 ops/s
# Warmup Iteration   3: 8318.272 ops/s
# Warmup Iteration   4: 8198.653 ops/s
# Warmup Iteration   5: 8195.457 ops/s
Iteration   1: 8356.790 ops/s
Iteration   2: 8163.193 ops/s
Iteration   3: 8017.631 ops/s
Iteration   4: 8380.094 ops/s
Iteration   5: 8419.548 ops/s
Iteration   6: 8328.161 ops/s
Iteration   7: 8392.299 ops/s
Iteration   8: 8246.482 ops/s
Iteration   9: 7969.867 ops/s
Iteration  10: 8237.621 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  8271.358 ?(99.9%) 110.490 ops/s [Average]
  (min, avg, max) = (7969.867, 8271.358, 8419.548), stdev = 127.240
  CI (99.9%): [8160.868, 8381.847] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 8013.805 ops/s
# Warmup Iteration   2: 8118.931 ops/s
# Warmup Iteration   3: 8354.704 ops/s
# Warmup Iteration   4: 8320.832 ops/s
# Warmup Iteration   5: 8262.397 ops/s
Iteration   1: 8236.056 ops/s
Iteration   2: 8278.492 ops/s
Iteration   3: 8330.968 ops/s
Iteration   4: 8350.760 ops/s
Iteration   5: 8327.317 ops/s
Iteration   6: 8014.815 ops/s
Iteration   7: 8314.077 ops/s
Iteration   8: 8339.949 ops/s
Iteration   9: 8330.648 ops/s
Iteration  10: 8038.845 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 8081.517 ops/s
# Warmup Iteration   2: 8340.367 ops/s
# Warmup Iteration   3: 8262.719 ops/s
# Warmup Iteration   4: 8346.589 ops/s
# Warmup Iteration   5: 8387.074 ops/s
Iteration   1: 8381.631 ops/s
Iteration   2: 8396.686 ops/s
Iteration   3: 8366.993 ops/s
Iteration   4: 8398.318 ops/s
Iteration   5: 8338.579 ops/s
Iteration   6: 8321.961 ops/s
Iteration   7: 8278.457 ops/s
Iteration   8: 8404.520 ops/s
Iteration   9: 8297.509 ops/s
Iteration  10: 8282.310 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  8301.444 ?(99.9%) 90.177 ops/s [Average]
  (min, avg, max) = (8014.815, 8301.444, 8404.520), stdev = 103.848
  CI (99.9%): [8211.268, 8391.621] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 2580.235 ops/s
# Warmup Iteration   2: 2713.335 ops/s
# Warmup Iteration   3: 2748.331 ops/s
# Warmup Iteration   4: 2741.161 ops/s
# Warmup Iteration   5: 2746.990 ops/s
Iteration   1: 2758.282 ops/s
Iteration   2: 2736.047 ops/s
Iteration   3: 2697.403 ops/s
Iteration   4: 2729.103 ops/s
Iteration   5: 2711.903 ops/s
Iteration   6: 2740.183 ops/s
Iteration   7: 2713.705 ops/s
Iteration   8: 2759.069 ops/s
Iteration   9: 2705.929 ops/s
Iteration  10: 2682.250 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 2786.555 ops/s
# Warmup Iteration   2: 2817.151 ops/s
# Warmup Iteration   3: 2866.490 ops/s
# Warmup Iteration   4: 2863.870 ops/s
# Warmup Iteration   5: 2860.061 ops/s
Iteration   1: 2864.178 ops/s
Iteration   2: 2862.095 ops/s
Iteration   3: 2891.597 ops/s
Iteration   4: 2733.851 ops/s
Iteration   5: 2849.462 ops/s
Iteration   6: 2889.630 ops/s
Iteration   7: 2904.476 ops/s
Iteration   8: 2879.464 ops/s
Iteration   9: 2890.150 ops/s
Iteration  10: 2776.428 ops/s


Result "com.meylism.databind.Deserialization.gson":
  2788.760 ?(99.9%) 68.769 ops/s [Average]
  (min, avg, max) = (2682.250, 2788.760, 2904.476), stdev = 79.195
  CI (99.9%): [2719.991, 2857.530] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 5776.031 ops/s
# Warmup Iteration   2: 5944.053 ops/s
# Warmup Iteration   3: 5880.257 ops/s
# Warmup Iteration   4: 6027.238 ops/s
# Warmup Iteration   5: 6104.206 ops/s
Iteration   1: 6174.536 ops/s
Iteration   2: 5936.842 ops/s
Iteration   3: 6111.653 ops/s
Iteration   4: 6090.280 ops/s
Iteration   5: 6027.147 ops/s
Iteration   6: 6143.161 ops/s
Iteration   7: 5889.821 ops/s
Iteration   8: 6168.389 ops/s
Iteration   9: 6024.901 ops/s
Iteration  10: 5880.474 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 5527.236 ops/s
# Warmup Iteration   2: 5803.124 ops/s
# Warmup Iteration   3: 5779.840 ops/s
# Warmup Iteration   4: 5825.787 ops/s
# Warmup Iteration   5: 5906.676 ops/s
Iteration   1: 5893.286 ops/s
Iteration   2: 5888.801 ops/s
Iteration   3: 5800.785 ops/s
Iteration   4: 5913.938 ops/s
Iteration   5: 5832.135 ops/s
Iteration   6: 5870.876 ops/s
Iteration   7: 5902.942 ops/s
Iteration   8: 5836.257 ops/s
Iteration   9: 5690.902 ops/s
Iteration  10: 5877.009 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  5947.707 ?(99.9%) 116.094 ops/s [Average]
  (min, avg, max) = (5690.902, 5947.707, 6174.536), stdev = 133.694
  CI (99.9%): [5831.613, 6063.801] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 5443.222 ops/s
# Warmup Iteration   2: 5735.499 ops/s
# Warmup Iteration   3: 5604.809 ops/s
# Warmup Iteration   4: 5414.545 ops/s
# Warmup Iteration   5: 5559.119 ops/s
Iteration   1: 5612.552 ops/s
Iteration   2: 5667.531 ops/s
Iteration   3: 5686.036 ops/s
Iteration   4: 5645.465 ops/s
Iteration   5: 5522.641 ops/s
Iteration   6: 5435.853 ops/s
Iteration   7: 5590.259 ops/s
Iteration   8: 5680.325 ops/s
Iteration   9: 5672.874 ops/s
Iteration  10: 5666.794 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 5791.475 ops/s
# Warmup Iteration   2: 6002.773 ops/s
# Warmup Iteration   3: 5989.863 ops/s
# Warmup Iteration   4: 5872.490 ops/s
# Warmup Iteration   5: 6026.505 ops/s
Iteration   1: 6051.240 ops/s
Iteration   2: 5740.266 ops/s
Iteration   3: 6101.654 ops/s
Iteration   4: 5916.814 ops/s
Iteration   5: 6113.485 ops/s
Iteration   6: 6123.584 ops/s
Iteration   7: 6090.696 ops/s
Iteration   8: 5886.022 ops/s
Iteration   9: 6002.023 ops/s
Iteration  10: 6012.037 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  5810.908 ?(99.9%) 193.239 ops/s [Average]
  (min, avg, max) = (5435.853, 5810.908, 6123.584), stdev = 222.534
  CI (99.9%): [5617.669, 6004.146] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt     Score     Error  Units
Deserialization.dsljson              thrpt   20  8271.358 ? 110.490  ops/s
Deserialization.dsljson_reflection   thrpt   20  8301.444 ?  90.177  ops/s
Deserialization.gson                 thrpt   20  2788.760 ?  68.769  ops/s
Deserialization.jackson              thrpt   20  5947.707 ? 116.094  ops/s
Deserialization.jackson_afterburner  thrpt   20  5810.908 ? 193.239  ops/s
