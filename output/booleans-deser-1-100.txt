# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6075.600 ops/s
# Warmup Iteration   2: 6286.021 ops/s
# Warmup Iteration   3: 6285.815 ops/s
# Warmup Iteration   4: 6288.725 ops/s
# Warmup Iteration   5: 6290.564 ops/s
Iteration   1: 6288.664 ops/s
Iteration   2: 6271.576 ops/s
Iteration   3: 6288.989 ops/s
Iteration   4: 6295.979 ops/s
Iteration   5: 6294.768 ops/s
Iteration   6: 6281.611 ops/s
Iteration   7: 6289.671 ops/s
Iteration   8: 6284.008 ops/s
Iteration   9: 6293.119 ops/s
Iteration  10: 6284.405 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5088.509 ops/s
# Warmup Iteration   2: 5159.247 ops/s
# Warmup Iteration   3: 5197.444 ops/s
# Warmup Iteration   4: 5196.609 ops/s
# Warmup Iteration   5: 5192.364 ops/s
Iteration   1: 5193.646 ops/s
Iteration   2: 5190.937 ops/s
Iteration   3: 5197.865 ops/s
Iteration   4: 5188.006 ops/s
Iteration   5: 5187.418 ops/s
Iteration   6: 5198.803 ops/s
Iteration   7: 5190.342 ops/s
Iteration   8: 5189.108 ops/s
Iteration   9: 5200.677 ops/s
Iteration  10: 5191.175 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  5740.038 ±(99.9%) 487.572 ops/s [Average]
  (min, avg, max) = (5187.418, 5740.038, 6295.979), stdev = 561.489
  CI (99.9%): [5252.466, 6227.610] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5057.504 ops/s
# Warmup Iteration   2: 5190.442 ops/s
# Warmup Iteration   3: 5193.734 ops/s
# Warmup Iteration   4: 5198.366 ops/s
# Warmup Iteration   5: 5199.616 ops/s
Iteration   1: 5202.285 ops/s
Iteration   2: 5193.043 ops/s
Iteration   3: 5198.958 ops/s
Iteration   4: 5187.529 ops/s
Iteration   5: 5198.128 ops/s
Iteration   6: 5200.059 ops/s
Iteration   7: 5195.309 ops/s
Iteration   8: 5189.954 ops/s
Iteration   9: 5198.222 ops/s
Iteration  10: 5193.981 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5043.663 ops/s
# Warmup Iteration   2: 5193.006 ops/s
# Warmup Iteration   3: 5201.491 ops/s
# Warmup Iteration   4: 5191.750 ops/s
# Warmup Iteration   5: 5201.457 ops/s
Iteration   1: 5135.095 ops/s
Iteration   2: 5141.284 ops/s
Iteration   3: 5143.147 ops/s
Iteration   4: 5139.790 ops/s
Iteration   5: 5131.510 ops/s
Iteration   6: 5137.047 ops/s
Iteration   7: 5132.138 ops/s
Iteration   8: 5138.846 ops/s
Iteration   9: 5141.642 ops/s
Iteration  10: 5137.410 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  5166.769 ±(99.9%) 26.073 ops/s [Average]
  (min, avg, max) = (5131.510, 5166.769, 5202.285), stdev = 30.026
  CI (99.9%): [5140.696, 5192.842] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2369.284 ops/s
# Warmup Iteration   2: 2464.332 ops/s
# Warmup Iteration   3: 2467.334 ops/s
# Warmup Iteration   4: 2470.967 ops/s
# Warmup Iteration   5: 2456.914 ops/s
Iteration   1: 2470.960 ops/s
Iteration   2: 2471.550 ops/s
Iteration   3: 2471.029 ops/s
Iteration   4: 2471.568 ops/s
Iteration   5: 2471.236 ops/s
Iteration   6: 2469.104 ops/s
Iteration   7: 2473.284 ops/s
Iteration   8: 2456.844 ops/s
Iteration   9: 2468.984 ops/s
Iteration  10: 2441.273 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
2494.016 ops/s
# Warmup Iteration   2: 2588.342 ops/s
# Warmup Iteration   3: 2593.393 ops/s
# Warmup Iteration   4: 2593.476 ops/s
# Warmup Iteration   5: 2585.884 ops/s
Iteration   1: 2601.187 ops/s
Iteration   2: 2593.966 ops/s
Iteration   3: 2596.629 ops/s
Iteration   4: 2594.137 ops/s
Iteration   5: 2598.865 ops/s
Iteration   6: 2597.406 ops/s
Iteration   7: 2600.469 ops/s
Iteration   8: 2595.157 ops/s
Iteration   9: 2598.609 ops/s
Iteration  10: 2600.188 ops/s


Result "com.meylism.databind.Deserialization.gson":
  2532.122 ±(99.9%) 58.717 ops/s [Average]
  (min, avg, max) = (2441.273, 2532.122, 2601.187), stdev = 67.618
  CI (99.9%): [2473.405, 2590.839] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4655.989 ops/s
# Warmup Iteration   2: 4812.466 ops/s
# Warmup Iteration   3: 4825.234 ops/s
# Warmup Iteration   4: 4825.878 ops/s
# Warmup Iteration   5: 4825.424 ops/s
Iteration   1: 4828.011 ops/s
Iteration   2: 4829.644 ops/s
Iteration   3: 4827.890 ops/s
Iteration   4: 4822.237 ops/s
Iteration   5: 4821.693 ops/s
Iteration   6: 4811.379 ops/s
Iteration   7: 4823.679 ops/s
Iteration   8: 4828.602 ops/s
Iteration   9: 4829.510 ops/s
Iteration  10: 4828.149 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
4643.616 ops/s
# Warmup Iteration   2: 4810.067 ops/s
# Warmup Iteration   3: 4812.978 ops/s
# Warmup Iteration   4: 4817.378 ops/s
# Warmup Iteration   5: 4820.886 ops/s
Iteration   1: 4813.124 ops/s
Iteration   2: 4815.472 ops/s
Iteration   3: 4814.464 ops/s
Iteration   4: 4809.137 ops/s
Iteration   5: 4814.116 ops/s
Iteration   6: 4811.107 ops/s
Iteration   7: 4815.372 ops/s
Iteration   8: 4693.591 ops/s
Iteration   9: 4813.661 ops/s
Iteration  10: 4814.620 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  4813.273 ±(99.9%) 25.231 ops/s [Average]
  (min, avg, max) = (4693.591, 4813.273, 4829.644), stdev = 29.056
  CI (99.9%): [4788.042, 4838.504] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4805.995 ops/s
# Warmup Iteration   2: 4979.864 ops/s
# Warmup Iteration   3: 4965.319 ops/s
# Warmup Iteration   4: 4983.110 ops/s
# Warmup Iteration   5: 4983.978 ops/s
Iteration   1: 4972.806 ops/s
Iteration   2: 4981.956 ops/s
Iteration   3: 4981.174 ops/s
Iteration   4: 4978.064 ops/s
Iteration   5: 4977.442 ops/s
Iteration   6: 4980.964 ops/s
Iteration   7: 4973.155 ops/s
Iteration   8: 4983.504 ops/s
Iteration   9: 4977.033 ops/s
Iteration  10: 4980.524 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
4712.710 ops/s
# Warmup Iteration   2: 4864.116 ops/s
# Warmup Iteration   3: 4867.485 ops/s
# Warmup Iteration   4: 4888.900 ops/s
# Warmup Iteration   5: 4886.278 ops/s
Iteration   1: 4888.239 ops/s
Iteration   2: 4883.855 ops/s
Iteration   3: 4890.104 ops/s
Iteration   4: 4883.401 ops/s
Iteration   5: 4880.010 ops/s
Iteration   6: 4889.730 ops/s
Iteration   7: 4889.723 ops/s
Iteration   8: 4894.012 ops/s
Iteration   9: 4889.986 ops/s
Iteration  10: 4866.212 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  4932.095 ±(99.9%) 41.814 ops/s [Average]
  (min, avg, max) = (4866.212, 4932.095, 4983.504), stdev = 48.153
  CI (99.9%): [4890.281, 4973.909] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt     Score     Error  Units
Deserialization.dsljson              thrpt   20  5740.038 ± 487.572  ops/s
Deserialization.dsljson_reflection   thrpt   20  5166.769 ±  26.073  ops/s
Deserialization.gson                 thrpt   20  2532.122 ±  58.717  ops/s
Deserialization.jackson              thrpt   20  4813.273 ±  25.231  ops/s
Deserialization.jackson_afterburner  thrpt   20  4932.095 ±  41.814  ops/s
