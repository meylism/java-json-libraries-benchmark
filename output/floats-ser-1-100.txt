# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
1910.778 ops/s
# Warmup Iteration   2: 1956.838 ops/s
# Warmup Iteration   3: 2025.023 ops/s
# Warmup Iteration   4: 2017.940 ops/s
# Warmup Iteration   5: 2014.348 ops/s
Iteration   1: 2031.468 ops/s
Iteration   2: 2034.958 ops/s
Iteration   3: 2057.904 ops/s
Iteration   4: 2076.632 ops/s
Iteration   5: 2049.541 ops/s
Iteration   6: 2026.790 ops/s
Iteration   7: 2045.176 ops/s
Iteration   8: 2054.836 ops/s
Iteration   9: 2021.608 ops/s
Iteration  10: 2037.919 ops/s

# Run progress: 10.00% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
1828.114 ops/s
# Warmup Iteration   2: 1861.016 ops/s
# Warmup Iteration   3: 1876.513 ops/s
# Warmup Iteration   4: 1864.366 ops/s
# Warmup Iteration   5: 1894.340 ops/s
Iteration   1: 1882.895 ops/s
Iteration   2: 1856.863 ops/s
Iteration   3: 1871.068 ops/s
Iteration   4: 1860.356 ops/s
Iteration   5: 1856.663 ops/s
Iteration   6: 1826.764 ops/s
Iteration   7: 1833.710 ops/s
Iteration   8: 1837.006 ops/s
Iteration   9: 1838.952 ops/s
Iteration  10: 1816.337 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  1945.872 ?(99.9%) 88.586 ops/s [Average]
  (min, avg, max) = (1816.337, 1945.872, 2076.632), stdev = 102.015
  CI (99.9%): [1857.287, 2034.458] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:49
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
1713.492 ops/s
# Warmup Iteration   2: 1670.625 ops/s
# Warmup Iteration   3: 1671.487 ops/s
# Warmup Iteration   4: 1661.613 ops/s
# Warmup Iteration   5: 1651.875 ops/s
Iteration   1: 1720.759 ops/s
Iteration   2: 1657.885 ops/s
Iteration   3: 1679.167 ops/s
Iteration   4: 1673.812 ops/s
Iteration   5: 1671.098 ops/s
Iteration   6: 1696.310 ops/s
Iteration   7: 1711.608 ops/s
Iteration   8: 1689.794 ops/s
Iteration   9: 1680.751 ops/s
Iteration  10: 1723.698 ops/s

# Run progress: 30.00% complete, ETA 00:09:28
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
1902.803 ops/s
# Warmup Iteration   2: 1940.096 ops/s
# Warmup Iteration   3: 1929.533 ops/s
# Warmup Iteration   4: 1927.292 ops/s
# Warmup Iteration   5: 1935.769 ops/s
Iteration   1: 1861.268 ops/s
Iteration   2: 1927.334 ops/s
Iteration   3: 1930.963 ops/s
Iteration   4: 1920.012 ops/s
Iteration   5: 1987.382 ops/s
Iteration   6: 1989.058 ops/s
Iteration   7: 1954.666 ops/s
Iteration   8: 1985.054 ops/s
Iteration   9: 1972.106 ops/s
Iteration  10: 1974.249 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  1820.349 ?(99.9%) 118.965 ops/s [Average]
  (min, avg, max) = (1657.885, 1820.349, 1989.058), stdev = 137.000
  CI (99.9%): [1701.384, 1939.314] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:07
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
1619.890 ops/s
# Warmup Iteration   2: 1589.024 ops/s
# Warmup Iteration   3: 1584.715 ops/s
# Warmup Iteration   4: 1599.034 ops/s
# Warmup Iteration   5: 1611.662 ops/s
Iteration   1: 1626.598 ops/s
Iteration   2: 1584.596 ops/s
Iteration   3: 1575.610 ops/s
Iteration   4: 1619.493 ops/s
Iteration   5: 1575.221 ops/s
Iteration   6: 1615.335 ops/s
Iteration   7: 1629.656 ops/s
Iteration   8: 1603.077 ops/s
Iteration   9: 1615.021 ops/s
Iteration  10: 1618.792 ops/s

# Run progress: 50.00% complete, ETA 00:06:46
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
1574.780 ops/s
# Warmup Iteration   2: 1516.671 ops/s
# Warmup Iteration   3: 1522.163 ops/s
# Warmup Iteration   4: 1499.767 ops/s
# Warmup Iteration   5: 1493.018 ops/s
Iteration   1: 1489.779 ops/s
Iteration   2: 1495.663 ops/s
Iteration   3: 1538.469 ops/s
Iteration   4: 1512.814 ops/s
Iteration   5: 1514.869 ops/s
Iteration   6: 1511.389 ops/s
Iteration   7: 1487.126 ops/s
Iteration   8: 1517.815 ops/s
Iteration   9: 1486.135 ops/s
Iteration  10: 1501.792 ops/s


Result "com.meylism.databind.Serialization.gson":
  1555.963 ?(99.9%) 47.594 ops/s [Average]
  (min, avg, max) = (1486.135, 1555.963, 1629.656), stdev = 54.809
  CI (99.9%): [1508.369, 1603.556] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
2105.759 ops/s
# Warmup Iteration   2: 2119.712 ops/s
# Warmup Iteration   3: 2112.067 ops/s
# Warmup Iteration   4: 2113.759 ops/s
# Warmup Iteration   5: 2112.780 ops/s
Iteration   1: 2132.322 ops/s
Iteration   2: 2147.921 ops/s
Iteration   3: 2073.291 ops/s
Iteration   4: 2082.943 ops/s
Iteration   5: 2057.852 ops/s
Iteration   6: 2062.138 ops/s
Iteration   7: 2045.150 ops/s
Iteration   8: 2111.811 ops/s
Iteration   9: 2139.417 ops/s
Iteration  10: 2135.474 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
2280.254 ops/s
# Warmup Iteration   2: 2572.346 ops/s
# Warmup Iteration   3: 2545.143 ops/s
# Warmup Iteration   4: 2590.857 ops/s
# Warmup Iteration   5: 2575.582 ops/s
Iteration   1: 2519.930 ops/s
Iteration   2: 2596.515 ops/s
Iteration   3: 2606.479 ops/s
Iteration   4: 2638.216 ops/s
Iteration   5: 2582.686 ops/s
Iteration   6: 2669.540 ops/s
Iteration   7: 2635.520 ops/s
Iteration   8: 2564.346 ops/s
Iteration   9: 2654.378 ops/s
Iteration  10: 2673.480 ops/s


Result "com.meylism.databind.Serialization.jackson":
  2356.471 ?(99.9%) 232.579 ops/s [Average]
  (min, avg, max) = (2045.150, 2356.471, 2673.480), stdev = 267.839
  CI (99.9%): [2123.891, 2589.050] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1817.830 ops/s
# Warmup Iteration   2: 1741.171 ops/s
# Warmup Iteration   3: 1761.364 ops/s
# Warmup Iteration   4: 1796.478 ops/s
# Warmup Iteration   5: 1719.679 ops/s
Iteration   1: 1717.283 ops/s
Iteration   2: 1766.852 ops/s
Iteration   3: 1757.823 ops/s
Iteration   4: 1810.136 ops/s
Iteration   5: 1710.299 ops/s
Iteration   6: 1768.675 ops/s
Iteration   7: 1734.932 ops/s
Iteration   8: 1763.712 ops/s
Iteration   9: 1794.879 ops/s
Iteration  10: 1770.708 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2161.610 ops/s
# Warmup Iteration   2: 2278.835 ops/s
# Warmup Iteration   3: 2296.409 ops/s
# Warmup Iteration   4: 2310.594 ops/s
# Warmup Iteration   5: 2284.274 ops/s
Iteration   1: 2333.612 ops/s
Iteration   2: 2218.920 ops/s
Iteration   3: 2230.017 ops/s
Iteration   4: 2280.529 ops/s
Iteration   5: 2203.512 ops/s
Iteration   6: 2277.119 ops/s
Iteration   7: 2284.892 ops/s
Iteration   8: 2301.275 ops/s
Iteration   9: 2246.829 ops/s
Iteration  10: 2138.689 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  2005.535 ?(99.9%) 222.522 ops/s [Average]
  (min, avg, max) = (1710.299, 2005.535, 2333.612), stdev = 256.257
  CI (99.9%): [1783.013, 2228.057] (assumes normal distribution)


# Run complete. Total time: 00:13:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt     Score     Error  Units
Serialization.dsljson              thrpt   20  1945.872 ?  88.586  ops/s
Serialization.dsljson_reflection   thrpt   20  1820.349 ? 118.965  ops/s
Serialization.gson                 thrpt   20  1555.963 ?  47.594  ops/s
Serialization.jackson              thrpt   20  2356.471 ? 232.579  ops/s
Serialization.jackson_afterburner  thrpt   20  2005.535 ? 222.522  ops/s
