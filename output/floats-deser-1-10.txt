# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 53630.586 ops/s
# Warmup Iteration   2: 59355.082 ops/s
# Warmup Iteration   3: 57913.137 ops/s
# Warmup Iteration   4: 57596.069 ops/s
# Warmup Iteration   5: 57908.842 ops/s
Iteration   1: 56862.588 ops/s
Iteration   2: 56896.567 ops/s
Iteration   3: 55661.609 ops/s
Iteration   4: 59965.847 ops/s
Iteration   5: 60571.240 ops/s
Iteration   6: 62616.950 ops/s
Iteration   7: 62996.132 ops/s
Iteration   8: 62464.879 ops/s
Iteration   9: 56591.783 ops/s
Iteration  10: 57985.785 ops/s

# Run progress: 10.00% complete, ETA 00:12:18
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 56541.478 ops/s
# Warmup Iteration   2: 57283.222 ops/s
# Warmup Iteration   3: 58290.520 ops/s
# Warmup Iteration   4: 58888.439 ops/s
# Warmup Iteration   5: 63036.257 ops/s
Iteration   1: 62710.691 ops/s
Iteration   2: 57362.788 ops/s
Iteration   3: 59494.090 ops/s
Iteration   4: 60560.454 ops/s
Iteration   5: 60540.393 ops/s
Iteration   6: 57555.499 ops/s
Iteration   7: 55188.623 ops/s
Iteration   8: 58686.999 ops/s
Iteration   9: 54462.431 ops/s
Iteration  10: 57163.353 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  58816.935 ?(99.9%) 2296.847 ops/s [Average]
  (min, avg, max) = (54462.431, 58816.935, 62996.132), stdev = 2645.052
  CI (99.9%): [56520.088, 61113.782] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 52367.663 ops/s
# Warmup Iteration   2: 54676.422 ops/s
# Warmup Iteration   3: 56446.830 ops/s
# Warmup Iteration   4: 53759.271 ops/s
# Warmup Iteration   5: 56084.179 ops/s
Iteration   1: 53050.502 ops/s
Iteration   2: 53650.465 ops/s
Iteration   3: 52118.174 ops/s
Iteration   4: 52515.038 ops/s
Iteration   5: 51714.215 ops/s
Iteration   6: 54554.925 ops/s
Iteration   7: 59765.967 ops/s
Iteration   8: 59739.826 ops/s
Iteration   9: 58709.831 ops/s
Iteration  10: 55039.117 ops/s

# Run progress: 30.00% complete, ETA 00:09:33
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 54032.764 ops/s
# Warmup Iteration   2: 56239.002 ops/s
# Warmup Iteration   3: 57131.891 ops/s
# Warmup Iteration   4: 56074.151 ops/s
# Warmup Iteration   5: 58396.725 ops/s
Iteration   1: 57729.366 ops/s
Iteration   2: 57992.059 ops/s
Iteration   3: 57960.575 ops/s
Iteration   4: 58765.315 ops/s
Iteration   5: 58630.994 ops/s
Iteration   6: 59178.224 ops/s
Iteration   7: 56290.775 ops/s
Iteration   8: 62405.740 ops/s
Iteration   9: 62386.232 ops/s
Iteration  10: 59437.784 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  57081.756 ?(99.9%) 2846.150 ops/s [Average]
  (min, avg, max) = (51714.215, 57081.756, 62405.740), stdev = 3277.631
  CI (99.9%): [54235.606, 59927.906] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 8966.651 ops/s
# Warmup Iteration   2: 8927.239 ops/s
# Warmup Iteration   3: 9499.269 ops/s
# Warmup Iteration   4: 9293.573 ops/s
# Warmup Iteration   5: 9025.854 ops/s
Iteration   1: 8786.207 ops/s
Iteration   2: 9970.346 ops/s
Iteration   3: 9688.013 ops/s
Iteration   4: 9553.702 ops/s
Iteration   5: 9148.189 ops/s
Iteration   6: 9949.451 ops/s
Iteration   7: 9894.684 ops/s
Iteration   8: 9955.140 ops/s
Iteration   9: 9959.632 ops/s
Iteration  10: 9976.038 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 8087.094 ops/s
# Warmup Iteration   2: 8662.771 ops/s
# Warmup Iteration   3: 8901.455 ops/s
# Warmup Iteration   4: 9445.079 ops/s
# Warmup Iteration   5: 9489.396 ops/s
Iteration   1: 8619.911 ops/s
Iteration   2: 8862.430 ops/s
Iteration   3: 9018.432 ops/s
Iteration   4: 8695.345 ops/s
Iteration   5: 8306.664 ops/s
Iteration   6: 8479.112 ops/s
Iteration   7: 8420.187 ops/s
Iteration   8: 8558.129 ops/s
Iteration   9: 8821.046 ops/s
Iteration  10: 8688.857 ops/s


Result "com.meylism.databind.Deserialization.gson":
  9167.576 ?(99.9%) 541.342 ops/s [Average]
  (min, avg, max) = (8306.664, 9167.576, 9976.038), stdev = 623.410
  CI (99.9%): [8626.234, 9708.918] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:27
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 8663.076 ops/s
# Warmup Iteration   2: 9428.864 ops/s
# Warmup Iteration   3: 9288.996 ops/s
# Warmup Iteration   4: 9331.652 ops/s
# Warmup Iteration   5: 9343.606 ops/s
Iteration   1: 9484.953 ops/s
Iteration   2: 9631.379 ops/s
Iteration   3: 9702.303 ops/s
Iteration   4: 9830.035 ops/s
Iteration   5: 9458.701 ops/s
Iteration   6: 9491.891 ops/s
Iteration   7: 9678.621 ops/s
Iteration   8: 9578.470 ops/s
Iteration   9: 9339.296 ops/s
Iteration  10: 9419.129 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 8346.279 ops/s
# Warmup Iteration   2: 9465.763 ops/s
# Warmup Iteration   3: 9369.962 ops/s
# Warmup Iteration   4: 9492.155 ops/s
# Warmup Iteration   5: 9426.826 ops/s
Iteration   1: 9351.915 ops/s
Iteration   2: 9514.900 ops/s
Iteration   3: 9283.233 ops/s
Iteration   4: 9190.797 ops/s
Iteration   5: 9660.018 ops/s
Iteration   6: 10018.923 ops/s
Iteration   7: 9919.213 ops/s
Iteration   8: 10220.290 ops/s
Iteration   9: 10054.735 ops/s
Iteration  10: 9647.987 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  9623.839 ?(99.9%) 237.110 ops/s [Average]
  (min, avg, max) = (9190.797, 9623.839, 10220.290), stdev = 273.056
  CI (99.9%): [9386.729, 9860.949] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
9828.599 ops/s
# Warmup Iteration   2: 10674.433 ops/s
# Warmup Iteration   3: 9682.842 ops/s
# Warmup Iteration   4: 9733.575 ops/s
# Warmup Iteration   5: 9571.243 ops/s
Iteration   1: 9316.783 ops/s
Iteration   2: 9186.931 ops/s
Iteration   3: 9161.413 ops/s
Iteration   4: 9214.587 ops/s
Iteration   5: 9267.715 ops/s
Iteration   6: 9465.593 ops/s
Iteration   7: 9753.863 ops/s
Iteration   8: 9996.453 ops/s
Iteration   9: 9970.054 ops/s
Iteration  10: 9765.497 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
9073.572 ops/s
# Warmup Iteration   2: 9759.866 ops/s
# Warmup Iteration   3: 10428.946 ops/s
# Warmup Iteration   4: 10834.938 ops/s
# Warmup Iteration   5: 10773.863 ops/s
Iteration   1: 10811.186 ops/s
Iteration   2: 10050.088 ops/s
Iteration   3: 9467.194 ops/s
Iteration   4: 10673.857 ops/s
Iteration   5: 10183.563 ops/s
Iteration   6: 9814.324 ops/s
Iteration   7: 10413.835 ops/s
Iteration   8: 10795.294 ops/s
Iteration   9: 10812.256 ops/s
Iteration  10: 10869.445 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  9949.497 ?(99.9%) 527.877 ops/s [Average]
  (min, avg, max) = (9161.413, 9949.497, 10869.445), stdev = 607.904
  CI (99.9%): [9421.620, 10477.373] (assumes normal distribution)


# Run complete. Total time: 00:13:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt      Score      Error  Units
Deserialization.dsljson              thrpt   20  58816.935 ? 2296.847  ops/s
Deserialization.dsljson_reflection   thrpt   20  57081.756 ? 2846.150  ops/s
Deserialization.gson                 thrpt   20   9167.576 ?  541.342  ops/s
Deserialization.jackson              thrpt   20   9623.839 ?  237.110  ops/s
Deserialization.jackson_afterburner  thrpt   20   9949.497 ?  527.877  ops/s
