# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 85.831 ops/s
# Warmup Iteration   2: 90.576 ops/s
# Warmup Iteration   3: 91.271 ops/s
# Warmup Iteration   4: 84.307 ops/s
# Warmup Iteration   5: 85.253 ops/s
Iteration   1: 91.728 ops/s
Iteration   2: 88.172 ops/s
Iteration   3: 89.122 ops/s
Iteration   4: 83.839 ops/s
Iteration   5: 91.593 ops/s
Iteration   6: 87.510 ops/s
Iteration   7: 90.018 ops/s
Iteration   8: 87.859 ops/s
Iteration   9: 86.383 ops/s
Iteration  10: 86.461 ops/s

# Run progress: 10.00% complete, ETA 00:13:16
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 85.334 ops/s
# Warmup Iteration   2: 87.578 ops/s
# Warmup Iteration   3: 94.175 ops/s
# Warmup Iteration   4: 86.665 ops/s
# Warmup Iteration   5: 84.638 ops/s
Iteration   1: 87.190 ops/s
Iteration   2: 87.749 ops/s
Iteration   3: 88.455 ops/s
Iteration   4: 84.852 ops/s
Iteration   5: 85.833 ops/s
Iteration   6: 90.883 ops/s
Iteration   7: 83.709 ops/s
Iteration   8: 86.331 ops/s
Iteration   9: 88.107 ops/s
Iteration  10: 84.973 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  87.538 ?(99.9%) 2.038 ops/s [Average]
  (min, avg, max) = (83.709, 87.538, 91.728), stdev = 2.347
  CI (99.9%): [85.500, 89.577] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:50
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 85.924 ops/s
# Warmup Iteration   2: 88.502 ops/s
# Warmup Iteration   3: 90.505 ops/s
# Warmup Iteration   4: 86.522 ops/s
# Warmup Iteration   5: 89.806 ops/s
Iteration   1: 86.294 ops/s
Iteration   2: 89.991 ops/s
Iteration   3: 89.630 ops/s
Iteration   4: 88.240 ops/s
Iteration   5: 84.517 ops/s
Iteration   6: 84.856 ops/s
Iteration   7: 87.114 ops/s
Iteration   8: 87.293 ops/s
Iteration   9: 89.636 ops/s
Iteration  10: 88.547 ops/s

# Run progress: 30.00% complete, ETA 00:10:19
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 85.197 ops/s
# Warmup Iteration   2: 91.508 ops/s
# Warmup Iteration   3: 94.771 ops/s
# Warmup Iteration   4: 94.014 ops/s
# Warmup Iteration   5: 92.530 ops/s
Iteration   1: 91.096 ops/s
Iteration   2: 85.339 ops/s
Iteration   3: 86.768 ops/s
Iteration   4: 90.070 ops/s
Iteration   5: 91.554 ops/s
Iteration   6: 85.961 ops/s
Iteration   7: 84.228 ops/s
Iteration   8: 93.368 ops/s
Iteration   9: 91.203 ops/s
Iteration  10: 93.926 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  88.482 ?(99.9%) 2.511 ops/s [Average]
  (min, avg, max) = (84.228, 88.482, 93.926), stdev = 2.892
  CI (99.9%): [85.970, 90.993] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 96.078 ops/s
# Warmup Iteration   2: 107.499 ops/s
# Warmup Iteration   3: 98.310 ops/s
# Warmup Iteration   4: 104.954 ops/s
# Warmup Iteration   5: 99.848 ops/s
Iteration   1: 99.333 ops/s
Iteration   2: 99.374 ops/s
Iteration   3: 99.488 ops/s
Iteration   4: 98.821 ops/s
Iteration   5: 103.102 ops/s
Iteration   6: 107.663 ops/s
Iteration   7: 100.171 ops/s
Iteration   8: 96.856 ops/s
Iteration   9: 95.673 ops/s
Iteration  10: 94.685 ops/s

# Run progress: 50.00% complete, ETA 00:07:20
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 92.998 ops/s
# Warmup Iteration   2: 105.716 ops/s
# Warmup Iteration   3: 107.147 ops/s
# Warmup Iteration   4: 107.654 ops/s
# Warmup Iteration   5: 105.614 ops/s
Iteration   1: 113.595 ops/s
Iteration   2: 111.900 ops/s
Iteration   3: 106.095 ops/s
Iteration   4: 109.887 ops/s
Iteration   5: 106.282 ops/s
Iteration   6: 106.997 ops/s
Iteration   7: 106.638 ops/s
Iteration   8: 104.501 ops/s
Iteration   9: 109.179 ops/s
Iteration  10: 109.283 ops/s


Result "com.meylism.databind.Deserialization.gson":
  103.976 ?(99.9%) 4.864 ops/s [Average]
  (min, avg, max) = (94.685, 103.976, 113.595), stdev = 5.601
  CI (99.9%): [99.113, 108.840] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 158.266 ops/s
# Warmup Iteration   2: 178.038 ops/s
# Warmup Iteration   3: 175.709 ops/s
# Warmup Iteration   4: 173.461 ops/s
# Warmup Iteration   5: 177.063 ops/s
Iteration   1: 187.626 ops/s
Iteration   2: 196.863 ops/s
Iteration   3: 184.310 ops/s
Iteration   4: 191.981 ops/s
Iteration   5: 175.185 ops/s
Iteration   6: 173.585 ops/s
Iteration   7: 176.818 ops/s
Iteration   8: 175.268 ops/s
Iteration   9: 181.045 ops/s
Iteration  10: 177.251 ops/s

# Run progress: 70.00% complete, ETA 00:04:22
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 137.031 ops/s
# Warmup Iteration   2: 156.976 ops/s
# Warmup Iteration   3: 155.892 ops/s
# Warmup Iteration   4: 156.071 ops/s
# Warmup Iteration   5: 168.472 ops/s
Iteration   1: 171.797 ops/s
Iteration   2: 172.766 ops/s
Iteration   3: 171.841 ops/s
Iteration   4: 172.283 ops/s
Iteration   5: 170.525 ops/s
Iteration   6: 159.499 ops/s
Iteration   7: 160.260 ops/s
Iteration   8: 161.405 ops/s
Iteration   9: 164.155 ops/s
Iteration  10: 159.457 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  174.196 ?(99.9%) 9.131 ops/s [Average]
  (min, avg, max) = (159.457, 174.196, 196.863), stdev = 10.515
  CI (99.9%): [165.065, 183.327] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
184.615 ops/s
# Warmup Iteration   2: 202.762 ops/s
# Warmup Iteration   3: 208.386 ops/s
# Warmup Iteration   4: 210.555 ops/s
# Warmup Iteration   5: 212.030 ops/s
Iteration   1: 214.095 ops/s
Iteration   2: 215.792 ops/s
Iteration   3: 203.731 ops/s
Iteration   4: 206.268 ops/s
Iteration   5: 197.924 ops/s
Iteration   6: 206.827 ops/s
Iteration   7: 198.545 ops/s
Iteration   8: 219.303 ops/s
Iteration   9: 224.251 ops/s
Iteration  10: 224.991 ops/s

# Run progress: 90.00% complete, ETA 00:01:26
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
192.563 ops/s
# Warmup Iteration   2: 196.171 ops/s
# Warmup Iteration   3: 187.319 ops/s
# Warmup Iteration   4: 198.806 ops/s
# Warmup Iteration   5: 198.523 ops/s
Iteration   1: 190.898 ops/s
Iteration   2: 194.521 ops/s
Iteration   3: 213.317 ops/s
Iteration   4: 191.067 ops/s
Iteration   5: 196.731 ops/s
Iteration   6: 201.711 ops/s
Iteration   7: 211.334 ops/s
Iteration   8: 216.471 ops/s
Iteration   9: 213.651 ops/s
Iteration  10: 194.163 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  206.779 ?(99.9%) 9.395 ops/s [Average]
  (min, avg, max) = (190.898, 206.779, 224.991), stdev = 10.819
  CI (99.9%): [197.384, 216.175] (assumes normal distribution)


# Run complete. Total time: 00:14:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt    Score   Error  Units
Deserialization.dsljson              thrpt   20   87.538 ? 2.038  ops/s
Deserialization.dsljson_reflection   thrpt   20   88.482 ? 2.511  ops/s
Deserialization.gson                 thrpt   20  103.976 ? 4.864  ops/s
Deserialization.jackson              thrpt   20  174.196 ? 9.131  ops/s
Deserialization.jackson_afterburner  thrpt   20  206.779 ? 9.395  ops/s
