# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 7937260.046 ops/s
# Warmup Iteration   2: 8180549.375 ops/s
# Warmup Iteration   3: 8108928.620 ops/s
# Warmup Iteration   4: 7840845.098 ops/s
# Warmup Iteration   5: 8301508.418 ops/s
Iteration   1: 8162233.081 ops/s
Iteration   2: 8102826.023 ops/s
Iteration   3: 8090493.656 ops/s
Iteration   4: 8076112.583 ops/s
Iteration   5: 8137469.437 ops/s
Iteration   6: 8155079.920 ops/s
Iteration   7: 8155761.481 ops/s
Iteration   8: 8233458.288 ops/s
Iteration   9: 8223445.079 ops/s
Iteration  10: 8272775.824 ops/s

# Run progress: 10.00% complete, ETA 00:12:08
# Fork: 2 of 2
# Warmup Iteration   1: 8326923.990 ops/s
# Warmup Iteration   2: 8494709.351 ops/s
# Warmup Iteration   3: 8464093.897 ops/s
# Warmup Iteration   4: 8108960.078 ops/s
# Warmup Iteration   5: 8314957.467 ops/s
Iteration   1: 8154531.120 ops/s
Iteration   2: 8332771.859 ops/s
Iteration   3: 8385906.176 ops/s
Iteration   4: 8387334.579 ops/s
Iteration   5: 8478781.383 ops/s
Iteration   6: 8490330.424 ops/s
Iteration   7: 8446430.277 ops/s
Iteration   8: 8287513.116 ops/s
Iteration   9: 8413297.079 ops/s
Iteration  10: 8371591.970 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  8267907.168 ?(99.9%) 118782.546 ops/s [Average]
  (min, avg, max) = (8076112.583, 8267907.168, 8490330.424), stdev = 136790.157
  CI (99.9%): [8149124.622, 8386689.714] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: 8274443.447 ops/s
# Warmup Iteration   2: 8347694.498 ops/s
# Warmup Iteration   3: 8402782.982 ops/s
# Warmup Iteration   4: 8329302.144 ops/s
# Warmup Iteration   5: 8386636.927 ops/s
Iteration   1: 8009690.059 ops/s
Iteration   2: 8361559.060 ops/s
Iteration   3: 8333826.741 ops/s
Iteration   4: 8383233.631 ops/s
Iteration   5: 8428125.944 ops/s
Iteration   6: 8401011.914 ops/s
Iteration   7: 8366013.808 ops/s
Iteration   8: 8313733.565 ops/s
Iteration   9: 8377455.609 ops/s
Iteration  10: 8435735.878 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 9283591.738 ops/s
# Warmup Iteration   2: 9448325.275 ops/s
# Warmup Iteration   3: 9569693.058 ops/s
# Warmup Iteration   4: 9464486.782 ops/s
# Warmup Iteration   5: 9529594.255 ops/s
Iteration   1: 9540911.487 ops/s
Iteration   2: 9550432.844 ops/s
Iteration   3: 9459442.529 ops/s
Iteration   4: 9344588.228 ops/s
Iteration   5: 9445913.534 ops/s
Iteration   6: 9535512.900 ops/s
Iteration   7: 9535011.474 ops/s
Iteration   8: 9262404.912 ops/s
Iteration   9: 9463928.906 ops/s
Iteration  10: 9380207.833 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  8896437.043 ?(99.9%) 503527.031 ops/s [Average]
  (min, avg, max) = (8009690.059, 8896437.043, 9550432.844), stdev = 579862.478
  CI (99.9%): [8392910.012, 9399964.074] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 4123300.549 ops/s
# Warmup Iteration   2: 4649543.624 ops/s
# Warmup Iteration   3: 4524131.756 ops/s
# Warmup Iteration   4: 4552560.960 ops/s
# Warmup Iteration   5: 4513458.163 ops/s
Iteration   1: 4535120.979 ops/s
Iteration   2: 4675105.531 ops/s
Iteration   3: 4523329.899 ops/s
Iteration   4: 4749271.198 ops/s
Iteration   5: 4569165.943 ops/s
Iteration   6: 4502543.881 ops/s
Iteration   7: 4415489.453 ops/s
Iteration   8: 4386214.624 ops/s
Iteration   9: 4601514.604 ops/s
Iteration  10: 4441580.659 ops/s

# Run progress: 50.00% complete, ETA 00:06:43
# Fork: 2 of 2
# Warmup Iteration   1: 3942774.742 ops/s
# Warmup Iteration   2: 4279774.155 ops/s
# Warmup Iteration   3: 4240273.337 ops/s
# Warmup Iteration   4: 4059336.677 ops/s
# Warmup Iteration   5: 4231925.989 ops/s
Iteration   1: 4216469.643 ops/s
Iteration   2: 4256173.015 ops/s
Iteration   3: 4215678.705 ops/s
Iteration   4: 4270836.305 ops/s
Iteration   5: 4263342.411 ops/s
Iteration   6: 4230612.878 ops/s
Iteration   7: 4243106.105 ops/s
Iteration   8: 4258303.811 ops/s
Iteration   9: 4322161.417 ops/s
Iteration  10: 4246178.462 ops/s


Result "com.meylism.databind.Serialization.gson":
  4396109.976 ?(99.9%) 146330.627 ops/s [Average]
  (min, avg, max) = (4215678.705, 4396109.976, 4749271.198), stdev = 168514.568
  CI (99.9%): [4249779.349, 4542440.603] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 6161461.013 ops/s
# Warmup Iteration   2: 6217542.779 ops/s
# Warmup Iteration   3: 6553919.224 ops/s
# Warmup Iteration   4: 6713475.005 ops/s
# Warmup Iteration   5: 6480781.537 ops/s
Iteration   1: 6417074.459 ops/s
Iteration   2: 6408750.969 ops/s
Iteration   3: 6607863.983 ops/s
Iteration   4: 6491058.702 ops/s
Iteration   5: 6638131.693 ops/s
Iteration   6: 6546011.680 ops/s
Iteration   7: 6578144.040 ops/s
Iteration   8: 6316855.944 ops/s
Iteration   9: 6215490.098 ops/s
Iteration  10: 6398300.062 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 5198745.549 ops/s
# Warmup Iteration   2: 5151939.629 ops/s
# Warmup Iteration   3: 5179747.712 ops/s
# Warmup Iteration   4: 5043787.209 ops/s
# Warmup Iteration   5: 5125551.593 ops/s
Iteration   1: 4956320.337 ops/s
Iteration   2: 5111479.580 ops/s
Iteration   3: 4926935.478 ops/s
Iteration   4: 5055004.787 ops/s
Iteration   5: 5118595.581 ops/s
Iteration   6: 5227413.471 ops/s
Iteration   7: 4974358.864 ops/s
Iteration   8: 5084254.298 ops/s
Iteration   9: 5012124.460 ops/s
Iteration  10: 5089100.601 ops/s


Result "com.meylism.databind.Serialization.jackson":
  5758663.454 ?(99.9%) 633897.204 ops/s [Average]
  (min, avg, max) = (4926935.478, 5758663.454, 6638131.693), stdev = 729996.962
  CI (99.9%): [5124766.251, 6392560.658] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 6506130.273 ops/s
# Warmup Iteration   2: 6946895.527 ops/s
# Warmup Iteration   3: 7135065.234 ops/s
# Warmup Iteration   4: 7121344.684 ops/s
# Warmup Iteration   5: 7074975.367 ops/s
Iteration   1: 7069302.414 ops/s
Iteration   2: 7078873.835 ops/s
Iteration   3: 7162795.544 ops/s
Iteration   4: 7058534.613 ops/s
Iteration   5: 7003876.613 ops/s
Iteration   6: 6983883.495 ops/s
Iteration   7: 6959319.584 ops/s
Iteration   8: 7008299.098 ops/s
Iteration   9: 6994002.435 ops/s
Iteration  10: 7084533.474 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 5906932.190 ops/s
# Warmup Iteration   2: 5949989.674 ops/s
# Warmup Iteration   3: 5910858.414 ops/s
# Warmup Iteration   4: 5926614.070 ops/s
# Warmup Iteration   5: 5965669.189 ops/s
Iteration   1: 5956486.933 ops/s
Iteration   2: 5918624.495 ops/s
Iteration   3: 5985367.053 ops/s
Iteration   4: 5912706.349 ops/s
Iteration   5: 5742480.250 ops/s
Iteration   6: 5884599.416 ops/s
Iteration   7: 5781138.793 ops/s
Iteration   8: 5676453.045 ops/s
Iteration   9: 5881836.870 ops/s
Iteration  10: 6009089.356 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  6457610.183 ?(99.9%) 524484.760 ops/s [Average]
  (min, avg, max) = (5676453.045, 6457610.183, 7162795.544), stdev = 603997.430
  CI (99.9%): [5933125.423, 6982094.944] (assumes normal distribution)


# Run complete. Total time: 00:13:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score        Error  Units
Serialization.dsljson              thrpt   20  8267907.168 ? 118782.546  ops/s
Serialization.dsljson_reflection   thrpt   20  8896437.043 ? 503527.031  ops/s
Serialization.gson                 thrpt   20  4396109.976 ? 146330.627  ops/s
Serialization.jackson              thrpt   20  5758663.454 ? 633897.204  ops/s
Serialization.jackson_afterburner  thrpt   20  6457610.183 ? 524484.760  ops/s
