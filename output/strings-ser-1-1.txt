# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
755854.284 ops/s
# Warmup Iteration   2: 765012.443 ops/s
# Warmup Iteration   3: 768550.846 ops/s
# Warmup Iteration   4: 768605.229 ops/s
# Warmup Iteration   5: 768268.511 ops/s
Iteration   1: 768100.934 ops/s
Iteration   2: 766462.817 ops/s
Iteration   3: 768193.148 ops/s
Iteration   4: 765793.149 ops/s
Iteration   5: 767398.793 ops/s
Iteration   6: 767658.998 ops/s
Iteration   7: 768473.140 ops/s
Iteration   8: 768275.842 ops/s
Iteration   9: 767616.357 ops/s
Iteration  10: 768323.050 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
675908.148 ops/s
# Warmup Iteration   2: 684421.370 ops/s
# Warmup Iteration   3: 686715.888 ops/s
# Warmup Iteration   4: 686740.578 ops/s
# Warmup Iteration   5: 686077.206 ops/s
Iteration   1: 686653.443 ops/s
Iteration   2: 685514.938 ops/s
Iteration   3: 686145.534 ops/s
Iteration   4: 686458.852 ops/s
Iteration   5: 685868.046 ops/s
Iteration   6: 684905.819 ops/s
Iteration   7: 686947.249 ops/s
Iteration   8: 686170.998 ops/s
Iteration   9: 686943.565 ops/s
Iteration  10: 686378.235 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  726914.145 ±(99.9%) 36279.810 ops/s [Average]
  (min, avg, max) = (684905.819, 726914.145, 768473.140), stdev = 41779.883
  CI (99.9%): [690634.335, 763193.955] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
762685.018 ops/s
# Warmup Iteration   2: 767042.087 ops/s
# Warmup Iteration   3: 769866.940 ops/s
# Warmup Iteration   4: 769538.874 ops/s
# Warmup Iteration   5: 769761.792 ops/s
Iteration   1: 767974.627 ops/s
Iteration   2: 767645.546 ops/s
Iteration   3: 768083.857 ops/s
Iteration   4: 767282.682 ops/s
Iteration   5: 768389.022 ops/s
Iteration   6: 766034.091 ops/s
Iteration   7: 768158.214 ops/s
Iteration   8: 767727.013 ops/s
Iteration   9: 768090.269 ops/s
Iteration  10: 768245.443 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
757288.466 ops/s
# Warmup Iteration   2: 766349.539 ops/s
# Warmup Iteration   3: 768789.452 ops/s
# Warmup Iteration   4: 768532.566 ops/s
# Warmup Iteration   5: 767720.873 ops/s
Iteration   1: 766206.603 ops/s
Iteration   2: 766998.977 ops/s
Iteration   3: 766210.382 ops/s
Iteration   4: 765846.872 ops/s
Iteration   5: 765454.704 ops/s
Iteration   6: 765253.461 ops/s
Iteration   7: 765588.960 ops/s
Iteration   8: 765055.701 ops/s
Iteration   9: 766136.838 ops/s
Iteration  10: 766007.273 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  766819.527 ±(99.9%) 995.374 ops/s [Average]
  (min, avg, max) = (765055.701, 766819.527, 768389.022), stdev = 1146.275
  CI (99.9%): [765824.152, 767814.901] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
487481.887 ops/s
# Warmup Iteration   2: 517805.848 ops/s
# Warmup Iteration   3: 519754.278 ops/s
# Warmup Iteration   4: 520877.514 ops/s
# Warmup Iteration   5: 519479.173 ops/s
Iteration   1: 514994.141 ops/s
Iteration   2: 516397.719 ops/s
Iteration   3: 516104.151 ops/s
Iteration   4: 516213.440 ops/s
Iteration   5: 515953.030 ops/s
Iteration   6: 516662.177 ops/s
Iteration   7: 516456.284 ops/s
Iteration   8: 516585.672 ops/s
Iteration   9: 516083.042 ops/s
Iteration  10: 514113.509 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
496580.917 ops/s
# Warmup Iteration   2: 527276.929 ops/s
# Warmup Iteration   3: 529474.708 ops/s
# Warmup Iteration   4: 529490.124 ops/s
# Warmup Iteration   5: 527975.063 ops/s
Iteration   1: 528370.556 ops/s
Iteration   2: 528253.301 ops/s
Iteration   3: 528181.306 ops/s
Iteration   4: 527297.745 ops/s
Iteration   5: 526743.888 ops/s
Iteration   6: 527257.901 ops/s
Iteration   7: 528810.911 ops/s
Iteration   8: 528815.102 ops/s
Iteration   9: 528470.891 ops/s
Iteration  10: 528289.097 ops/s


Result "com.meylism.databind.Serialization.gson":
  522002.693 ±(99.9%) 5424.336 ops/s [Average]
  (min, avg, max) = (514113.509, 522002.693, 528815.102), stdev = 6246.673
  CI (99.9%): [516578.358, 527427.029] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
423224.646 ops/s
# Warmup Iteration   2: 443073.460 ops/s
# Warmup Iteration   3: 444597.739 ops/s
# Warmup Iteration   4: 446160.423 ops/s
# Warmup Iteration   5: 444742.670 ops/s
Iteration   1: 446680.646 ops/s
Iteration   2: 444681.538 ops/s
Iteration   3: 444722.426 ops/s
Iteration   4: 446084.823 ops/s
Iteration   5: 445778.659 ops/s
Iteration   6: 445351.913 ops/s
Iteration   7: 445151.607 ops/s
Iteration   8: 445295.252 ops/s
Iteration   9: 445489.154 ops/s
Iteration  10: 445387.391 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
489188.693 ops/s
# Warmup Iteration   2: 510104.102 ops/s
# Warmup Iteration   3: 511254.991 ops/s
# Warmup Iteration   4: 510484.831 ops/s
# Warmup Iteration   5: 516178.445 ops/s
Iteration   1: 515423.592 ops/s
Iteration   2: 515579.709 ops/s
Iteration   3: 515317.702 ops/s
Iteration   4: 515273.820 ops/s
Iteration   5: 514662.205 ops/s
Iteration   6: 515712.305 ops/s
Iteration   7: 514982.176 ops/s
Iteration   8: 503168.924 ops/s
Iteration   9: 514818.533 ops/s
Iteration  10: 515347.034 ops/s


Result "com.meylism.databind.Serialization.jackson":
  479745.470 ±(99.9%) 30631.094 ops/s [Average]
  (min, avg, max) = (444681.538, 479745.470, 515712.305), stdev = 35274.813
  CI (99.9%): [449114.377, 510376.564] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
529988.011 ops/s
# Warmup Iteration   2: 549194.923 ops/s
# Warmup Iteration   3: 551134.059 ops/s
# Warmup Iteration   4: 558444.629 ops/s
# Warmup Iteration   5: 555005.712 ops/s
Iteration   1: 554270.784 ops/s
Iteration   2: 553867.137 ops/s
Iteration   3: 554495.416 ops/s
Iteration   4: 553182.320 ops/s
Iteration   5: 554169.671 ops/s
Iteration   6: 553434.154 ops/s
Iteration   7: 554210.315 ops/s
Iteration   8: 554008.864 ops/s
Iteration   9: 553801.170 ops/s
Iteration  10: 554235.792 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
492145.696 ops/s
# Warmup Iteration   2: 509638.002 ops/s
# Warmup Iteration   3: 509630.432 ops/s
# Warmup Iteration   4: 512185.252 ops/s
# Warmup Iteration   5: 513622.261 ops/s
Iteration   1: 511089.379 ops/s
Iteration   2: 509732.586 ops/s
Iteration   3: 511565.762 ops/s
Iteration   4: 510472.971 ops/s
Iteration   5: 510983.376 ops/s
Iteration   6: 511182.501 ops/s
Iteration   7: 512913.528 ops/s
Iteration   8: 510900.390 ops/s
Iteration   9: 512052.518 ops/s
Iteration  10: 511120.282 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  532584.446 ±(99.9%) 19058.980 ops/s [Average]
  (min, avg, max) = (509732.586, 532584.446, 554495.416), stdev = 21948.349
  CI (99.9%): [513525.466, 551643.425] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score       Error  Units
Serialization.dsljson              thrpt   20  726914.145 ± 36279.810  ops/s
Serialization.dsljson_reflection   thrpt   20  766819.527 ±   995.374  ops/s
Serialization.gson                 thrpt   20  522002.693 ±  5424.336  ops/s
Serialization.jackson              thrpt   20  479745.470 ± 30631.094  ops/s
Serialization.jackson_afterburner  thrpt   20  532584.446 ± 19058.980  ops/s
