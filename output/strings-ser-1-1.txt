# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 8823685.189 ops/s
# Warmup Iteration   2: 8924308.815 ops/s
# Warmup Iteration   3: 9030200.918 ops/s
# Warmup Iteration   4: 9009120.537 ops/s
# Warmup Iteration   5: 9034642.171 ops/s
Iteration   1: 8993143.411 ops/s
Iteration   2: 8969063.039 ops/s
Iteration   3: 9043860.187 ops/s
Iteration   4: 9119981.440 ops/s
Iteration   5: 9003065.966 ops/s
Iteration   6: 9058205.036 ops/s
Iteration   7: 9059216.865 ops/s
Iteration   8: 9065097.753 ops/s
Iteration   9: 9057679.027 ops/s
Iteration  10: 9122237.533 ops/s

# Run progress: 10.00% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 9140523.974 ops/s
# Warmup Iteration   2: 9238249.341 ops/s
# Warmup Iteration   3: 9424453.167 ops/s
# Warmup Iteration   4: 8857037.864 ops/s
# Warmup Iteration   5: 9200203.318 ops/s
Iteration   1: 8682261.977 ops/s
Iteration   2: 8631266.472 ops/s
Iteration   3: 8954695.407 ops/s
Iteration   4: 9150280.597 ops/s
Iteration   5: 8635833.271 ops/s
Iteration   6: 9109106.037 ops/s
Iteration   7: 8968816.972 ops/s
Iteration   8: 9205530.970 ops/s
Iteration   9: 9096584.417 ops/s
Iteration  10: 9219550.902 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  9007273.864 ?(99.9%) 148077.147 ops/s [Average]
  (min, avg, max) = (8631266.472, 9007273.864, 9219550.902), stdev = 170525.863
  CI (99.9%): [8859196.717, 9155351.011] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:45
# Fork: 1 of 2
# Warmup Iteration   1: 9251384.627 ops/s
# Warmup Iteration   2: 9458532.959 ops/s
# Warmup Iteration   3: 9685986.259 ops/s
# Warmup Iteration   4: 9599604.224 ops/s
# Warmup Iteration   5: 9457669.642 ops/s
Iteration   1: 9594675.597 ops/s
Iteration   2: 9623632.640 ops/s
Iteration   3: 9586247.398 ops/s
Iteration   4: 9501789.999 ops/s
Iteration   5: 9469267.423 ops/s
Iteration   6: 9528506.842 ops/s
Iteration   7: 9455964.442 ops/s
Iteration   8: 9429689.774 ops/s
Iteration   9: 9558735.248 ops/s
Iteration  10: 9284527.509 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 8643976.880 ops/s
# Warmup Iteration   2: 8781444.981 ops/s
# Warmup Iteration   3: 8864437.483 ops/s
# Warmup Iteration   4: 8831436.180 ops/s
# Warmup Iteration   5: 8809176.744 ops/s
Iteration   1: 8485643.293 ops/s
Iteration   2: 8882309.026 ops/s
Iteration   3: 8842042.494 ops/s
Iteration   4: 8888431.375 ops/s
Iteration   5: 8869028.929 ops/s
Iteration   6: 8959775.440 ops/s
Iteration   7: 8908277.363 ops/s
Iteration   8: 8872363.929 ops/s
Iteration   9: 8958862.927 ops/s
Iteration  10: 8978828.807 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  9183930.023 ?(99.9%) 302653.220 ops/s [Average]
  (min, avg, max) = (8485643.293, 9183930.023, 9623632.640), stdev = 348535.899
  CI (99.9%): [8881276.802, 9486583.243] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 4061746.749 ops/s
# Warmup Iteration   2: 4390051.742 ops/s
# Warmup Iteration   3: 4288453.753 ops/s
# Warmup Iteration   4: 4518804.876 ops/s
# Warmup Iteration   5: 4235163.130 ops/s
Iteration   1: 4237940.732 ops/s
Iteration   2: 4395357.410 ops/s
Iteration   3: 4382137.149 ops/s
Iteration   4: 4393886.356 ops/s
Iteration   5: 4431748.161 ops/s
Iteration   6: 4407954.407 ops/s
Iteration   7: 4415006.267 ops/s
Iteration   8: 4348335.906 ops/s
Iteration   9: 4396901.500 ops/s
Iteration  10: 4316827.137 ops/s

# Run progress: 50.00% complete, ETA 00:06:43
# Fork: 2 of 2
# Warmup Iteration   1: 3883911.460 ops/s
# Warmup Iteration   2: 4086322.826 ops/s
# Warmup Iteration   3: 4125388.324 ops/s
# Warmup Iteration   4: 4084623.556 ops/s
# Warmup Iteration   5: 4096117.073 ops/s
Iteration   1: 4071158.714 ops/s
Iteration   2: 4163646.031 ops/s
Iteration   3: 4122217.480 ops/s
Iteration   4: 3981559.271 ops/s
Iteration   5: 4036984.495 ops/s
Iteration   6: 3891979.310 ops/s
Iteration   7: 3983625.675 ops/s
Iteration   8: 3973287.812 ops/s
Iteration   9: 4194652.437 ops/s
Iteration  10: 4055495.630 ops/s


Result "com.meylism.databind.Serialization.gson":
  4210035.094 ?(99.9%) 159150.258 ops/s [Average]
  (min, avg, max) = (3891979.310, 4210035.094, 4431748.161), stdev = 183277.674
  CI (99.9%): [4050884.835, 4369185.352] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 4925668.127 ops/s
# Warmup Iteration   2: 2360792.358 ops/s
# Warmup Iteration   3: 2354559.524 ops/s
# Warmup Iteration   4: 2338741.314 ops/s
# Warmup Iteration   5: 2332661.239 ops/s
Iteration   1: 2342775.924 ops/s
Iteration   2: 2372092.125 ops/s
Iteration   3: 2394223.429 ops/s
Iteration   4: 2392423.937 ops/s
Iteration   5: 2379664.506 ops/s
Iteration   6: 2334202.228 ops/s
Iteration   7: 2278354.628 ops/s
Iteration   8: 2371271.877 ops/s
Iteration   9: 2393580.827 ops/s
Iteration  10: 2374291.349 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 5237825.248 ops/s
# Warmup Iteration   2: 5130014.552 ops/s
# Warmup Iteration   3: 5240868.926 ops/s
# Warmup Iteration   4: 5124307.207 ops/s
# Warmup Iteration   5: 5138489.584 ops/s
Iteration   1: 5159535.331 ops/s
Iteration   2: 5192416.913 ops/s
Iteration   3: 5196195.050 ops/s
Iteration   4: 5117461.205 ops/s
Iteration   5: 5166827.302 ops/s
Iteration   6: 5106068.185 ops/s
Iteration   7: 5187325.741 ops/s
Iteration   8: 5288586.194 ops/s
Iteration   9: 5223437.066 ops/s
Iteration  10: 5097459.152 ops/s


Result "com.meylism.databind.Serialization.jackson":
  3768409.648 ?(99.9%) 1252512.516 ops/s [Average]
  (min, avg, max) = (2278354.628, 3768409.648, 5288586.194), stdev = 1442395.276
  CI (99.9%): [2515897.133, 5020922.164] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 6058459.180 ops/s
# Warmup Iteration   2: 6380763.078 ops/s
# Warmup Iteration   3: 6461216.685 ops/s
# Warmup Iteration   4: 6485516.215 ops/s
# Warmup Iteration   5: 6443545.856 ops/s
Iteration   1: 6494803.641 ops/s
Iteration   2: 6227266.402 ops/s
Iteration   3: 6204970.866 ops/s
Iteration   4: 6356558.632 ops/s
Iteration   5: 6508809.357 ops/s
Iteration   6: 6418680.879 ops/s
Iteration   7: 6331315.097 ops/s
Iteration   8: 6491775.058 ops/s
Iteration   9: 6241734.433 ops/s
Iteration  10: 6319269.855 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 5979334.274 ops/s
# Warmup Iteration   2: 6313999.994 ops/s
# Warmup Iteration   3: 6333944.383 ops/s
# Warmup Iteration   4: 6181022.618 ops/s
# Warmup Iteration   5: 6148381.725 ops/s
Iteration   1: 5887933.570 ops/s
Iteration   2: 5981553.364 ops/s
Iteration   3: 6009013.358 ops/s
Iteration   4: 6161157.321 ops/s
Iteration   5: 5973315.830 ops/s
Iteration   6: 5957333.801 ops/s
Iteration   7: 5900398.043 ops/s
Iteration   8: 5896886.118 ops/s
Iteration   9: 5938644.604 ops/s
Iteration  10: 5901623.343 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  6160152.179 ?(99.9%) 196637.463 ops/s [Average]
  (min, avg, max) = (5887933.570, 6160152.179, 6508809.357), stdev = 226447.995
  CI (99.9%): [5963514.715, 6356789.642] (assumes normal distribution)


# Run complete. Total time: 00:13:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score         Error  Units
Serialization.dsljson              thrpt   20  9007273.864 ?  148077.147  ops/s
Serialization.dsljson_reflection   thrpt   20  9183930.023 ?  302653.220  ops/s
Serialization.gson                 thrpt   20  4210035.094 ?  159150.258  ops/s
Serialization.jackson              thrpt   20  3768409.648 ? 1252512.516  ops/s
Serialization.jackson_afterburner  thrpt   20  6160152.179 ?  196637.463  ops/s
