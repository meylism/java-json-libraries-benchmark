# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 7518.577 ops/s
# Warmup Iteration   2: 7693.507 ops/s
# Warmup Iteration   3: 7700.756 ops/s
# Warmup Iteration   4: 7736.278 ops/s
# Warmup Iteration   5: 7769.031 ops/s
Iteration   1: 7611.937 ops/s
Iteration   2: 7627.300 ops/s
Iteration   3: 7684.087 ops/s
Iteration   4: 7616.312 ops/s
Iteration   5: 7689.539 ops/s
Iteration   6: 7777.058 ops/s
Iteration   7: 7746.081 ops/s
Iteration   8: 7476.213 ops/s
Iteration   9: 7601.126 ops/s
Iteration  10: 7663.634 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
# Warmup Iteration   1: 7257.511 ops/s
# Warmup Iteration   2: 7461.207 ops/s
# Warmup Iteration   3: 7466.483 ops/s
# Warmup Iteration   4: 7441.007 ops/s
# Warmup Iteration   5: 7523.700 ops/s
Iteration   1: 7560.764 ops/s
Iteration   2: 7150.034 ops/s
Iteration   3: 7094.714 ops/s
Iteration   4: 7247.761 ops/s
Iteration   5: 7466.880 ops/s
Iteration   6: 7383.711 ops/s
Iteration   7: 7560.037 ops/s
Iteration   8: 7517.273 ops/s
Iteration   9: 7448.940 ops/s
Iteration  10: 7137.476 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  7503.044 ?(99.9%) 177.444 ops/s [Average]
  (min, avg, max) = (7094.714, 7503.044, 7777.058), stdev = 204.345
  CI (99.9%): [7325.600, 7680.488] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 7539.440 ops/s
# Warmup Iteration   2: 7620.762 ops/s
# Warmup Iteration   3: 7633.694 ops/s
# Warmup Iteration   4: 7921.394 ops/s
# Warmup Iteration   5: 7928.216 ops/s
Iteration   1: 7996.526 ops/s
Iteration   2: 7785.503 ops/s
Iteration   3: 7781.784 ops/s
Iteration   4: 7946.632 ops/s
Iteration   5: 7778.438 ops/s
Iteration   6: 7746.742 ops/s
Iteration   7: 7956.417 ops/s
Iteration   8: 7964.982 ops/s
Iteration   9: 7974.304 ops/s
Iteration  10: 7661.101 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 7725.604 ops/s
# Warmup Iteration   2: 7985.578 ops/s
# Warmup Iteration   3: 7987.886 ops/s
# Warmup Iteration   4: 7956.675 ops/s
# Warmup Iteration   5: 8053.029 ops/s
Iteration   1: 7997.060 ops/s
Iteration   2: 8013.648 ops/s
Iteration   3: 8026.721 ops/s
Iteration   4: 7992.368 ops/s
Iteration   5: 7916.105 ops/s
Iteration   6: 8008.385 ops/s
Iteration   7: 7965.788 ops/s
Iteration   8: 7798.584 ops/s
Iteration   9: 7997.748 ops/s
Iteration  10: 8010.759 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  7915.980 ?(99.9%) 97.004 ops/s [Average]
  (min, avg, max) = (7661.101, 7915.980, 8026.721), stdev = 111.710
  CI (99.9%): [7818.976, 8012.984] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 15923.333 ops/s
# Warmup Iteration   2: 17291.931 ops/s
# Warmup Iteration   3: 17861.897 ops/s
# Warmup Iteration   4: 18003.748 ops/s
# Warmup Iteration   5: 17919.272 ops/s
Iteration   1: 17988.576 ops/s
Iteration   2: 17873.473 ops/s
Iteration   3: 18003.330 ops/s
Iteration   4: 18077.822 ops/s
Iteration   5: 17901.937 ops/s
Iteration   6: 17348.007 ops/s
Iteration   7: 17888.326 ops/s
Iteration   8: 18213.030 ops/s
Iteration   9: 17743.835 ops/s
Iteration  10: 18010.165 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 15927.805 ops/s
# Warmup Iteration   2: 16576.246 ops/s
# Warmup Iteration   3: 16351.275 ops/s
# Warmup Iteration   4: 16827.904 ops/s
# Warmup Iteration   5: 17154.087 ops/s
Iteration   1: 17000.717 ops/s
Iteration   2: 17213.487 ops/s
Iteration   3: 17167.899 ops/s
Iteration   4: 17085.611 ops/s
Iteration   5: 16859.923 ops/s
Iteration   6: 17025.519 ops/s
Iteration   7: 16873.995 ops/s
Iteration   8: 17078.715 ops/s
Iteration   9: 16970.860 ops/s
Iteration  10: 17042.757 ops/s


Result "com.meylism.databind.Serialization.gson":
  17468.399 ?(99.9%) 418.619 ops/s [Average]
  (min, avg, max) = (16859.923, 17468.399, 18213.030), stdev = 482.082
  CI (99.9%): [17049.780, 17887.018] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 6768.210 ops/s
# Warmup Iteration   2: 7084.742 ops/s
# Warmup Iteration   3: 7068.881 ops/s
# Warmup Iteration   4: 7133.469 ops/s
# Warmup Iteration   5: 7115.763 ops/s
Iteration   1: 6966.217 ops/s
Iteration   2: 6857.645 ops/s
Iteration   3: 7079.768 ops/s
Iteration   4: 7148.096 ops/s
Iteration   5: 6966.634 ops/s
Iteration   6: 7059.877 ops/s
Iteration   7: 7192.857 ops/s
Iteration   8: 7194.352 ops/s
Iteration   9: 7093.952 ops/s
Iteration  10: 7119.251 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 7405.967 ops/s
# Warmup Iteration   2: 7472.452 ops/s
# Warmup Iteration   3: 7625.540 ops/s
# Warmup Iteration   4: 7592.253 ops/s
# Warmup Iteration   5: 7565.639 ops/s
Iteration   1: 7642.032 ops/s
Iteration   2: 7682.832 ops/s
Iteration   3: 7565.073 ops/s
Iteration   4: 7620.183 ops/s
Iteration   5: 7645.321 ops/s
Iteration   6: 7651.859 ops/s
Iteration   7: 7576.958 ops/s
Iteration   8: 7606.619 ops/s
Iteration   9: 7616.823 ops/s
Iteration  10: 7648.245 ops/s


Result "com.meylism.databind.Serialization.jackson":
  7346.730 ?(99.9%) 257.696 ops/s [Average]
  (min, avg, max) = (6857.645, 7346.730, 7682.832), stdev = 296.763
  CI (99.9%): [7089.033, 7604.426] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 7270.610 ops/s
# Warmup Iteration   2: 7520.202 ops/s
# Warmup Iteration   3: 7513.053 ops/s
# Warmup Iteration   4: 7575.414 ops/s
# Warmup Iteration   5: 7448.774 ops/s
Iteration   1: 7611.296 ops/s
Iteration   2: 7630.392 ops/s
Iteration   3: 7621.332 ops/s
Iteration   4: 7666.114 ops/s
Iteration   5: 7591.044 ops/s
Iteration   6: 7634.333 ops/s
Iteration   7: 7580.055 ops/s
Iteration   8: 7541.923 ops/s
Iteration   9: 7350.557 ops/s
Iteration  10: 7583.387 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 7315.295 ops/s
# Warmup Iteration   2: 7601.013 ops/s
# Warmup Iteration   3: 7595.843 ops/s
# Warmup Iteration   4: 7568.868 ops/s
# Warmup Iteration   5: 7669.596 ops/s
Iteration   1: 7394.973 ops/s
Iteration   2: 7588.768 ops/s
Iteration   3: 7693.833 ops/s
Iteration   4: 7692.272 ops/s
Iteration   5: 7598.833 ops/s
Iteration   6: 7590.249 ops/s
Iteration   7: 7639.104 ops/s
Iteration   8: 7671.769 ops/s
Iteration   9: 7623.154 ops/s
Iteration  10: 7518.327 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  7591.086 ?(99.9%) 75.932 ops/s [Average]
  (min, avg, max) = (7350.557, 7591.086, 7693.833), stdev = 87.443
  CI (99.9%): [7515.154, 7667.017] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt      Score     Error  Units
Serialization.dsljson              thrpt   20   7503.044 ? 177.444  ops/s
Serialization.dsljson_reflection   thrpt   20   7915.980 ?  97.004  ops/s
Serialization.gson                 thrpt   20  17468.399 ? 418.619  ops/s
Serialization.jackson              thrpt   20   7346.730 ? 257.696  ops/s
Serialization.jackson_afterburner  thrpt   20   7591.086 ?  75.932  ops/s
