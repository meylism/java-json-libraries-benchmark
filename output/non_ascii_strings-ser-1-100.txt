# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 34816.773 ops/s
# Warmup Iteration   2: 35222.367 ops/s
# Warmup Iteration   3: 35680.182 ops/s
# Warmup Iteration   4: 34565.669 ops/s
# Warmup Iteration   5: 35618.628 ops/s
Iteration   1: 35773.439 ops/s
Iteration   2: 35429.566 ops/s
Iteration   3: 35519.435 ops/s
Iteration   4: 35054.262 ops/s
Iteration   5: 35216.012 ops/s
Iteration   6: 35526.956 ops/s
Iteration   7: 35392.712 ops/s
Iteration   8: 35803.667 ops/s
Iteration   9: 34590.446 ops/s
Iteration  10: 35195.245 ops/s

# Run progress: 10.00% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 32564.897 ops/s
# Warmup Iteration   2: 33213.189 ops/s
# Warmup Iteration   3: 33104.798 ops/s
# Warmup Iteration   4: 33107.981 ops/s
# Warmup Iteration   5: 32942.501 ops/s
Iteration   1: 33183.925 ops/s
Iteration   2: 32914.323 ops/s
Iteration   3: 33121.324 ops/s
Iteration   4: 33433.784 ops/s
Iteration   5: 33265.262 ops/s
Iteration   6: 33419.706 ops/s
Iteration   7: 33387.463 ops/s
Iteration   8: 32905.642 ops/s
Iteration   9: 32657.160 ops/s
Iteration  10: 33270.849 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  34253.059 ?(99.9%) 1012.475 ops/s [Average]
  (min, avg, max) = (32657.160, 34253.059, 35803.667), stdev = 1165.967
  CI (99.9%): [33240.584, 35265.534] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: 34743.278 ops/s
# Warmup Iteration   2: 35268.397 ops/s
# Warmup Iteration   3: 35529.367 ops/s
# Warmup Iteration   4: 35801.817 ops/s
# Warmup Iteration   5: 35603.856 ops/s
Iteration   1: 35605.632 ops/s
Iteration   2: 35277.454 ops/s
Iteration   3: 35448.785 ops/s
Iteration   4: 35584.838 ops/s
Iteration   5: 35837.718 ops/s
Iteration   6: 35835.934 ops/s
Iteration   7: 35117.299 ops/s
Iteration   8: 35464.224 ops/s
Iteration   9: 35168.775 ops/s
Iteration  10: 35078.909 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 35329.076 ops/s
# Warmup Iteration   2: 35721.209 ops/s
# Warmup Iteration   3: 35487.263 ops/s
# Warmup Iteration   4: 35628.600 ops/s
# Warmup Iteration   5: 35641.275 ops/s
Iteration   1: 35736.354 ops/s
Iteration   2: 35475.782 ops/s
Iteration   3: 35602.251 ops/s
Iteration   4: 35484.542 ops/s
Iteration   5: 35769.472 ops/s
Iteration   6: 35738.017 ops/s
Iteration   7: 35593.656 ops/s
Iteration   8: 35997.790 ops/s
Iteration   9: 35790.746 ops/s
Iteration  10: 35062.924 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  35533.555 ?(99.9%) 238.908 ops/s [Average]
  (min, avg, max) = (35062.924, 35533.555, 35997.790), stdev = 275.127
  CI (99.9%): [35294.647, 35772.464] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 108028.553 ops/s
# Warmup Iteration   2: 108932.473 ops/s
# Warmup Iteration   3: 111453.704 ops/s
# Warmup Iteration   4: 111792.225 ops/s
# Warmup Iteration   5: 112091.489 ops/s
Iteration   1: 114460.781 ops/s
Iteration   2: 112181.610 ops/s
Iteration   3: 112449.067 ops/s
Iteration   4: 113808.005 ops/s
Iteration   5: 113439.777 ops/s
Iteration   6: 112571.535 ops/s
Iteration   7: 110750.903 ops/s
Iteration   8: 114112.079 ops/s
Iteration   9: 112354.641 ops/s
Iteration  10: 112782.111 ops/s

# Run progress: 50.00% complete, ETA 00:06:43
# Fork: 2 of 2
# Warmup Iteration   1: 109878.133 ops/s
# Warmup Iteration   2: 113055.015 ops/s
# Warmup Iteration   3: 106078.141 ops/s
# Warmup Iteration   4: 113796.911 ops/s
# Warmup Iteration   5: 114697.090 ops/s
Iteration   1: 114439.547 ops/s
Iteration   2: 113245.448 ops/s
Iteration   3: 114237.237 ops/s
Iteration   4: 109044.978 ops/s
Iteration   5: 113016.329 ops/s
Iteration   6: 110568.450 ops/s
Iteration   7: 111172.841 ops/s
Iteration   8: 115327.360 ops/s
Iteration   9: 114554.930 ops/s
Iteration  10: 114020.456 ops/s


Result "com.meylism.databind.Serialization.gson":
  112926.904 ?(99.9%) 1383.383 ops/s [Average]
  (min, avg, max) = (109044.978, 112926.904, 115327.360), stdev = 1593.106
  CI (99.9%): [111543.521, 114310.287] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:22
# Fork: 1 of 2
# Warmup Iteration   1: 40188.759 ops/s
# Warmup Iteration   2: 42145.360 ops/s
# Warmup Iteration   3: 42240.799 ops/s
# Warmup Iteration   4: 41966.370 ops/s
# Warmup Iteration   5: 42318.347 ops/s
Iteration   1: 42498.295 ops/s
Iteration   2: 42606.614 ops/s
Iteration   3: 42519.809 ops/s
Iteration   4: 42671.472 ops/s
Iteration   5: 41853.777 ops/s
Iteration   6: 42320.671 ops/s
Iteration   7: 42623.360 ops/s
Iteration   8: 42158.556 ops/s
Iteration   9: 42613.174 ops/s
Iteration  10: 42459.687 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 40756.204 ops/s
# Warmup Iteration   2: 41026.334 ops/s
# Warmup Iteration   3: 41435.259 ops/s
# Warmup Iteration   4: 40975.572 ops/s
# Warmup Iteration   5: 41698.778 ops/s
Iteration   1: 42121.465 ops/s
Iteration   2: 41787.765 ops/s
Iteration   3: 41098.210 ops/s
Iteration   4: 41290.485 ops/s
Iteration   5: 41912.369 ops/s
Iteration   6: 41634.536 ops/s
Iteration   7: 41638.504 ops/s
Iteration   8: 40736.253 ops/s
Iteration   9: 40889.690 ops/s
Iteration  10: 40995.795 ops/s


Result "com.meylism.databind.Serialization.jackson":
  41921.524 ?(99.9%) 557.304 ops/s [Average]
  (min, avg, max) = (40736.253, 41921.524, 42671.472), stdev = 641.792
  CI (99.9%): [41364.220, 42478.828] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 41871.127 ops/s
# Warmup Iteration   2: 43223.247 ops/s
# Warmup Iteration   3: 43697.952 ops/s
# Warmup Iteration   4: 43336.261 ops/s
# Warmup Iteration   5: 43773.331 ops/s
Iteration   1: 43575.907 ops/s
Iteration   2: 43931.493 ops/s
Iteration   3: 43940.468 ops/s
Iteration   4: 42189.191 ops/s
Iteration   5: 41913.969 ops/s
Iteration   6: 43230.473 ops/s
Iteration   7: 43236.495 ops/s
Iteration   8: 42028.280 ops/s
Iteration   9: 42326.168 ops/s
Iteration  10: 43477.699 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 42072.157 ops/s
# Warmup Iteration   2: 43117.934 ops/s
# Warmup Iteration   3: 43257.316 ops/s
# Warmup Iteration   4: 43437.160 ops/s
# Warmup Iteration   5: 43489.616 ops/s
Iteration   1: 43761.080 ops/s
Iteration   2: 43710.792 ops/s
Iteration   3: 43977.490 ops/s
Iteration   4: 43459.941 ops/s
Iteration   5: 43026.430 ops/s
Iteration   6: 43689.268 ops/s
Iteration   7: 44033.308 ops/s
Iteration   8: 44198.384 ops/s
Iteration   9: 42208.676 ops/s
Iteration  10: 43194.347 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  43255.493 ?(99.9%) 637.667 ops/s [Average]
  (min, avg, max) = (41913.969, 43255.493, 44198.384), stdev = 734.338
  CI (99.9%): [42617.826, 43893.160] (assumes normal distribution)


# Run complete. Total time: 00:13:27

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score      Error  Units
Serialization.dsljson              thrpt   20   34253.059 ? 1012.475  ops/s
Serialization.dsljson_reflection   thrpt   20   35533.555 ?  238.908  ops/s
Serialization.gson                 thrpt   20  112926.904 ? 1383.383  ops/s
Serialization.jackson              thrpt   20   41921.524 ?  557.304  ops/s
Serialization.jackson_afterburner  thrpt   20   43255.493 ?  637.667  ops/s
