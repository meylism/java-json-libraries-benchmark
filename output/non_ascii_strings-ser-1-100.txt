# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5526.639 ops/s
# Warmup Iteration   2: 5650.613 ops/s
# Warmup Iteration   3: 5640.239 ops/s
# Warmup Iteration   4: 5648.904 ops/s
# Warmup Iteration   5: 5648.653 ops/s
Iteration   1: 5641.414 ops/s
Iteration   2: 5647.817 ops/s
Iteration   3: 5644.088 ops/s
Iteration   4: 5659.691 ops/s
Iteration   5: 5638.804 ops/s
Iteration   6: 5651.691 ops/s
Iteration   7: 5651.566 ops/s
Iteration   8: 5648.422 ops/s
Iteration   9: 5649.229 ops/s
Iteration  10: 5644.287 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5779.336 ops/s
# Warmup Iteration   2: 5844.189 ops/s
# Warmup Iteration   3: 5849.769 ops/s
# Warmup Iteration   4: 5868.697 ops/s
# Warmup Iteration   5: 5861.216 ops/s
Iteration   1: 5841.772 ops/s
Iteration   2: 5856.886 ops/s
Iteration   3: 5851.345 ops/s
Iteration   4: 5837.240 ops/s
Iteration   5: 5854.206 ops/s
Iteration   6: 5847.081 ops/s
Iteration   7: 5854.595 ops/s
Iteration   8: 5851.859 ops/s
Iteration   9: 5846.164 ops/s
Iteration  10: 5851.571 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  5748.486 ±(99.9%) 89.938 ops/s [Average]
  (min, avg, max) = (5638.804, 5748.486, 5856.886), stdev = 103.572
  CI (99.9%): [5658.549, 5838.424] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5649.429 ops/s
# Warmup Iteration   2: 5815.167 ops/s
# Warmup Iteration   3: 5807.367 ops/s
# Warmup Iteration   4: 5815.933 ops/s
# Warmup Iteration   5: 5819.985 ops/s
Iteration   1: 5814.947 ops/s
Iteration   2: 5812.936 ops/s
Iteration   3: 5816.199 ops/s
Iteration   4: 5808.618 ops/s
Iteration   5: 5814.223 ops/s
Iteration   6: 5814.129 ops/s
Iteration   7: 5815.610 ops/s
Iteration   8: 5817.007 ops/s
Iteration   9: 5811.210 ops/s
Iteration  10: 5815.451 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5903.157 ops/s
# Warmup Iteration   2: 6043.455 ops/s
# Warmup Iteration   3: 6037.553 ops/s
# Warmup Iteration   4: 6049.669 ops/s
# Warmup Iteration   5: 6040.686 ops/s
Iteration   1: 6039.456 ops/s
Iteration   2: 6038.496 ops/s
Iteration   3: 6040.821 ops/s
Iteration   4: 6048.359 ops/s
Iteration   5: 6047.382 ops/s
Iteration   6: 6045.002 ops/s
Iteration   7: 6042.192 ops/s
Iteration   8: 6043.907 ops/s
Iteration   9: 6031.301 ops/s
Iteration  10: 6043.897 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  5928.057 ±(99.9%) 101.640 ops/s [Average]
  (min, avg, max) = (5808.618, 5928.057, 6048.359), stdev = 117.049
  CI (99.9%): [5826.417, 6029.697] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
9532.510 ops/s
# Warmup Iteration   2: 9946.738 ops/s
# Warmup Iteration   3: 9979.166 ops/s
# Warmup Iteration   4: 9896.010 ops/s
# Warmup Iteration   5: 9850.773 ops/s
Iteration   1: 9918.178 ops/s
Iteration   2: 9907.313 ops/s
Iteration   3: 9880.299 ops/s
Iteration   4: 9913.195 ops/s
Iteration   5: 9918.494 ops/s
Iteration   6: 9909.852 ops/s
Iteration   7: 9916.343 ops/s
Iteration   8: 9885.665 ops/s
Iteration   9: 9916.858 ops/s
Iteration  10: 9917.797 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
12931.712 ops/s
# Warmup Iteration   2: 13556.734 ops/s
# Warmup Iteration   3: 13612.920 ops/s
# Warmup Iteration   4: 13616.662 ops/s
# Warmup Iteration   5: 13618.965 ops/s
Iteration   1: 13658.257 ops/s
Iteration   2: 13579.332 ops/s
Iteration   3: 13649.884 ops/s
Iteration   4: 13638.016 ops/s
Iteration   5: 13634.257 ops/s
Iteration   6: 13621.372 ops/s
Iteration   7: 13579.898 ops/s
Iteration   8: 13657.640 ops/s
Iteration   9: 13655.783 ops/s
Iteration  10: 13652.740 ops/s


Result "com.meylism.databind.Serialization.gson":
  11770.559 ±(99.9%) 1659.145 ops/s [Average]
  (min, avg, max) = (9880.299, 11770.559, 13658.257), stdev = 1910.674
  CI (99.9%): [10111.414, 13429.703] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6313.826 ops/s
# Warmup Iteration   2: 6453.953 ops/s
# Warmup Iteration   3: 6458.896 ops/s
# Warmup Iteration   4: 6494.435 ops/s
# Warmup Iteration   5: 6492.815 ops/s
Iteration   1: 6485.632 ops/s
Iteration   2: 6486.995 ops/s
Iteration   3: 6472.018 ops/s
Iteration   4: 6493.645 ops/s
Iteration   5: 6492.718 ops/s
Iteration   6: 6480.674 ops/s
Iteration   7: 6489.585 ops/s
Iteration   8: 6483.592 ops/s
Iteration   9: 6491.518 ops/s
Iteration  10: 6494.126 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6529.610 ops/s
# Warmup Iteration   2: 6685.027 ops/s
# Warmup Iteration   3: 6691.962 ops/s
# Warmup Iteration   4: 6707.726 ops/s
# Warmup Iteration   5: 6712.517 ops/s
Iteration   1: 6707.601 ops/s
Iteration   2: 6697.968 ops/s
Iteration   3: 6706.969 ops/s
Iteration   4: 6708.078 ops/s
Iteration   5: 6688.628 ops/s
Iteration   6: 6712.175 ops/s
Iteration   7: 6719.509 ops/s
Iteration   8: 6558.384 ops/s
Iteration   9: 6716.479 ops/s
Iteration  10: 6712.076 ops/s


Result "com.meylism.databind.Serialization.jackson":
  6589.918 ±(99.9%) 96.131 ops/s [Average]
  (min, avg, max) = (6472.018, 6589.918, 6719.509), stdev = 110.705
  CI (99.9%): [6493.787, 6686.050] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6413.953 ops/s
# Warmup Iteration   2: 6595.334 ops/s
# Warmup Iteration   3: 6598.421 ops/s
# Warmup Iteration   4: 6629.489 ops/s
# Warmup Iteration   5: 6630.219 ops/s
Iteration   1: 6625.888 ops/s
Iteration   2: 6602.329 ops/s
Iteration   3: 6622.860 ops/s
Iteration   4: 6619.839 ops/s
Iteration   5: 6616.755 ops/s
Iteration   6: 6609.018 ops/s
Iteration   7: 6622.479 ops/s
Iteration   8: 6613.669 ops/s
Iteration   9: 6614.740 ops/s
Iteration  10: 6619.566 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5781.263 ops/s
# Warmup Iteration   2: 5948.193 ops/s
# Warmup Iteration   3: 5952.770 ops/s
# Warmup Iteration   4: 5964.761 ops/s
# Warmup Iteration   5: 5987.541 ops/s
Iteration   1: 5985.070 ops/s
Iteration   2: 5983.558 ops/s
Iteration   3: 5983.136 ops/s
Iteration   4: 5980.512 ops/s
Iteration   5: 5982.026 ops/s
Iteration   6: 5984.383 ops/s
Iteration   7: 5983.034 ops/s
Iteration   8: 5974.376 ops/s
Iteration   9: 5994.791 ops/s
Iteration  10: 5994.352 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  6300.619 ±(99.9%) 281.669 ops/s [Average]
  (min, avg, max) = (5974.376, 6300.619, 6625.888), stdev = 324.371
  CI (99.9%): [6018.950, 6582.288] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt      Score      Error  Units
Serialization.dsljson              thrpt   20   5748.486 ±   89.938  ops/s
Serialization.dsljson_reflection   thrpt   20   5928.057 ±  101.640  ops/s
Serialization.gson                 thrpt   20  11770.559 ± 1659.145  ops/s
Serialization.jackson              thrpt   20   6589.918 ±   96.131  ops/s
Serialization.jackson_afterburner  thrpt   20   6300.619 ±  281.669  ops/s
