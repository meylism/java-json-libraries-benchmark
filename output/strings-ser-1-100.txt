# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5412.710 ops/s
# Warmup Iteration   2: 5444.329 ops/s
# Warmup Iteration   3: 5460.767 ops/s
# Warmup Iteration   4: 5469.827 ops/s
# Warmup Iteration   5: 5466.102 ops/s
Iteration   1: 5439.881 ops/s
Iteration   2: 5440.775 ops/s
Iteration   3: 5439.894 ops/s
Iteration   4: 5435.232 ops/s
Iteration   5: 5435.471 ops/s
Iteration   6: 5435.271 ops/s
Iteration   7: 5427.061 ops/s
Iteration   8: 5429.881 ops/s
Iteration   9: 5434.832 ops/s
Iteration  10: 5440.141 ops/s

# Run progress: 10.00% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
7963.675 ops/s
# Warmup Iteration   2: 8041.526 ops/s
# Warmup Iteration   3: 8067.477 ops/s
# Warmup Iteration   4: 8067.529 ops/s
# Warmup Iteration   5: 8067.730 ops/s
Iteration   1: 8051.034 ops/s
Iteration   2: 8059.109 ops/s
Iteration   3: 8038.076 ops/s
Iteration   4: 8046.844 ops/s
Iteration   5: 8061.156 ops/s
Iteration   6: 8041.211 ops/s
Iteration   7: 8059.314 ops/s
Iteration   8: 8055.031 ops/s
Iteration   9: 8055.606 ops/s
Iteration  10: 8066.180 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  6744.600 ±(99.9%) 1166.005 ops/s [Average]
  (min, avg, max) = (5427.061, 6744.600, 8066.180), stdev = 1342.774
  CI (99.9%): [5578.595, 7910.605] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5678.372 ops/s
# Warmup Iteration   2: 5736.981 ops/s
# Warmup Iteration   3: 5731.705 ops/s
# Warmup Iteration   4: 5738.324 ops/s
# Warmup Iteration   5: 5744.771 ops/s
Iteration   1: 5734.986 ops/s
Iteration   2: 5738.016 ops/s
Iteration   3: 5739.371 ops/s
Iteration   4: 5738.008 ops/s
Iteration   5: 5739.606 ops/s
Iteration   6: 5734.845 ops/s
Iteration   7: 5738.013 ops/s
Iteration   8: 5739.042 ops/s
Iteration   9: 5738.728 ops/s
Iteration  10: 5738.136 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
6969.726 ops/s
# Warmup Iteration   2: 7028.328 ops/s
# Warmup Iteration   3: 7039.804 ops/s
# Warmup Iteration   4: 7041.555 ops/s
# Warmup Iteration   5: 7070.010 ops/s
Iteration   1: 7048.363 ops/s
Iteration   2: 7032.709 ops/s
Iteration   3: 7032.308 ops/s
Iteration   4: 7033.890 ops/s
Iteration   5: 7034.643 ops/s
Iteration   6: 7031.575 ops/s
Iteration   7: 7030.416 ops/s
Iteration   8: 7033.916 ops/s
Iteration   9: 7035.740 ops/s
Iteration  10: 7035.493 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  6386.390 ±(99.9%) 577.780 ops/s [Average]
  (min, avg, max) = (5734.845, 6386.390, 7048.363), stdev = 665.373
  CI (99.9%): [5808.610, 6964.170] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5399.653 ops/s
# Warmup Iteration   2: 5545.609 ops/s
# Warmup Iteration   3: 5554.962 ops/s
# Warmup Iteration   4: 5543.066 ops/s
# Warmup Iteration   5: 5544.472 ops/s
Iteration   1: 5558.310 ops/s
Iteration   2: 5554.985 ops/s
Iteration   3: 5557.994 ops/s
Iteration   4: 5542.074 ops/s
Iteration   5: 5559.478 ops/s
Iteration   6: 5554.830 ops/s
Iteration   7: 5560.756 ops/s
Iteration   8: 5551.255 ops/s
Iteration   9: 5542.760 ops/s
Iteration  10: 5530.242 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5366.309 ops/s
# Warmup Iteration   2: 5508.003 ops/s
# Warmup Iteration   3: 5513.307 ops/s
# Warmup Iteration   4: 5522.585 ops/s
# Warmup Iteration   5: 5531.471 ops/s
Iteration   1: 5519.412 ops/s
Iteration   2: 5519.124 ops/s
Iteration   3: 5518.010 ops/s
Iteration   4: 5500.557 ops/s
Iteration   5: 5514.038 ops/s
Iteration   6: 5498.913 ops/s
Iteration   7: 5518.143 ops/s
Iteration   8: 5515.635 ops/s
Iteration   9: 5498.235 ops/s
Iteration  10: 5519.235 ops/s


Result "com.meylism.databind.Serialization.gson":
  5531.699 ±(99.9%) 19.188 ops/s [Average]
  (min, avg, max) = (5498.235, 5531.699, 5560.756), stdev = 22.097
  CI (99.9%): [5512.511, 5550.888] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5629.796 ops/s
# Warmup Iteration   2: 5740.502 ops/s
# Warmup Iteration   3: 5754.340 ops/s
# Warmup Iteration   4: 5752.672 ops/s
# Warmup Iteration   5: 5756.359 ops/s
Iteration   1: 5748.859 ops/s
Iteration   2: 5749.374 ops/s
Iteration   3: 5740.433 ops/s
Iteration   4: 5750.268 ops/s
Iteration   5: 5745.466 ops/s
Iteration   6: 5747.965 ops/s
Iteration   7: 5752.370 ops/s
Iteration   8: 5752.744 ops/s
Iteration   9: 5744.471 ops/s
Iteration  10: 5775.435 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
5676.615 ops/s
# Warmup Iteration   2: 5766.653 ops/s
# Warmup Iteration   3: 5758.763 ops/s
# Warmup Iteration   4: 5746.826 ops/s
# Warmup Iteration   5: 5766.791 ops/s
Iteration   1: 5774.265 ops/s
Iteration   2: 5771.127 ops/s
Iteration   3: 5774.585 ops/s
Iteration   4: 5772.815 ops/s
Iteration   5: 5774.337 ops/s
Iteration   6: 5770.506 ops/s
Iteration   7: 5774.767 ops/s
Iteration   8: 5638.319 ops/s
Iteration   9: 5758.026 ops/s
Iteration  10: 5795.578 ops/s


Result "com.meylism.databind.Serialization.jackson":
  5755.585 ±(99.9%) 27.159 ops/s [Average]
  (min, avg, max) = (5638.319, 5755.585, 5795.578), stdev = 31.276
  CI (99.9%): [5728.427, 5782.744] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5643.931 ops/s
# Warmup Iteration   2: 5758.736 ops/s
# Warmup Iteration   3: 5748.579 ops/s
# Warmup Iteration   4: 5754.819 ops/s
# Warmup Iteration   5: 5765.558 ops/s
Iteration   1: 5750.193 ops/s
Iteration   2: 5761.538 ops/s
Iteration   3: 5765.644 ops/s
Iteration   4: 5765.100 ops/s
Iteration   5: 5764.247 ops/s
Iteration   6: 5765.260 ops/s
Iteration   7: 5765.120 ops/s
Iteration   8: 5764.424 ops/s
Iteration   9: 5749.788 ops/s
Iteration  10: 5755.121 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
5651.279 ops/s
# Warmup Iteration   2: 5758.185 ops/s
# Warmup Iteration   3: 5751.794 ops/s
# Warmup Iteration   4: 5742.409 ops/s
# Warmup Iteration   5: 5766.630 ops/s
Iteration   1: 5744.102 ops/s
Iteration   2: 5741.203 ops/s
Iteration   3: 5744.884 ops/s
Iteration   4: 5740.511 ops/s
Iteration   5: 5741.185 ops/s
Iteration   6: 5744.203 ops/s
Iteration   7: 5744.738 ops/s
Iteration   8: 5744.802 ops/s
Iteration   9: 5740.089 ops/s
Iteration  10: 5764.512 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  5752.833 ±(99.9%) 9.014 ops/s [Average]
  (min, avg, max) = (5740.089, 5752.833, 5765.644), stdev = 10.381
  CI (99.9%): [5743.819, 5761.847] (assumes normal distribution)


# Run complete. Total time: 00:13:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt     Score      Error  Units
Serialization.dsljson              thrpt   20  6744.600 ± 1166.005  ops/s
Serialization.dsljson_reflection   thrpt   20  6386.390 ±  577.780  ops/s
Serialization.gson                 thrpt   20  5531.699 ±   19.188  ops/s
Serialization.jackson              thrpt   20  5755.585 ±   27.159  ops/s
Serialization.jackson_afterburner  thrpt   20  5752.833 ±    9.014  ops/s
