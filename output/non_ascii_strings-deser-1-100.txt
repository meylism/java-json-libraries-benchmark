# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 20072.328 ops/s
# Warmup Iteration   2: 21742.784 ops/s
# Warmup Iteration   3: 21710.399 ops/s
# Warmup Iteration   4: 20007.447 ops/s
# Warmup Iteration   5: 20578.783 ops/s
Iteration   1: 20377.568 ops/s
Iteration   2: 19961.358 ops/s
Iteration   3: 21825.561 ops/s
Iteration   4: 21890.656 ops/s
Iteration   5: 21870.724 ops/s
Iteration   6: 21749.008 ops/s
Iteration   7: 19922.376 ops/s
Iteration   8: 20079.418 ops/s
Iteration   9: 20526.953 ops/s
Iteration  10: 20070.798 ops/s

# Run progress: 10.00% complete, ETA 00:12:17
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 19004.754 ops/s
# Warmup Iteration   2: 19847.006 ops/s
# Warmup Iteration   3: 20821.292 ops/s
# Warmup Iteration   4: 19901.696 ops/s
# Warmup Iteration   5: 21355.867 ops/s
Iteration   1: 20837.761 ops/s
Iteration   2: 21288.262 ops/s
Iteration   3: 21340.788 ops/s
Iteration   4: 21282.410 ops/s
Iteration   5: 20706.213 ops/s
Iteration   6: 19534.795 ops/s
Iteration   7: 20515.148 ops/s
Iteration   8: 21321.993 ops/s
Iteration   9: 21416.485 ops/s
Iteration  10: 21115.026 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  20881.665 ?(99.9%) 634.365 ops/s [Average]
  (min, avg, max) = (19534.795, 20881.665, 21890.656), stdev = 730.535
  CI (99.9%): [20247.300, 21516.030] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 20147.914 ops/s
# Warmup Iteration   2: 19886.232 ops/s
# Warmup Iteration   3: 20136.811 ops/s
# Warmup Iteration   4: 20653.686 ops/s
# Warmup Iteration   5: 20002.603 ops/s
Iteration   1: 20148.410 ops/s
Iteration   2: 18978.846 ops/s
Iteration   3: 18758.789 ops/s
Iteration   4: 19261.352 ops/s
Iteration   5: 19925.180 ops/s
Iteration   6: 20262.089 ops/s
Iteration   7: 20149.873 ops/s
Iteration   8: 20323.369 ops/s
Iteration   9: 20319.512 ops/s
Iteration  10: 20029.983 ops/s

# Run progress: 30.00% complete, ETA 00:09:33
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 20416.645 ops/s
# Warmup Iteration   2: 21530.070 ops/s
# Warmup Iteration   3: 20364.870 ops/s
# Warmup Iteration   4: 19664.247 ops/s
# Warmup Iteration   5: 19826.924 ops/s
Iteration   1: 19393.157 ops/s
Iteration   2: 19849.686 ops/s
Iteration   3: 19257.799 ops/s
Iteration   4: 19764.058 ops/s
Iteration   5: 19315.321 ops/s
Iteration   6: 19967.641 ops/s
Iteration   7: 19575.769 ops/s
Iteration   8: 19154.776 ops/s
Iteration   9: 20166.012 ops/s
Iteration  10: 19530.956 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  19706.629 ?(99.9%) 415.166 ops/s [Average]
  (min, avg, max) = (18758.789, 19706.629, 20323.369), stdev = 478.106
  CI (99.9%): [19291.463, 20121.795] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 8203.731 ops/s
# Warmup Iteration   2: 9752.503 ops/s
# Warmup Iteration   3: 9947.750 ops/s
# Warmup Iteration   4: 9989.189 ops/s
# Warmup Iteration   5: 9896.024 ops/s
Iteration   1: 10005.394 ops/s
Iteration   2: 9869.866 ops/s
Iteration   3: 9246.702 ops/s
Iteration   4: 9455.081 ops/s
Iteration   5: 9102.556 ops/s
Iteration   6: 9189.314 ops/s
Iteration   7: 9288.861 ops/s
Iteration   8: 9178.317 ops/s
Iteration   9: 8918.511 ops/s
Iteration  10: 8894.856 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 4085.797 ops/s
# Warmup Iteration   2: 5688.257 ops/s
# Warmup Iteration   3: 6146.982 ops/s
# Warmup Iteration   4: 6148.485 ops/s
# Warmup Iteration   5: 5713.532 ops/s
Iteration   1: 5642.376 ops/s
Iteration   2: 5586.765 ops/s
Iteration   3: 5539.722 ops/s
Iteration   4: 5647.998 ops/s
Iteration   5: 5696.543 ops/s
Iteration   6: 6164.342 ops/s
Iteration   7: 6200.150 ops/s
Iteration   8: 6152.014 ops/s
Iteration   9: 6198.784 ops/s
Iteration  10: 6158.158 ops/s


Result "com.meylism.databind.Deserialization.gson":
  7606.815 ?(99.9%) 1547.675 ops/s [Average]
  (min, avg, max) = (5539.722, 7606.815, 10005.394), stdev = 1782.305
  CI (99.9%): [6059.141, 9154.490] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:27
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 20000.892 ops/s
# Warmup Iteration   2: 20627.613 ops/s
# Warmup Iteration   3: 18716.757 ops/s
# Warmup Iteration   4: 19073.785 ops/s
# Warmup Iteration   5: 19382.257 ops/s
Iteration   1: 20158.826 ops/s
Iteration   2: 21036.768 ops/s
Iteration   3: 21203.262 ops/s
Iteration   4: 21377.564 ops/s
Iteration   5: 21221.685 ops/s
Iteration   6: 21397.359 ops/s
Iteration   7: 21337.685 ops/s
Iteration   8: 21528.992 ops/s
Iteration   9: 20604.103 ops/s
Iteration  10: 19576.689 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 19103.530 ops/s
# Warmup Iteration   2: 19959.557 ops/s
# Warmup Iteration   3: 18997.835 ops/s
# Warmup Iteration   4: 19215.501 ops/s
# Warmup Iteration   5: 20458.088 ops/s
Iteration   1: 21340.350 ops/s
Iteration   2: 21268.198 ops/s
Iteration   3: 20226.671 ops/s
Iteration   4: 19198.070 ops/s
Iteration   5: 20011.427 ops/s
Iteration   6: 18648.909 ops/s
Iteration   7: 19197.703 ops/s
Iteration   8: 18651.100 ops/s
Iteration   9: 19072.515 ops/s
Iteration  10: 19577.580 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  20331.773 ?(99.9%) 886.167 ops/s [Average]
  (min, avg, max) = (18648.909, 20331.773, 21528.992), stdev = 1020.512
  CI (99.9%): [19445.605, 21217.940] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
18102.645 ops/s
# Warmup Iteration   2: 22327.175 ops/s
# Warmup Iteration   3: 22670.574 ops/s
# Warmup Iteration   4: 21085.077 ops/s
# Warmup Iteration   5: 20818.177 ops/s
Iteration   1: 19931.456 ops/s
Iteration   2: 20216.823 ops/s
Iteration   3: 19755.310 ops/s
Iteration   4: 22093.441 ops/s
Iteration   5: 20917.811 ops/s
Iteration   6: 22264.430 ops/s
Iteration   7: 21302.111 ops/s
Iteration   8: 21423.750 ops/s
Iteration   9: 20056.824 ops/s
Iteration  10: 19813.046 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
21302.122 ops/s
# Warmup Iteration   2: 21099.649 ops/s
# Warmup Iteration   3: 20638.635 ops/s
# Warmup Iteration   4: 21850.871 ops/s
# Warmup Iteration   5: 22578.660 ops/s
Iteration   1: 22021.460 ops/s
Iteration   2: 21563.092 ops/s
Iteration   3: 22577.251 ops/s
Iteration   4: 22741.731 ops/s
Iteration   5: 22796.227 ops/s
Iteration   6: 22674.674 ops/s
Iteration   7: 22777.770 ops/s
Iteration   8: 21499.165 ops/s
Iteration   9: 21684.423 ops/s
Iteration  10: 21831.139 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  21497.097 ?(99.9%) 917.563 ops/s [Average]
  (min, avg, max) = (19755.310, 21497.097, 22796.227), stdev = 1056.667
  CI (99.9%): [20579.534, 22414.660] (assumes normal distribution)


# Run complete. Total time: 00:13:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt      Score      Error  Units
Deserialization.dsljson              thrpt   20  20881.665 ?  634.365  ops/s
Deserialization.dsljson_reflection   thrpt   20  19706.629 ?  415.166  ops/s
Deserialization.gson                 thrpt   20   7606.815 ? 1547.675  ops/s
Deserialization.jackson              thrpt   20  20331.773 ?  886.167  ops/s
Deserialization.jackson_afterburner  thrpt   20  21497.097 ?  917.563  ops/s
