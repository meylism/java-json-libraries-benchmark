# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 33351.448 ops/s
# Warmup Iteration   2: 36714.198 ops/s
# Warmup Iteration   3: 36413.289 ops/s
# Warmup Iteration   4: 35577.275 ops/s
# Warmup Iteration   5: 36169.964 ops/s
Iteration   1: 35663.120 ops/s
Iteration   2: 36350.180 ops/s
Iteration   3: 36105.377 ops/s
Iteration   4: 34107.505 ops/s
Iteration   5: 37994.966 ops/s
Iteration   6: 39206.757 ops/s
Iteration   7: 38746.264 ops/s
Iteration   8: 38781.337 ops/s
Iteration   9: 38679.159 ops/s
Iteration  10: 38988.238 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 36706.664 ops/s
# Warmup Iteration   2: 37855.558 ops/s
# Warmup Iteration   3: 37045.470 ops/s
# Warmup Iteration   4: 37225.989 ops/s
# Warmup Iteration   5: 37292.941 ops/s
Iteration   1: 36759.872 ops/s
Iteration   2: 37413.612 ops/s
Iteration   3: 37008.146 ops/s
Iteration   4: 37311.163 ops/s
Iteration   5: 37314.361 ops/s
Iteration   6: 37270.904 ops/s
Iteration   7: 36835.349 ops/s
Iteration   8: 37278.851 ops/s
Iteration   9: 37168.705 ops/s
Iteration  10: 37453.683 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  37321.877 ?(99.9%) 1072.734 ops/s [Average]
  (min, avg, max) = (34107.505, 37321.877, 39206.757), stdev = 1235.362
  CI (99.9%): [36249.143, 38394.612] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 38526.715 ops/s
# Warmup Iteration   2: 39870.716 ops/s
# Warmup Iteration   3: 40154.222 ops/s
# Warmup Iteration   4: 39826.604 ops/s
# Warmup Iteration   5: 40427.524 ops/s
Iteration   1: 40137.365 ops/s
Iteration   2: 39497.665 ops/s
Iteration   3: 38236.283 ops/s
Iteration   4: 39947.345 ops/s
Iteration   5: 40270.832 ops/s
Iteration   6: 40383.745 ops/s
Iteration   7: 39892.763 ops/s
Iteration   8: 40299.349 ops/s
Iteration   9: 40366.095 ops/s
Iteration  10: 40268.323 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 36018.777 ops/s
# Warmup Iteration   2: 35077.239 ops/s
# Warmup Iteration   3: 34727.864 ops/s
# Warmup Iteration   4: 36494.653 ops/s
# Warmup Iteration   5: 36102.066 ops/s
Iteration   1: 36784.090 ops/s
Iteration   2: 36414.665 ops/s
Iteration   3: 36506.324 ops/s
Iteration   4: 36370.092 ops/s
Iteration   5: 36167.353 ops/s
Iteration   6: 35664.936 ops/s
Iteration   7: 35069.371 ops/s
Iteration   8: 35998.759 ops/s
Iteration   9: 36469.066 ops/s
Iteration  10: 36111.895 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  38042.816 ?(99.9%) 1751.135 ops/s [Average]
  (min, avg, max) = (35069.371, 38042.816, 40383.745), stdev = 2016.610
  CI (99.9%): [36291.681, 39793.951] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 9698.042 ops/s
# Warmup Iteration   2: 10575.076 ops/s
# Warmup Iteration   3: 10544.718 ops/s
# Warmup Iteration   4: 10682.604 ops/s
# Warmup Iteration   5: 10632.568 ops/s
Iteration   1: 10661.543 ops/s
Iteration   2: 10730.118 ops/s
Iteration   3: 10613.282 ops/s
Iteration   4: 10680.429 ops/s
Iteration   5: 10673.695 ops/s
Iteration   6: 10530.936 ops/s
Iteration   7: 10449.982 ops/s
Iteration   8: 9971.858 ops/s
Iteration   9: 10365.713 ops/s
Iteration  10: 10588.328 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 9488.411 ops/s
# Warmup Iteration   2: 10598.540 ops/s
# Warmup Iteration   3: 10680.717 ops/s
# Warmup Iteration   4: 10577.893 ops/s
# Warmup Iteration   5: 10543.653 ops/s
Iteration   1: 10750.041 ops/s
Iteration   2: 10675.733 ops/s
Iteration   3: 10712.700 ops/s
Iteration   4: 10704.956 ops/s
Iteration   5: 10420.881 ops/s
Iteration   6: 10372.930 ops/s
Iteration   7: 10546.809 ops/s
Iteration   8: 9895.438 ops/s
Iteration   9: 10481.636 ops/s
Iteration  10: 10613.064 ops/s


Result "com.meylism.databind.Deserialization.gson":
  10522.004 ?(99.9%) 202.868 ops/s [Average]
  (min, avg, max) = (9895.438, 10522.004, 10750.041), stdev = 233.623
  CI (99.9%): [10319.135, 10724.872] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 45676.811 ops/s
# Warmup Iteration   2: 50451.957 ops/s
# Warmup Iteration   3: 50368.537 ops/s
# Warmup Iteration   4: 50432.365 ops/s
# Warmup Iteration   5: 50024.989 ops/s
Iteration   1: 50589.018 ops/s
Iteration   2: 47794.509 ops/s
Iteration   3: 49952.914 ops/s
Iteration   4: 48447.501 ops/s
Iteration   5: 50847.429 ops/s
Iteration   6: 50350.900 ops/s
Iteration   7: 50822.083 ops/s
Iteration   8: 49806.199 ops/s
Iteration   9: 50095.410 ops/s
Iteration  10: 49457.892 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 44895.824 ops/s
# Warmup Iteration   2: 48518.496 ops/s
# Warmup Iteration   3: 46954.680 ops/s
# Warmup Iteration   4: 48688.368 ops/s
# Warmup Iteration   5: 48877.665 ops/s
Iteration   1: 48500.102 ops/s
Iteration   2: 47888.028 ops/s
Iteration   3: 46206.731 ops/s
Iteration   4: 47063.159 ops/s
Iteration   5: 46069.703 ops/s
Iteration   6: 47608.471 ops/s
Iteration   7: 48508.168 ops/s
Iteration   8: 48254.613 ops/s
Iteration   9: 46607.168 ops/s
Iteration  10: 48645.684 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  48675.784 ?(99.9%) 1320.214 ops/s [Average]
  (min, avg, max) = (46069.703, 48675.784, 50847.429), stdev = 1520.360
  CI (99.9%): [47355.570, 49995.998] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 44689.865 ops/s
# Warmup Iteration   2: 48154.015 ops/s
# Warmup Iteration   3: 48324.894 ops/s
# Warmup Iteration   4: 48483.236 ops/s
# Warmup Iteration   5: 48485.567 ops/s
Iteration   1: 48810.890 ops/s
Iteration   2: 48461.930 ops/s
Iteration   3: 47862.733 ops/s
Iteration   4: 48465.680 ops/s
Iteration   5: 48085.545 ops/s
Iteration   6: 48452.806 ops/s
Iteration   7: 47270.023 ops/s
Iteration   8: 47061.017 ops/s
Iteration   9: 45627.238 ops/s
Iteration  10: 45937.527 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 45515.469 ops/s
# Warmup Iteration   2: 47505.016 ops/s
# Warmup Iteration   3: 48876.113 ops/s
# Warmup Iteration   4: 48300.821 ops/s
# Warmup Iteration   5: 49146.355 ops/s
Iteration   1: 49227.392 ops/s
Iteration   2: 49165.390 ops/s
Iteration   3: 49196.569 ops/s
Iteration   4: 48796.379 ops/s
Iteration   5: 48519.415 ops/s
Iteration   6: 48486.808 ops/s
Iteration   7: 48739.843 ops/s
Iteration   8: 49096.084 ops/s
Iteration   9: 47427.136 ops/s
Iteration  10: 48115.300 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  48140.285 ?(99.9%) 885.359 ops/s [Average]
  (min, avg, max) = (45627.238, 48140.285, 49227.392), stdev = 1019.581
  CI (99.9%): [47254.926, 49025.644] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt      Score      Error  Units
Deserialization.dsljson              thrpt   20  37321.877 ? 1072.734  ops/s
Deserialization.dsljson_reflection   thrpt   20  38042.816 ? 1751.135  ops/s
Deserialization.gson                 thrpt   20  10522.004 ?  202.868  ops/s
Deserialization.jackson              thrpt   20  48675.784 ? 1320.214  ops/s
Deserialization.jackson_afterburner  thrpt   20  48140.285 ?  885.359  ops/s
