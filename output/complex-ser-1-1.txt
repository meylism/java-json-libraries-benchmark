# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
301201.218 ops/s
# Warmup Iteration   2: 330866.264 ops/s
# Warmup Iteration   3: 335003.039 ops/s
# Warmup Iteration   4: 335047.583 ops/s
# Warmup Iteration   5: 334945.700 ops/s
Iteration   1: 335095.560 ops/s
Iteration   2: 335547.288 ops/s
Iteration   3: 335321.352 ops/s
Iteration   4: 334682.884 ops/s
Iteration   5: 335158.731 ops/s
Iteration   6: 335214.492 ops/s
Iteration   7: 335163.116 ops/s
Iteration   8: 335235.896 ops/s
Iteration   9: 333603.177 ops/s
Iteration  10: 335045.786 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
306285.366 ops/s
# Warmup Iteration   2: 295678.551 ops/s
# Warmup Iteration   3: 297672.739 ops/s
# Warmup Iteration   4: 297876.102 ops/s
# Warmup Iteration   5: 297568.340 ops/s
Iteration   1: 297005.897 ops/s
Iteration   2: 295408.123 ops/s
Iteration   3: 294330.002 ops/s
Iteration   4: 297541.004 ops/s
Iteration   5: 296145.641 ops/s
Iteration   6: 297969.989 ops/s
Iteration   7: 297908.571 ops/s
Iteration   8: 294112.657 ops/s
Iteration   9: 294987.249 ops/s
Iteration  10: 297197.920 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  315633.767 ±(99.9%) 17285.051 ops/s [Average]
  (min, avg, max) = (294112.657, 315633.767, 335547.288), stdev = 19905.490
  CI (99.9%): [298348.716, 332918.818] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
298234.445 ops/s
# Warmup Iteration   2: 320488.662 ops/s
# Warmup Iteration   3: 324763.237 ops/s
# Warmup Iteration   4: 323923.464 ops/s
# Warmup Iteration   5: 324228.993 ops/s
Iteration   1: 323698.615 ops/s
Iteration   2: 324058.476 ops/s
Iteration   3: 323633.800 ops/s
Iteration   4: 323657.637 ops/s
Iteration   5: 323975.191 ops/s
Iteration   6: 324380.340 ops/s
Iteration   7: 324098.615 ops/s
Iteration   8: 324915.317 ops/s
Iteration   9: 323263.476 ops/s
Iteration  10: 323678.591 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
294636.825 ops/s
# Warmup Iteration   2: 318537.424 ops/s
# Warmup Iteration   3: 318881.969 ops/s
# Warmup Iteration   4: 319730.452 ops/s
# Warmup Iteration   5: 319050.614 ops/s
Iteration   1: 319181.507 ops/s
Iteration   2: 318857.216 ops/s
Iteration   3: 318926.010 ops/s
Iteration   4: 318331.493 ops/s
Iteration   5: 319063.473 ops/s
Iteration   6: 319609.803 ops/s
Iteration   7: 319240.510 ops/s
Iteration   8: 318965.598 ops/s
Iteration   9: 318947.952 ops/s
Iteration  10: 319433.673 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  321495.865 ±(99.9%) 2201.562 ops/s [Average]
  (min, avg, max) = (318331.493, 321495.865, 324915.317), stdev = 2535.322
  CI (99.9%): [319294.302, 323697.427] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
183590.206 ops/s
# Warmup Iteration   2: 208067.218 ops/s
# Warmup Iteration   3: 208835.728 ops/s
# Warmup Iteration   4: 208680.498 ops/s
# Warmup Iteration   5: 208771.412 ops/s
Iteration   1: 208616.024 ops/s
Iteration   2: 208676.069 ops/s
Iteration   3: 208828.664 ops/s
Iteration   4: 208603.049 ops/s
Iteration   5: 208638.029 ops/s
Iteration   6: 208615.898 ops/s
Iteration   7: 208814.882 ops/s
Iteration   8: 208751.988 ops/s
Iteration   9: 208748.891 ops/s
Iteration  10: 208745.890 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
188422.113 ops/s
# Warmup Iteration   2: 198631.868 ops/s
# Warmup Iteration   3: 197462.677 ops/s
# Warmup Iteration   4: 197733.633 ops/s
# Warmup Iteration   5: 197934.972 ops/s
Iteration   1: 197409.687 ops/s
Iteration   2: 197495.773 ops/s
Iteration   3: 197580.485 ops/s
Iteration   4: 196919.700 ops/s
Iteration   5: 197092.426 ops/s
Iteration   6: 196519.686 ops/s
Iteration   7: 197739.078 ops/s
Iteration   8: 197596.997 ops/s
Iteration   9: 196145.039 ops/s
Iteration  10: 198012.826 ops/s


Result "com.meylism.databind.Serialization.gson":
  202977.554 ±(99.9%) 5113.721 ops/s [Average]
  (min, avg, max) = (196145.039, 202977.554, 208828.664), stdev = 5888.969
  CI (99.9%): [197863.833, 208091.275] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
284434.952 ops/s
# Warmup Iteration   2: 308012.696 ops/s
# Warmup Iteration   3: 310186.853 ops/s
# Warmup Iteration   4: 309764.030 ops/s
# Warmup Iteration   5: 310324.640 ops/s
Iteration   1: 309648.676 ops/s
Iteration   2: 309758.075 ops/s
Iteration   3: 308906.327 ops/s
Iteration   4: 309586.155 ops/s
Iteration   5: 309684.312 ops/s
Iteration   6: 309946.766 ops/s
Iteration   7: 309685.024 ops/s
Iteration   8: 310172.445 ops/s
Iteration   9: 310006.665 ops/s
Iteration  10: 309575.296 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
276506.162 ops/s
# Warmup Iteration   2: 303699.346 ops/s
# Warmup Iteration   3: 304134.808 ops/s
# Warmup Iteration   4: 303502.998 ops/s
# Warmup Iteration   5: 303453.415 ops/s
Iteration   1: 303985.232 ops/s
Iteration   2: 303548.032 ops/s
Iteration   3: 303992.461 ops/s
Iteration   4: 303020.440 ops/s
Iteration   5: 303134.277 ops/s
Iteration   6: 302748.627 ops/s
Iteration   7: 303538.156 ops/s
Iteration   8: 296481.547 ops/s
Iteration   9: 304139.676 ops/s
Iteration  10: 303238.641 ops/s


Result "com.meylism.databind.Serialization.jackson":
  306239.841 ±(99.9%) 3369.491 ops/s [Average]
  (min, avg, max) = (296481.547, 306239.841, 310172.445), stdev = 3880.311
  CI (99.9%): [302870.351, 309609.332] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
277702.600 ops/s
# Warmup Iteration   2: 301610.432 ops/s
# Warmup Iteration   3: 302297.472 ops/s
# Warmup Iteration   4: 302992.940 ops/s
# Warmup Iteration   5: 302799.139 ops/s
Iteration   1: 302661.117 ops/s
Iteration   2: 303254.789 ops/s
Iteration   3: 303559.628 ops/s
Iteration   4: 302347.658 ops/s
Iteration   5: 302580.115 ops/s
Iteration   6: 302677.120 ops/s
Iteration   7: 303116.104 ops/s
Iteration   8: 302865.621 ops/s
Iteration   9: 303472.221 ops/s
Iteration  10: 303114.610 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
280120.622 ops/s
# Warmup Iteration   2: 298418.479 ops/s
# Warmup Iteration   3: 300647.551 ops/s
# Warmup Iteration   4: 299886.270 ops/s
# Warmup Iteration   5: 300160.594 ops/s
Iteration   1: 299529.385 ops/s
Iteration   2: 299806.995 ops/s
Iteration   3: 300055.779 ops/s
Iteration   4: 300262.856 ops/s
Iteration   5: 299990.087 ops/s
Iteration   6: 300222.128 ops/s
Iteration   7: 299985.258 ops/s
Iteration   8: 299609.714 ops/s
Iteration   9: 300332.666 ops/s
Iteration  10: 299762.974 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  301460.341 ±(99.9%) 1371.667 ops/s [Average]
  (min, avg, max) = (299529.385, 301460.341, 303559.628), stdev = 1579.614
  CI (99.9%): [300088.674, 302832.009] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt       Score       Error  Units
Serialization.dsljson              thrpt   20  315633.767 ± 17285.051  ops/s
Serialization.dsljson_reflection   thrpt   20  321495.865 ±  2201.562  ops/s
Serialization.gson                 thrpt   20  202977.554 ±  5113.721  ops/s
Serialization.jackson              thrpt   20  306239.841 ±  3369.491  ops/s
Serialization.jackson_afterburner  thrpt   20  301460.341 ±  1371.667  ops/s
