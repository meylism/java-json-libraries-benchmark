# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2018176.768 ops/s
# Warmup Iteration   2: 2209340.601 ops/s
# Warmup Iteration   3: 2099371.378 ops/s
# Warmup Iteration   4: 2089162.946 ops/s
# Warmup Iteration   5: 2293571.659 ops/s
Iteration   1: 2309000.426 ops/s
Iteration   2: 2293740.613 ops/s
Iteration   3: 2291300.144 ops/s
Iteration   4: 2275163.887 ops/s
Iteration   5: 2121966.744 ops/s
Iteration   6: 2053479.556 ops/s
Iteration   7: 2243492.685 ops/s
Iteration   8: 2072404.051 ops/s
Iteration   9: 2073263.121 ops/s
Iteration  10: 2086142.448 ops/s

# Run progress: 10.00% complete, ETA 00:12:18
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1804606.399 ops/s
# Warmup Iteration   2: 1914908.544 ops/s
# Warmup Iteration   3: 1840436.742 ops/s
# Warmup Iteration   4: 1753679.720 ops/s
# Warmup Iteration   5: 1904768.991 ops/s
Iteration   1: 1805123.210 ops/s
Iteration   2: 1799195.075 ops/s
Iteration   3: 1832970.317 ops/s
Iteration   4: 1794604.196 ops/s
Iteration   5: 1819276.934 ops/s
Iteration   6: 1789383.805 ops/s
Iteration   7: 1832742.568 ops/s
Iteration   8: 1836713.053 ops/s
Iteration   9: 1918765.532 ops/s
Iteration  10: 1819882.452 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  2003430.541 ?(99.9%) 173241.090 ops/s [Average]
  (min, avg, max) = (1789383.805, 2003430.541, 2309000.426), stdev = 199504.696
  CI (99.9%): [1830189.451, 2176671.630] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:56
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1634047.200 ops/s
# Warmup Iteration   2: 1738287.168 ops/s
# Warmup Iteration   3: 1737650.349 ops/s
# Warmup Iteration   4: 1677107.818 ops/s
# Warmup Iteration   5: 1770433.792 ops/s
Iteration   1: 1730822.956 ops/s
Iteration   2: 1763694.606 ops/s
Iteration   3: 1913839.248 ops/s
Iteration   4: 1901082.462 ops/s
Iteration   5: 1897673.305 ops/s
Iteration   6: 1896344.412 ops/s
Iteration   7: 1831379.087 ops/s
Iteration   8: 1683771.236 ops/s
Iteration   9: 1761851.663 ops/s
Iteration  10: 1724623.949 ops/s

# Run progress: 30.00% complete, ETA 00:09:34
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1645749.430 ops/s
# Warmup Iteration   2: 1837909.342 ops/s
# Warmup Iteration   3: 1802274.148 ops/s
# Warmup Iteration   4: 1861084.357 ops/s
# Warmup Iteration   5: 1970144.059 ops/s
Iteration   1: 2003156.531 ops/s
Iteration   2: 1750621.364 ops/s
Iteration   3: 1743713.447 ops/s
Iteration   4: 1788239.893 ops/s
Iteration   5: 2006489.298 ops/s
Iteration   6: 2030057.271 ops/s
Iteration   7: 2006949.292 ops/s
Iteration   8: 2003597.075 ops/s
Iteration   9: 2018135.614 ops/s
Iteration  10: 1984213.657 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  1872012.818 ?(99.9%) 104354.124 ops/s [Average]
  (min, avg, max) = (1683771.236, 1872012.818, 2030057.271), stdev = 120174.364
  CI (99.9%): [1767658.695, 1976366.942] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 731416.172 ops/s
# Warmup Iteration   2: 758541.328 ops/s
# Warmup Iteration   3: 719275.651 ops/s
# Warmup Iteration   4: 789753.796 ops/s
# Warmup Iteration   5: 787646.852 ops/s
Iteration   1: 797308.982 ops/s
Iteration   2: 806215.461 ops/s
Iteration   3: 799001.797 ops/s
Iteration   4: 790111.881 ops/s
Iteration   5: 796143.671 ops/s
Iteration   6: 804869.891 ops/s
Iteration   7: 795677.873 ops/s
Iteration   8: 749527.232 ops/s
Iteration   9: 768951.671 ops/s
Iteration  10: 793946.612 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 712759.526 ops/s
# Warmup Iteration   2: 779499.339 ops/s
# Warmup Iteration   3: 814053.778 ops/s
# Warmup Iteration   4: 769241.677 ops/s
# Warmup Iteration   5: 771710.711 ops/s
Iteration   1: 756542.824 ops/s
Iteration   2: 799628.764 ops/s
Iteration   3: 787398.203 ops/s
Iteration   4: 785723.145 ops/s
Iteration   5: 779624.787 ops/s
Iteration   6: 761856.337 ops/s
Iteration   7: 776980.416 ops/s
Iteration   8: 817307.760 ops/s
Iteration   9: 827113.195 ops/s
Iteration  10: 829501.786 ops/s


Result "com.meylism.databind.Deserialization.gson":
  791171.614 ?(99.9%) 18632.228 ops/s [Average]
  (min, avg, max) = (749527.232, 791171.614, 829501.786), stdev = 21456.902
  CI (99.9%): [772539.386, 809803.843] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:27
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1328709.756 ops/s
# Warmup Iteration   2: 1578873.298 ops/s
# Warmup Iteration   3: 1585389.555 ops/s
# Warmup Iteration   4: 1474417.400 ops/s
# Warmup Iteration   5: 1401147.520 ops/s
Iteration   1: 1411222.668 ops/s
Iteration   2: 1378777.420 ops/s
Iteration   3: 1392589.504 ops/s
Iteration   4: 1402234.631 ops/s
Iteration   5: 1374914.014 ops/s
Iteration   6: 1433718.109 ops/s
Iteration   7: 1426819.158 ops/s
Iteration   8: 1411814.053 ops/s
Iteration   9: 1468068.970 ops/s
Iteration  10: 1577523.205 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1727702.640 ops/s
# Warmup Iteration   2: 1926131.570 ops/s
# Warmup Iteration   3: 1860670.933 ops/s
# Warmup Iteration   4: 1865002.383 ops/s
# Warmup Iteration   5: 1920098.039 ops/s
Iteration   1: 1999508.130 ops/s
Iteration   2: 2009591.335 ops/s
Iteration   3: 1982781.478 ops/s
Iteration   4: 2021451.833 ops/s
Iteration   5: 1932983.179 ops/s
Iteration   6: 1897360.400 ops/s
Iteration   7: 1952249.553 ops/s
Iteration   8: 2015213.130 ops/s
Iteration   9: 2002384.639 ops/s
Iteration  10: 1992835.016 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  1704202.021 ?(99.9%) 249988.885 ops/s [Average]
  (min, avg, max) = (1374914.014, 1704202.021, 2021451.833), stdev = 287887.572
  CI (99.9%): [1454213.136, 1954190.906] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1399043.517 ops/s
# Warmup Iteration   2: 1587112.553 ops/s
# Warmup Iteration   3: 1601459.298 ops/s
# Warmup Iteration   4: 1567249.893 ops/s
# Warmup Iteration   5: 1533290.495 ops/s
Iteration   1: 1589808.698 ops/s
Iteration   2: 1581137.257 ops/s
Iteration   3: 1501714.446 ops/s
Iteration   4: 1386395.100 ops/s
Iteration   5: 1398564.111 ops/s
Iteration   6: 1527279.115 ops/s
Iteration   7: 1565102.054 ops/s
Iteration   8: 1399621.260 ops/s
Iteration   9: 1464842.032 ops/s
Iteration  10: 1429356.940 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1473692.550 ops/s
# Warmup Iteration   2: 1666758.350 ops/s
# Warmup Iteration   3: 1771841.004 ops/s
# Warmup Iteration   4: 1676550.022 ops/s
# Warmup Iteration   5: 1754017.607 ops/s
Iteration   1: 1845143.629 ops/s
Iteration   2: 1850497.399 ops/s
Iteration   3: 1843896.313 ops/s
Iteration   4: 1847831.986 ops/s
Iteration   5: 1720702.030 ops/s
Iteration   6: 1757738.830 ops/s
Iteration   7: 1741189.012 ops/s
Iteration   8: 1716953.361 ops/s
Iteration   9: 1721516.178 ops/s
Iteration  10: 1710037.311 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  1629966.353 ?(99.9%) 143115.339 ops/s [Average]
  (min, avg, max) = (1386395.100, 1629966.353, 1850497.399), stdev = 164811.837
  CI (99.9%): [1486851.014, 1773081.692] (assumes normal distribution)


# Run complete. Total time: 00:13:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt        Score        Error  Units
Deserialization.dsljson              thrpt   20  2003430.541 ? 173241.090  ops/s
Deserialization.dsljson_reflection   thrpt   20  1872012.818 ? 104354.124  ops/s
Deserialization.gson                 thrpt   20   791171.614 ?  18632.228  ops/s
Deserialization.jackson              thrpt   20  1704202.021 ? 249988.885  ops/s
Deserialization.jackson_afterburner  thrpt   20  1629966.353 ? 143115.339  ops/s
