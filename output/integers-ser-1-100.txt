# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 12560.346 ops/s
# Warmup Iteration   2: 12778.789 ops/s
# Warmup Iteration   3: 12429.532 ops/s
# Warmup Iteration   4: 11775.229 ops/s
# Warmup Iteration   5: 12253.702 ops/s
Iteration   1: 11747.172 ops/s
Iteration   2: 11608.322 ops/s
Iteration   3: 12498.138 ops/s
Iteration   4: 12335.524 ops/s
Iteration   5: 12503.367 ops/s
Iteration   6: 12626.531 ops/s
Iteration   7: 12706.413 ops/s
Iteration   8: 12801.114 ops/s
Iteration   9: 12593.389 ops/s
Iteration  10: 12817.986 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 12499.215 ops/s
# Warmup Iteration   2: 11875.573 ops/s
# Warmup Iteration   3: 12694.653 ops/s
# Warmup Iteration   4: 12793.662 ops/s
# Warmup Iteration   5: 12527.821 ops/s
Iteration   1: 12048.774 ops/s
Iteration   2: 12216.086 ops/s
Iteration   3: 11942.934 ops/s
Iteration   4: 11681.150 ops/s
Iteration   5: 12070.980 ops/s
Iteration   6: 12646.545 ops/s
Iteration   7: 12394.162 ops/s
Iteration   8: 12106.729 ops/s
Iteration   9: 12698.520 ops/s
Iteration  10: 12748.428 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  12339.613 ?(99.9%) 337.557 ops/s [Average]
  (min, avg, max) = (11608.322, 12339.613, 12817.986), stdev = 388.731
  CI (99.9%): [12002.056, 12677.170] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 9991.248 ops/s
# Warmup Iteration   2: 11720.299 ops/s
# Warmup Iteration   3: 11741.166 ops/s
# Warmup Iteration   4: 11708.811 ops/s
# Warmup Iteration   5: 11732.889 ops/s
Iteration   1: 11738.135 ops/s
Iteration   2: 11752.453 ops/s
Iteration   3: 11730.356 ops/s
Iteration   4: 10586.208 ops/s
Iteration   5: 10904.174 ops/s
Iteration   6: 11210.525 ops/s
Iteration   7: 10300.397 ops/s
Iteration   8: 10284.646 ops/s
Iteration   9: 10906.459 ops/s
Iteration  10: 10637.356 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 9683.046 ops/s
# Warmup Iteration   2: 10246.257 ops/s
# Warmup Iteration   3: 10262.321 ops/s
# Warmup Iteration   4: 10080.079 ops/s
# Warmup Iteration   5: 10141.714 ops/s
Iteration   1: 10472.365 ops/s
Iteration   2: 10474.159 ops/s
Iteration   3: 10733.580 ops/s
Iteration   4: 10399.697 ops/s
Iteration   5: 10341.751 ops/s
Iteration   6: 9764.496 ops/s
Iteration   7: 10677.419 ops/s
Iteration   8: 10794.550 ops/s
Iteration   9: 10786.538 ops/s
Iteration  10: 10905.048 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  10770.016 ?(99.9%) 449.873 ops/s [Average]
  (min, avg, max) = (9764.496, 10770.016, 11752.453), stdev = 518.074
  CI (99.9%): [10320.143, 11219.889] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2985.381 ops/s
# Warmup Iteration   2: 3155.555 ops/s
# Warmup Iteration   3: 3314.035 ops/s
# Warmup Iteration   4: 3302.768 ops/s
# Warmup Iteration   5: 3123.769 ops/s
Iteration   1: 3125.639 ops/s
Iteration   2: 3274.873 ops/s
Iteration   3: 3292.795 ops/s
Iteration   4: 3308.108 ops/s
Iteration   5: 3315.470 ops/s
Iteration   6: 3317.303 ops/s
Iteration   7: 3213.204 ops/s
Iteration   8: 3315.471 ops/s
Iteration   9: 3289.895 ops/s
Iteration  10: 3318.624 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 3001.611 ops/s
# Warmup Iteration   2: 2913.557 ops/s
# Warmup Iteration   3: 3043.245 ops/s
# Warmup Iteration   4: 3101.322 ops/s
# Warmup Iteration   5: 3259.848 ops/s
Iteration   1: 3351.282 ops/s
Iteration   2: 3323.448 ops/s
Iteration   3: 3365.814 ops/s
Iteration   4: 3179.336 ops/s
Iteration   5: 3068.782 ops/s
Iteration   6: 2947.578 ops/s
Iteration   7: 2910.556 ops/s
Iteration   8: 2921.500 ops/s
Iteration   9: 3016.631 ops/s
Iteration  10: 3000.446 ops/s


Result "com.meylism.databind.Serialization.gson":
  3192.838 ?(99.9%) 137.289 ops/s [Average]
  (min, avg, max) = (2910.556, 3192.838, 3365.814), stdev = 158.102
  CI (99.9%): [3055.549, 3330.127] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 13340.073 ops/s
# Warmup Iteration   2: 14052.735 ops/s
# Warmup Iteration   3: 14093.316 ops/s
# Warmup Iteration   4: 14926.645 ops/s
# Warmup Iteration   5: 15584.635 ops/s
Iteration   1: 16041.030 ops/s
Iteration   2: 15891.304 ops/s
Iteration   3: 14402.296 ops/s
Iteration   4: 13683.552 ops/s
Iteration   5: 14919.092 ops/s
Iteration   6: 14890.767 ops/s
Iteration   7: 15260.593 ops/s
Iteration   8: 15228.938 ops/s
Iteration   9: 15256.445 ops/s
Iteration  10: 14709.969 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 12331.732 ops/s
# Warmup Iteration   2: 12645.620 ops/s
# Warmup Iteration   3: 12923.619 ops/s
# Warmup Iteration   4: 12846.660 ops/s
# Warmup Iteration   5: 12865.538 ops/s
Iteration   1: 12830.281 ops/s
Iteration   2: 12778.404 ops/s
Iteration   3: 12888.432 ops/s
Iteration   4: 12407.620 ops/s
Iteration   5: 12873.710 ops/s
Iteration   6: 12803.510 ops/s
Iteration   7: 12842.602 ops/s
Iteration   8: 12626.039 ops/s
Iteration   9: 12858.892 ops/s
Iteration  10: 12749.782 ops/s


Result "com.meylism.databind.Serialization.jackson":
  13897.163 ?(99.9%) 1091.834 ops/s [Average]
  (min, avg, max) = (12407.620, 13897.163, 16041.030), stdev = 1257.358
  CI (99.9%): [12805.329, 14988.997] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
9781.005 ops/s
# Warmup Iteration   2: 11036.449 ops/s
# Warmup Iteration   3: 10710.938 ops/s
# Warmup Iteration   4: 10354.696 ops/s
# Warmup Iteration   5: 10387.703 ops/s
Iteration   1: 10627.490 ops/s
Iteration   2: 10451.425 ops/s
Iteration   3: 9988.958 ops/s
Iteration   4: 9733.473 ops/s
Iteration   5: 9930.776 ops/s
Iteration   6: 9746.492 ops/s
Iteration   7: 9766.428 ops/s
Iteration   8: 9975.436 ops/s
Iteration   9: 9918.838 ops/s
Iteration  10: 10027.443 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
9947.041 ops/s
# Warmup Iteration   2: 9212.366 ops/s
# Warmup Iteration   3: 10381.603 ops/s
# Warmup Iteration   4: 10705.350 ops/s
# Warmup Iteration   5: 10762.502 ops/s
Iteration   1: 10751.842 ops/s
Iteration   2: 10709.245 ops/s
Iteration   3: 10719.149 ops/s
Iteration   4: 10758.457 ops/s
Iteration   5: 10702.284 ops/s
Iteration   6: 10749.959 ops/s
Iteration   7: 10670.194 ops/s
Iteration   8: 10760.641 ops/s
Iteration   9: 10769.532 ops/s
Iteration  10: 10772.433 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  10376.525 ?(99.9%) 367.213 ops/s [Average]
  (min, avg, max) = (9733.473, 10376.525, 10772.433), stdev = 422.883
  CI (99.9%): [10009.312, 10743.737] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt      Score      Error  Units
Serialization.dsljson              thrpt   20  12339.613 ?  337.557  ops/s
Serialization.dsljson_reflection   thrpt   20  10770.016 ?  449.873  ops/s
Serialization.gson                 thrpt   20   3192.838 ?  137.289  ops/s
Serialization.jackson              thrpt   20  13897.163 ? 1091.834  ops/s
Serialization.jackson_afterburner  thrpt   20  10376.525 ?  367.213  ops/s
