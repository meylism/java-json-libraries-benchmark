# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 12040.960 ops/s
# Warmup Iteration   2: 12333.048 ops/s
# Warmup Iteration   3: 12138.986 ops/s
# Warmup Iteration   4: 12371.610 ops/s
# Warmup Iteration   5: 12370.595 ops/s
Iteration   1: 12323.867 ops/s
Iteration   2: 12179.378 ops/s
Iteration   3: 12368.526 ops/s
Iteration   4: 12417.445 ops/s
Iteration   5: 12238.665 ops/s
Iteration   6: 12384.512 ops/s
Iteration   7: 12307.369 ops/s
Iteration   8: 12336.923 ops/s
Iteration   9: 12259.512 ops/s
Iteration  10: 12371.549 ops/s

# Run progress: 10.00% complete, ETA 00:08:22
# Fork: 2 of 2
# Warmup Iteration   1: 10596.997 ops/s
# Warmup Iteration   2: 11029.867 ops/s
# Warmup Iteration   3: 10995.937 ops/s
# Warmup Iteration   4: 11078.551 ops/s
# Warmup Iteration   5: 10986.198 ops/s
Iteration   1: 10946.872 ops/s
Iteration   2: 11001.606 ops/s
Iteration   3: 10945.322 ops/s
Iteration   4: 10972.962 ops/s
Iteration   5: 10938.786 ops/s
Iteration   6: 10949.636 ops/s
Iteration   7: 10646.795 ops/s
Iteration   8: 10624.285 ops/s
Iteration   9: 10674.241 ops/s
Iteration  10: 10647.415 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  11576.783 ?(99.9%) 669.563 ops/s [Average]
  (min, avg, max) = (10624.285, 11576.783, 12417.445), stdev = 771.070
  CI (99.9%): [10907.220, 12246.346] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
# Warmup Iteration   1: 11704.428 ops/s
# Warmup Iteration   2: 12139.892 ops/s
# Warmup Iteration   3: 12467.115 ops/s
# Warmup Iteration   4: 12208.904 ops/s
# Warmup Iteration   5: 12101.075 ops/s
Iteration   1: 11988.209 ops/s
Iteration   2: 11668.757 ops/s
Iteration   3: 11944.337 ops/s
Iteration   4: 12138.116 ops/s
Iteration   5: 12124.148 ops/s
Iteration   6: 12145.224 ops/s
Iteration   7: 12282.466 ops/s
Iteration   8: 12220.722 ops/s
Iteration   9: 12390.516 ops/s
Iteration  10: 12522.583 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 12041.317 ops/s
# Warmup Iteration   2: 11891.687 ops/s
# Warmup Iteration   3: 11933.906 ops/s
# Warmup Iteration   4: 11996.617 ops/s
# Warmup Iteration   5: 12048.998 ops/s
Iteration   1: 12076.484 ops/s
Iteration   2: 12266.940 ops/s
Iteration   3: 11975.556 ops/s
Iteration   4: 11992.135 ops/s
Iteration   5: 12072.939 ops/s
Iteration   6: 12052.404 ops/s
Iteration   7: 12098.494 ops/s
Iteration   8: 12102.051 ops/s
Iteration   9: 12056.081 ops/s
Iteration  10: 11787.700 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  12095.293 ?(99.9%) 166.101 ops/s [Average]
  (min, avg, max) = (11668.757, 12095.293, 12522.583), stdev = 191.282
  CI (99.9%): [11929.192, 12261.394] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
# Warmup Iteration   1: 2562.221 ops/s
# Warmup Iteration   2: 2646.656 ops/s
# Warmup Iteration   3: 2696.748 ops/s
# Warmup Iteration   4: 2539.126 ops/s
# Warmup Iteration   5: 2690.521 ops/s
Iteration   1: 2826.229 ops/s
Iteration   2: 2842.630 ops/s
Iteration   3: 2801.351 ops/s
Iteration   4: 2798.247 ops/s
Iteration   5: 2613.295 ops/s
Iteration   6: 2818.889 ops/s
Iteration   7: 2898.867 ops/s
Iteration   8: 2876.873 ops/s
Iteration   9: 2893.900 ops/s
Iteration  10: 2874.344 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 2597.639 ops/s
# Warmup Iteration   2: 2726.740 ops/s
# Warmup Iteration   3: 2537.043 ops/s
# Warmup Iteration   4: 2595.428 ops/s
# Warmup Iteration   5: 2629.335 ops/s
Iteration   1: 2669.945 ops/s
Iteration   2: 2655.958 ops/s
Iteration   3: 2604.765 ops/s
Iteration   4: 2649.295 ops/s
Iteration   5: 2611.768 ops/s
Iteration   6: 2631.595 ops/s
Iteration   7: 2565.876 ops/s
Iteration   8: 2605.938 ops/s
Iteration   9: 2593.173 ops/s
Iteration  10: 2583.812 ops/s


Result "com.meylism.databind.Serialization.gson":
  2720.837 ?(99.9%) 106.667 ops/s [Average]
  (min, avg, max) = (2565.876, 2720.837, 2898.867), stdev = 122.837
  CI (99.9%): [2614.171, 2827.504] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 9233.473 ops/s
# Warmup Iteration   2: 9527.319 ops/s
# Warmup Iteration   3: 9561.343 ops/s
# Warmup Iteration   4: 9555.841 ops/s
# Warmup Iteration   5: 9325.792 ops/s
Iteration   1: 9301.841 ops/s
Iteration   2: 9539.947 ops/s
Iteration   3: 9508.995 ops/s
Iteration   4: 9526.970 ops/s
Iteration   5: 9651.309 ops/s
Iteration   6: 9459.824 ops/s
Iteration   7: 9463.204 ops/s
Iteration   8: 9217.016 ops/s
Iteration   9: 9482.573 ops/s
Iteration  10: 9396.662 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 9128.738 ops/s
# Warmup Iteration   2: 9399.410 ops/s
# Warmup Iteration   3: 9255.936 ops/s
# Warmup Iteration   4: 9260.622 ops/s
# Warmup Iteration   5: 9297.299 ops/s
Iteration   1: 9136.524 ops/s
Iteration   2: 9016.448 ops/s
Iteration   3: 9043.439 ops/s
Iteration   4: 9196.228 ops/s
Iteration   5: 9240.037 ops/s
Iteration   6: 9271.755 ops/s
Iteration   7: 9321.037 ops/s
Iteration   8: 9264.849 ops/s
Iteration   9: 9238.135 ops/s
Iteration  10: 9246.561 ops/s


Result "com.meylism.databind.Serialization.jackson":
  9326.168 ?(99.9%) 149.173 ops/s [Average]
  (min, avg, max) = (9016.448, 9326.168, 9651.309), stdev = 171.788
  CI (99.9%): [9176.995, 9475.341] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 8855.872 ops/s
# Warmup Iteration   2: 9082.747 ops/s
# Warmup Iteration   3: 9036.689 ops/s
# Warmup Iteration   4: 9595.139 ops/s
# Warmup Iteration   5: 9470.359 ops/s
Iteration   1: 9667.390 ops/s
Iteration   2: 9586.922 ops/s
Iteration   3: 9524.809 ops/s
Iteration   4: 9236.734 ops/s
Iteration   5: 9312.244 ops/s
Iteration   6: 9025.773 ops/s
Iteration   7: 9148.667 ops/s
Iteration   8: 8929.909 ops/s
Iteration   9: 9080.421 ops/s
Iteration  10: 9227.533 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 8662.470 ops/s
# Warmup Iteration   2: 8857.591 ops/s
# Warmup Iteration   3: 8980.920 ops/s
# Warmup Iteration   4: 9074.404 ops/s
# Warmup Iteration   5: 9018.518 ops/s
Iteration   1: 8956.334 ops/s
Iteration   2: 9034.167 ops/s
Iteration   3: 8977.708 ops/s
Iteration   4: 8855.591 ops/s
Iteration   5: 8969.300 ops/s
Iteration   6: 8846.020 ops/s
Iteration   7: 8909.284 ops/s
Iteration   8: 8967.503 ops/s
Iteration   9: 9017.507 ops/s
Iteration  10: 8958.428 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  9111.612 ?(99.9%) 210.454 ops/s [Average]
  (min, avg, max) = (8846.020, 9111.612, 9667.390), stdev = 242.359
  CI (99.9%): [8901.158, 9322.066] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt      Score     Error  Units
Serialization.dsljson              thrpt   20  11576.783 ? 669.563  ops/s
Serialization.dsljson_reflection   thrpt   20  12095.293 ? 166.101  ops/s
Serialization.gson                 thrpt   20   2720.837 ? 106.667  ops/s
Serialization.jackson              thrpt   20   9326.168 ? 149.173  ops/s
Serialization.jackson_afterburner  thrpt   20   9111.612 ? 210.454  ops/s
