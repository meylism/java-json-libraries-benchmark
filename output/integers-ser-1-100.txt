# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
53673.692 ops/s
# Warmup Iteration   2: 54776.302 ops/s
# Warmup Iteration   3: 53815.827 ops/s
# Warmup Iteration   4: 53454.001 ops/s
# Warmup Iteration   5: 55466.624 ops/s
Iteration   1: 55078.058 ops/s
Iteration   2: 55379.794 ops/s
Iteration   3: 55442.937 ops/s
Iteration   4: 55270.395 ops/s
Iteration   5: 55263.264 ops/s
Iteration   6: 55397.439 ops/s
Iteration   7: 55551.724 ops/s
Iteration   8: 55068.762 ops/s
Iteration   9: 55199.531 ops/s
Iteration  10: 54637.539 ops/s

# Run progress: 10.00% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
53315.652 ops/s
# Warmup Iteration   2: 54974.790 ops/s
# Warmup Iteration   3: 55261.869 ops/s
# Warmup Iteration   4: 54104.996 ops/s
# Warmup Iteration   5: 55190.481 ops/s
Iteration   1: 55275.981 ops/s
Iteration   2: 55290.615 ops/s
Iteration   3: 55623.207 ops/s
Iteration   4: 54616.008 ops/s
Iteration   5: 53612.206 ops/s
Iteration   6: 54554.704 ops/s
Iteration   7: 52343.438 ops/s
Iteration   8: 54419.545 ops/s
Iteration   9: 54069.576 ops/s
Iteration  10: 54186.917 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  54814.082 ?(99.9%) 695.190 ops/s [Average]
  (min, avg, max) = (52343.438, 54814.082, 55623.207), stdev = 800.581
  CI (99.9%): [54118.893, 55509.272] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
53731.206 ops/s
# Warmup Iteration   2: 54417.123 ops/s
# Warmup Iteration   3: 55327.121 ops/s
# Warmup Iteration   4: 55582.373 ops/s
# Warmup Iteration   5: 55607.539 ops/s
Iteration   1: 55061.234 ops/s
Iteration   2: 55029.454 ops/s
Iteration   3: 55027.899 ops/s
Iteration   4: 54554.259 ops/s
Iteration   5: 54851.565 ops/s
Iteration   6: 55794.054 ops/s
Iteration   7: 55293.565 ops/s
Iteration   8: 55728.583 ops/s
Iteration   9: 55524.342 ops/s
Iteration  10: 55867.250 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
54081.317 ops/s
# Warmup Iteration   2: 55554.320 ops/s
# Warmup Iteration   3: 55143.054 ops/s
# Warmup Iteration   4: 55875.146 ops/s
# Warmup Iteration   5: 55374.158 ops/s
Iteration   1: 55945.933 ops/s
Iteration   2: 55138.864 ops/s
Iteration   3: 55997.172 ops/s
Iteration   4: 55610.010 ops/s
Iteration   5: 55688.903 ops/s
Iteration   6: 55324.514 ops/s
Iteration   7: 55524.597 ops/s
Iteration   8: 55154.152 ops/s
Iteration   9: 55948.509 ops/s
Iteration  10: 55718.236 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  55439.155 ?(99.9%) 357.394 ops/s [Average]
  (min, avg, max) = (54554.259, 55439.155, 55997.172), stdev = 411.576
  CI (99.9%): [55081.760, 55796.549] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
9963.453 ops/s
# Warmup Iteration   2: 12999.447 ops/s
# Warmup Iteration   3: 12535.152 ops/s
# Warmup Iteration   4: 13067.245 ops/s
# Warmup Iteration   5: 13046.444 ops/s
Iteration   1: 12855.873 ops/s
Iteration   2: 12669.319 ops/s
Iteration   3: 12961.772 ops/s
Iteration   4: 13002.930 ops/s
Iteration   5: 12360.453 ops/s
Iteration   6: 13086.105 ops/s
Iteration   7: 12988.486 ops/s
Iteration   8: 13104.878 ops/s
Iteration   9: 13147.378 ops/s
Iteration  10: 13196.327 ops/s

# Run progress: 50.00% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
10493.765 ops/s
# Warmup Iteration   2: 13265.060 ops/s
# Warmup Iteration   3: 13180.439 ops/s
# Warmup Iteration   4: 13354.630 ops/s
# Warmup Iteration   5: 13182.880 ops/s
Iteration   1: 13381.991 ops/s
Iteration   2: 13159.536 ops/s
Iteration   3: 13232.018 ops/s
Iteration   4: 13093.244 ops/s
Iteration   5: 13373.620 ops/s
Iteration   6: 13658.845 ops/s
Iteration   7: 13329.348 ops/s
Iteration   8: 13554.873 ops/s
Iteration   9: 13614.390 ops/s
Iteration  10: 13690.582 ops/s


Result "com.meylism.databind.Serialization.gson":
  13173.098 ?(99.9%) 288.583 ops/s [Average]
  (min, avg, max) = (12360.453, 13173.098, 13690.582), stdev = 332.333
  CI (99.9%): [12884.515, 13461.682] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
56109.552 ops/s
# Warmup Iteration   2: 53403.822 ops/s
# Warmup Iteration   3: 56805.435 ops/s
# Warmup Iteration   4: 56212.221 ops/s
# Warmup Iteration   5: 56473.151 ops/s
Iteration   1: 56824.607 ops/s
Iteration   2: 53671.899 ops/s
Iteration   3: 55732.284 ops/s
Iteration   4: 56846.910 ops/s
Iteration   5: 56633.971 ops/s
Iteration   6: 56883.467 ops/s
Iteration   7: 56578.287 ops/s
Iteration   8: 55374.587 ops/s
Iteration   9: 56418.758 ops/s
Iteration  10: 55804.365 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
53922.455 ops/s
# Warmup Iteration   2: 57445.931 ops/s
# Warmup Iteration   3: 57843.501 ops/s
# Warmup Iteration   4: 55431.115 ops/s
# Warmup Iteration   5: 57349.926 ops/s
Iteration   1: 57832.386 ops/s
Iteration   2: 57650.724 ops/s
Iteration   3: 57252.530 ops/s
Iteration   4: 56493.919 ops/s
Iteration   5: 57549.968 ops/s
Iteration   6: 57200.681 ops/s
Iteration   7: 54398.821 ops/s
Iteration   8: 57183.984 ops/s
Iteration   9: 56446.879 ops/s
Iteration  10: 53743.860 ops/s


Result "com.meylism.databind.Serialization.jackson":
  56326.144 ?(99.9%) 1051.845 ops/s [Average]
  (min, avg, max) = (53671.899, 56326.144, 57832.386), stdev = 1211.306
  CI (99.9%): [55274.299, 57377.989] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
54821.866 ops/s
# Warmup Iteration   2: 59744.193 ops/s
# Warmup Iteration   3: 59828.798 ops/s
# Warmup Iteration   4: 59215.118 ops/s
# Warmup Iteration   5: 59369.052 ops/s
Iteration   1: 61516.675 ops/s
Iteration   2: 64878.604 ops/s
Iteration   3: 63811.254 ops/s
Iteration   4: 64357.922 ops/s
Iteration   5: 60815.483 ops/s
Iteration   6: 64830.790 ops/s
Iteration   7: 64867.387 ops/s
Iteration   8: 65037.158 ops/s
Iteration   9: 64814.690 ops/s
Iteration  10: 64888.563 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
58255.722 ops/s
# Warmup Iteration   2: 60570.751 ops/s
# Warmup Iteration   3: 60812.169 ops/s
# Warmup Iteration   4: 59339.146 ops/s
# Warmup Iteration   5: 58705.767 ops/s
Iteration   1: 59241.895 ops/s
Iteration   2: 59319.520 ops/s
Iteration   3: 59216.974 ops/s
Iteration   4: 59634.018 ops/s
Iteration   5: 59975.596 ops/s
Iteration   6: 58712.566 ops/s
Iteration   7: 57092.962 ops/s
Iteration   8: 61860.523 ops/s
Iteration   9: 61677.116 ops/s
Iteration  10: 60395.746 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  61847.272 ?(99.9%) 2269.996 ops/s [Average]
  (min, avg, max) = (57092.962, 61847.272, 65037.158), stdev = 2614.130
  CI (99.9%): [59577.276, 64117.268] (assumes normal distribution)


# Run complete. Total time: 00:13:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt      Score      Error  Units
Serialization.dsljson              thrpt   20  54814.082 ?  695.190  ops/s
Serialization.dsljson_reflection   thrpt   20  55439.155 ?  357.394  ops/s
Serialization.gson                 thrpt   20  13173.098 ?  288.583  ops/s
Serialization.jackson              thrpt   20  56326.144 ? 1051.845  ops/s
Serialization.jackson_afterburner  thrpt   20  61847.272 ? 2269.996  ops/s
