# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 9373321.391 ops/s
# Warmup Iteration   2: 9611176.479 ops/s
# Warmup Iteration   3: 9742244.692 ops/s
# Warmup Iteration   4: 9777691.063 ops/s
# Warmup Iteration   5: 9821351.451 ops/s
Iteration   1: 9695053.951 ops/s
Iteration   2: 9679774.676 ops/s
Iteration   3: 9491576.825 ops/s
Iteration   4: 9588376.958 ops/s
Iteration   5: 9293574.594 ops/s
Iteration   6: 9728363.617 ops/s
Iteration   7: 9321682.858 ops/s
Iteration   8: 9415657.045 ops/s
Iteration   9: 9381854.143 ops/s
Iteration  10: 9585846.102 ops/s

# Run progress: 10.00% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 10854953.717 ops/s
# Warmup Iteration   2: 11171960.825 ops/s
# Warmup Iteration   3: 11108028.504 ops/s
# Warmup Iteration   4: 11219730.645 ops/s
# Warmup Iteration   5: 11134910.459 ops/s
Iteration   1: 11240065.862 ops/s
Iteration   2: 11094944.616 ops/s
Iteration   3: 11190526.546 ops/s
Iteration   4: 10943179.982 ops/s
Iteration   5: 11218447.697 ops/s
Iteration   6: 11221631.396 ops/s
Iteration   7: 11190118.804 ops/s
Iteration   8: 11108955.762 ops/s
Iteration   9: 11260613.116 ops/s
Iteration  10: 11218690.543 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  10343446.755 ?(99.9%) 743619.976 ops/s [Average]
  (min, avg, max) = (9293574.594, 10343446.755, 11260613.116), stdev = 856353.870
  CI (99.9%): [9599826.779, 11087066.731] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:45
# Fork: 1 of 2
# Warmup Iteration   1: 9762703.776 ops/s
# Warmup Iteration   2: 10111669.003 ops/s
# Warmup Iteration   3: 10192072.364 ops/s
# Warmup Iteration   4: 9681424.479 ops/s
# Warmup Iteration   5: 10200013.408 ops/s
Iteration   1: 10185362.870 ops/s
Iteration   2: 10131439.371 ops/s
Iteration   3: 10295045.408 ops/s
Iteration   4: 10207530.418 ops/s
Iteration   5: 10221532.693 ops/s
Iteration   6: 10186615.838 ops/s
Iteration   7: 10215173.640 ops/s
Iteration   8: 10250318.220 ops/s
Iteration   9: 10282389.229 ops/s
Iteration  10: 10329321.576 ops/s

# Run progress: 30.00% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 10112527.700 ops/s
# Warmup Iteration   2: 10132973.691 ops/s
# Warmup Iteration   3: 10064361.123 ops/s
# Warmup Iteration   4: 9932759.232 ops/s
# Warmup Iteration   5: 10041538.194 ops/s
Iteration   1: 10005031.955 ops/s
Iteration   2: 10019151.690 ops/s
Iteration   3: 10022951.756 ops/s
Iteration   4: 10180855.265 ops/s
Iteration   5: 10240192.773 ops/s
Iteration   6: 10055590.634 ops/s
Iteration   7: 10236056.294 ops/s
Iteration   8: 10140469.516 ops/s
Iteration   9: 10227130.047 ops/s
Iteration  10: 10241433.398 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  10183679.630 ?(99.9%) 81603.222 ops/s [Average]
  (min, avg, max) = (10005031.955, 10183679.630, 10329321.576), stdev = 93974.392
  CI (99.9%): [10102076.408, 10265282.851] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 915126.140 ops/s
# Warmup Iteration   2: 1002973.256 ops/s
# Warmup Iteration   3: 960078.262 ops/s
# Warmup Iteration   4: 999036.313 ops/s
# Warmup Iteration   5: 984587.628 ops/s
Iteration   1: 988781.225 ops/s
Iteration   2: 980120.652 ops/s
Iteration   3: 979478.922 ops/s
Iteration   4: 961981.828 ops/s
Iteration   5: 957927.578 ops/s
Iteration   6: 961821.691 ops/s
Iteration   7: 986899.102 ops/s
Iteration   8: 937930.868 ops/s
Iteration   9: 985793.954 ops/s
Iteration  10: 1017339.072 ops/s

# Run progress: 50.00% complete, ETA 00:06:43
# Fork: 2 of 2
# Warmup Iteration   1: 370288.365 ops/s
# Warmup Iteration   2: 313828.340 ops/s
# Warmup Iteration   3: 320200.298 ops/s
# Warmup Iteration   4: 300418.183 ops/s
# Warmup Iteration   5: 301456.654 ops/s
Iteration   1: 299203.345 ops/s
Iteration   2: 299849.383 ops/s
Iteration   3: 310710.762 ops/s
Iteration   4: 299761.706 ops/s
Iteration   5: 305577.986 ops/s
Iteration   6: 302915.422 ops/s
Iteration   7: 295941.494 ops/s
Iteration   8: 299483.997 ops/s
Iteration   9: 304756.607 ops/s
Iteration  10: 312911.438 ops/s


Result "com.meylism.databind.Serialization.gson":
  639459.352 ?(99.9%) 299958.775 ops/s [Average]
  (min, avg, max) = (295941.494, 639459.352, 1017339.072), stdev = 345432.972
  CI (99.9%): [339500.576, 939418.127] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 7126725.680 ops/s
# Warmup Iteration   2: 6509049.408 ops/s
# Warmup Iteration   3: 6603410.756 ops/s
# Warmup Iteration   4: 6635552.352 ops/s
# Warmup Iteration   5: 6723184.649 ops/s
Iteration   1: 6631213.750 ops/s
Iteration   2: 6673364.192 ops/s
Iteration   3: 6662544.420 ops/s
Iteration   4: 6673631.021 ops/s
Iteration   5: 6744509.144 ops/s
Iteration   6: 6465780.426 ops/s
Iteration   7: 6566639.480 ops/s
Iteration   8: 6604253.940 ops/s
Iteration   9: 6621045.463 ops/s
Iteration  10: 6583110.702 ops/s

# Run progress: 70.00% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 7431841.216 ops/s
# Warmup Iteration   2: 6497544.480 ops/s
# Warmup Iteration   3: 6572915.355 ops/s
# Warmup Iteration   4: 6655708.051 ops/s
# Warmup Iteration   5: 6692435.995 ops/s
Iteration   1: 6667138.530 ops/s
Iteration   2: 6616438.049 ops/s
Iteration   3: 6525045.372 ops/s
Iteration   4: 6485239.294 ops/s
Iteration   5: 6291242.444 ops/s
Iteration   6: 6573057.963 ops/s
Iteration   7: 6630292.962 ops/s
Iteration   8: 6558760.269 ops/s
Iteration   9: 6581091.998 ops/s
Iteration  10: 6537646.937 ops/s


Result "com.meylism.databind.Serialization.jackson":
  6584602.318 ?(99.9%) 84094.022 ops/s [Average]
  (min, avg, max) = (6291242.444, 6584602.318, 6744509.144), stdev = 96842.801
  CI (99.9%): [6500508.296, 6668696.340] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 1.8.0_262, OpenJDK 64-Bit Server VM, 25.262-b10
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-0.el7_8.x86_64/jre/bin/java
# VM options: -Xms2g -Xmx8g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:41
# Fork: 1 of 2
# Warmup Iteration   1: 7461872.206 ops/s
# Warmup Iteration   2: 6736014.852 ops/s
# Warmup Iteration   3: 6949545.865 ops/s
# Warmup Iteration   4: 6905110.262 ops/s
# Warmup Iteration   5: 6451445.777 ops/s
Iteration   1: 6660289.196 ops/s
Iteration   2: 6853939.602 ops/s
Iteration   3: 6450449.038 ops/s
Iteration   4: 6460260.283 ops/s
Iteration   5: 6489407.333 ops/s
Iteration   6: 6383612.817 ops/s
Iteration   7: 6888415.490 ops/s
Iteration   8: 6575002.294 ops/s
Iteration   9: 6437142.914 ops/s
Iteration  10: 6727746.997 ops/s

# Run progress: 90.00% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 7084429.818 ops/s
# Warmup Iteration   2: 6220756.520 ops/s
# Warmup Iteration   3: 6185783.879 ops/s
# Warmup Iteration   4: 6311154.293 ops/s
# Warmup Iteration   5: 6197176.635 ops/s
Iteration   1: 6189614.271 ops/s
Iteration   2: 6269872.962 ops/s
Iteration   3: 6307898.244 ops/s
Iteration   4: 6095507.712 ops/s
Iteration   5: 6270568.052 ops/s
Iteration   6: 6134053.511 ops/s
Iteration   7: 6037093.553 ops/s
Iteration   8: 5830761.196 ops/s
Iteration   9: 5596399.395 ops/s
Iteration  10: 6117465.190 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  6338775.003 ?(99.9%) 283309.438 ops/s [Average]
  (min, avg, max) = (5596399.395, 6338775.003, 6888415.490), stdev = 326259.570
  CI (99.9%): [6055465.565, 6622084.441] (assumes normal distribution)


# Run complete. Total time: 00:13:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt         Score        Error  Units
Serialization.dsljson              thrpt   20  10343446.755 ? 743619.976  ops/s
Serialization.dsljson_reflection   thrpt   20  10183679.630 ?  81603.222  ops/s
Serialization.gson                 thrpt   20    639459.352 ? 299958.775  ops/s
Serialization.jackson              thrpt   20   6584602.318 ?  84094.022  ops/s
Serialization.jackson_afterburner  thrpt   20   6338775.003 ? 283309.438  ops/s
