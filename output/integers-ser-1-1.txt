# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1942288.720 ops/s
# Warmup Iteration   2: 2027328.192 ops/s
# Warmup Iteration   3: 2108015.919 ops/s
# Warmup Iteration   4: 2003963.048 ops/s
# Warmup Iteration   5: 1985303.565 ops/s
Iteration   1: 2112263.329 ops/s
Iteration   2: 2107876.488 ops/s
Iteration   3: 2107279.570 ops/s
Iteration   4: 2101402.621 ops/s
Iteration   5: 2093001.729 ops/s
Iteration   6: 2109632.248 ops/s
Iteration   7: 2105569.726 ops/s
Iteration   8: 2100789.355 ops/s
Iteration   9: 1963524.623 ops/s
Iteration  10: 2085559.766 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1951154.863 ops/s
# Warmup Iteration   2: 1962770.598 ops/s
# Warmup Iteration   3: 1991932.596 ops/s
# Warmup Iteration   4: 2017561.248 ops/s
# Warmup Iteration   5: 2019651.590 ops/s
Iteration   1: 2011850.691 ops/s
Iteration   2: 2003825.850 ops/s
Iteration   3: 1997507.921 ops/s
Iteration   4: 1982538.951 ops/s
Iteration   5: 2015158.578 ops/s
Iteration   6: 2002852.712 ops/s
Iteration   7: 2006405.940 ops/s
Iteration   8: 1994624.836 ops/s
Iteration   9: 2002656.177 ops/s
Iteration  10: 2010218.323 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  2045726.972 ?(99.9%) 47025.220 ops/s [Average]
  (min, avg, max) = (1963524.623, 2045726.972, 2112263.329), stdev = 54154.313
  CI (99.9%): [1998701.752, 2092752.191] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:26
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1895198.066 ops/s
# Warmup Iteration   2: 1953259.313 ops/s
# Warmup Iteration   3: 1827308.324 ops/s
# Warmup Iteration   4: 1891308.757 ops/s
# Warmup Iteration   5: 1916989.267 ops/s
Iteration   1: 1892198.334 ops/s
Iteration   2: 1955939.111 ops/s
Iteration   3: 1961480.050 ops/s
Iteration   4: 1964171.412 ops/s
Iteration   5: 1959244.052 ops/s
Iteration   6: 1951066.145 ops/s
Iteration   7: 1875502.501 ops/s
Iteration   8: 1886332.653 ops/s
Iteration   9: 1958954.309 ops/s
Iteration  10: 1958847.765 ops/s

# Run progress: 30.00% complete, ETA 00:06:30
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1684835.555 ops/s
# Warmup Iteration   2: 1735848.728 ops/s
# Warmup Iteration   3: 1768629.498 ops/s
# Warmup Iteration   4: 1619577.771 ops/s
# Warmup Iteration   5: 1560505.078 ops/s
Iteration   1: 1581431.121 ops/s
Iteration   2: 1559474.123 ops/s
Iteration   3: 1628670.265 ops/s
Iteration   4: 1629144.309 ops/s
Iteration   5: 1617151.350 ops/s
Iteration   6: 1601382.809 ops/s
Iteration   7: 1556606.832 ops/s
Iteration   8: 1687044.648 ops/s
Iteration   9: 1654853.584 ops/s
Iteration  10: 1747907.494 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  1781370.143 ?(99.9%) 144147.931 ops/s [Average]
  (min, avg, max) = (1556606.832, 1781370.143, 1964171.412), stdev = 166000.971
  CI (99.9%): [1637222.213, 1925518.074] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:34
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 246838.923 ops/s
# Warmup Iteration   2: 235236.812 ops/s
# Warmup Iteration   3: 234788.064 ops/s
# Warmup Iteration   4: 234585.343 ops/s
# Warmup Iteration   5: 232118.938 ops/s
Iteration   1: 234946.246 ops/s
Iteration   2: 233849.665 ops/s
Iteration   3: 234985.981 ops/s
Iteration   4: 231590.938 ops/s
Iteration   5: 216211.985 ops/s
Iteration   6: 227377.144 ops/s
Iteration   7: 216230.720 ops/s
Iteration   8: 223875.620 ops/s
Iteration   9: 234564.495 ops/s
Iteration  10: 234903.303 ops/s

# Run progress: 50.00% complete, ETA 00:04:38
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 260778.726 ops/s
# Warmup Iteration   2: 280879.299 ops/s
# Warmup Iteration   3: 264806.812 ops/s
# Warmup Iteration   4: 279374.413 ops/s
# Warmup Iteration   5: 281475.444 ops/s
Iteration   1: 267853.409 ops/s
Iteration   2: 279503.488 ops/s
Iteration   3: 282869.471 ops/s
Iteration   4: 272512.008 ops/s
Iteration   5: 276330.514 ops/s
Iteration   6: 267615.650 ops/s
Iteration   7: 273301.337 ops/s
Iteration   8: 271706.644 ops/s
Iteration   9: 272954.606 ops/s
Iteration  10: 284689.032 ops/s


Result "com.meylism.databind.Serialization.gson":
  251893.613 ?(99.9%) 21313.958 ops/s [Average]
  (min, avg, max) = (216211.985, 251893.613, 284689.032), stdev = 24545.186
  CI (99.9%): [230579.654, 273207.571] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1061466.521 ops/s
# Warmup Iteration   2: 1199446.444 ops/s
# Warmup Iteration   3: 1328279.299 ops/s
# Warmup Iteration   4: 1332428.190 ops/s
# Warmup Iteration   5: 1333665.505 ops/s
Iteration   1: 1248308.904 ops/s
Iteration   2: 1169880.462 ops/s
Iteration   3: 1230392.689 ops/s
Iteration   4: 1198410.442 ops/s
Iteration   5: 1278598.004 ops/s
Iteration   6: 1335500.139 ops/s
Iteration   7: 1199981.763 ops/s
Iteration   8: 1196482.658 ops/s
Iteration   9: 1204855.053 ops/s
Iteration  10: 1276911.966 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1109750.061 ops/s
# Warmup Iteration   2: 1295409.128 ops/s
# Warmup Iteration   3: 1277688.352 ops/s
# Warmup Iteration   4: 1254679.938 ops/s
# Warmup Iteration   5: 1235552.393 ops/s
Iteration   1: 1330664.622 ops/s
Iteration   2: 1342503.168 ops/s
Iteration   3: 1334786.817 ops/s
Iteration   4: 1160114.099 ops/s
Iteration   5: 1195955.070 ops/s
Iteration   6: 1254759.104 ops/s
Iteration   7: 1277268.421 ops/s
Iteration   8: 1221019.341 ops/s
Iteration   9: 1250265.382 ops/s
Iteration  10: 1202190.521 ops/s


Result "com.meylism.databind.Serialization.jackson":
  1245442.431 ?(99.9%) 49785.112 ops/s [Average]
  (min, avg, max) = (1160114.099, 1245442.431, 1342503.168), stdev = 57332.609
  CI (99.9%): [1195657.319, 1295227.543] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1121157.723 ops/s
# Warmup Iteration   2: 1207639.953 ops/s
# Warmup Iteration   3: 1244245.504 ops/s
# Warmup Iteration   4: 1256636.712 ops/s
# Warmup Iteration   5: 1262297.389 ops/s
Iteration   1: 1157356.966 ops/s
Iteration   2: 1139166.638 ops/s
Iteration   3: 1199824.320 ops/s
Iteration   4: 1160751.808 ops/s
Iteration   5: 1189344.814 ops/s
Iteration   6: 1262547.233 ops/s
Iteration   7: 1264835.930 ops/s
Iteration   8: 1263533.339 ops/s
Iteration   9: 1261579.364 ops/s
Iteration  10: 1267738.258 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1205796.293 ops/s
# Warmup Iteration   2: 1216308.874 ops/s
# Warmup Iteration   3: 1243395.080 ops/s
# Warmup Iteration   4: 1305493.034 ops/s
# Warmup Iteration   5: 1239596.825 ops/s
Iteration   1: 1292231.656 ops/s
Iteration   2: 1294403.846 ops/s
Iteration   3: 1290076.944 ops/s
Iteration   4: 1297585.913 ops/s
Iteration   5: 1293443.325 ops/s
Iteration   6: 1248119.373 ops/s
Iteration   7: 1191031.163 ops/s
Iteration   8: 1248075.572 ops/s
Iteration   9: 1254785.664 ops/s
Iteration  10: 1266051.942 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  1242124.203 ?(99.9%) 43680.143 ops/s [Average]
  (min, avg, max) = (1139166.638, 1242124.203, 1297585.913), stdev = 50302.118
  CI (99.9%): [1198444.060, 1285804.346] (assumes normal distribution)


# Run complete. Total time: 00:09:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score        Error  Units
Serialization.dsljson              thrpt   20  2045726.972 ?  47025.220  ops/s
Serialization.dsljson_reflection   thrpt   20  1781370.143 ? 144147.931  ops/s
Serialization.gson                 thrpt   20   251893.613 ?  21313.958  ops/s
Serialization.jackson              thrpt   20  1245442.431 ?  49785.112  ops/s
Serialization.jackson_afterburner  thrpt   20  1242124.203 ?  43680.143  ops/s
