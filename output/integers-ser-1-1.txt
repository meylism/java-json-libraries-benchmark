# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1916652.324 ops/s
# Warmup Iteration   2: 1948552.617 ops/s
# Warmup Iteration   3: 1961494.650 ops/s
# Warmup Iteration   4: 1945325.955 ops/s
# Warmup Iteration   5: 1860160.521 ops/s
Iteration   1: 1955096.328 ops/s
Iteration   2: 1841853.217 ops/s
Iteration   3: 1971602.099 ops/s
Iteration   4: 1950912.368 ops/s
Iteration   5: 1920069.198 ops/s
Iteration   6: 1960452.803 ops/s
Iteration   7: 2048614.107 ops/s
Iteration   8: 2058175.151 ops/s
Iteration   9: 1918147.369 ops/s
Iteration  10: 1908679.667 ops/s

# Run progress: 10.00% complete, ETA 00:12:17
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1905500.492 ops/s
# Warmup Iteration   2: 2074841.592 ops/s
# Warmup Iteration   3: 2073123.490 ops/s
# Warmup Iteration   4: 1979765.174 ops/s
# Warmup Iteration   5: 2080404.546 ops/s
Iteration   1: 2088191.065 ops/s
Iteration   2: 2080282.750 ops/s
Iteration   3: 2078446.557 ops/s
Iteration   4: 2088885.683 ops/s
Iteration   5: 2067307.162 ops/s
Iteration   6: 2076171.202 ops/s
Iteration   7: 1888297.231 ops/s
Iteration   8: 1943322.370 ops/s
Iteration   9: 1903991.858 ops/s
Iteration  10: 1927789.928 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  1983814.406 ?(99.9%) 69717.880 ops/s [Average]
  (min, avg, max) = (1841853.217, 1983814.406, 2088885.683), stdev = 80287.214
  CI (99.9%): [1914096.526, 2053532.286] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1950742.989 ops/s
# Warmup Iteration   2: 1892618.246 ops/s
# Warmup Iteration   3: 1886496.004 ops/s
# Warmup Iteration   4: 1921513.391 ops/s
# Warmup Iteration   5: 2016188.773 ops/s
Iteration   1: 1908985.749 ops/s
Iteration   2: 1939725.553 ops/s
Iteration   3: 1812547.607 ops/s
Iteration   4: 1857175.052 ops/s
Iteration   5: 1853138.215 ops/s
Iteration   6: 1842727.690 ops/s
Iteration   7: 1782087.424 ops/s
Iteration   8: 1767583.621 ops/s
Iteration   9: 2003304.656 ops/s
Iteration  10: 2015727.160 ops/s

# Run progress: 30.00% complete, ETA 00:09:33
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2056492.279 ops/s
# Warmup Iteration   2: 2016160.183 ops/s
# Warmup Iteration   3: 1958202.801 ops/s
# Warmup Iteration   4: 1996962.260 ops/s
# Warmup Iteration   5: 2047687.468 ops/s
Iteration   1: 1951160.105 ops/s
Iteration   2: 1948546.144 ops/s
Iteration   3: 1884185.135 ops/s
Iteration   4: 1967541.025 ops/s
Iteration   5: 1872542.508 ops/s
Iteration   6: 2002023.151 ops/s
Iteration   7: 2002581.443 ops/s
Iteration   8: 1985727.579 ops/s
Iteration   9: 2123583.200 ops/s
Iteration  10: 2126176.253 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  1932353.464 ?(99.9%) 87097.993 ops/s [Average]
  (min, avg, max) = (1767583.621, 1932353.464, 2126176.253), stdev = 100302.178
  CI (99.9%): [1845255.471, 2019451.456] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:11
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 248089.207 ops/s
# Warmup Iteration   2: 267211.292 ops/s
# Warmup Iteration   3: 274588.233 ops/s
# Warmup Iteration   4: 261689.630 ops/s
# Warmup Iteration   5: 278207.246 ops/s
Iteration   1: 285114.381 ops/s
Iteration   2: 281317.786 ops/s
Iteration   3: 281731.148 ops/s
Iteration   4: 285075.372 ops/s
Iteration   5: 282039.668 ops/s
Iteration   6: 284940.963 ops/s
Iteration   7: 283938.093 ops/s
Iteration   8: 285088.144 ops/s
Iteration   9: 283846.669 ops/s
Iteration  10: 284163.468 ops/s

# Run progress: 50.00% complete, ETA 00:06:49
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 266167.608 ops/s
# Warmup Iteration   2: 293295.144 ops/s
# Warmup Iteration   3: 278289.534 ops/s
# Warmup Iteration   4: 266336.787 ops/s
# Warmup Iteration   5: 273659.214 ops/s
Iteration   1: 270444.669 ops/s
Iteration   2: 260217.701 ops/s
Iteration   3: 271684.544 ops/s
Iteration   4: 287393.438 ops/s
Iteration   5: 264328.179 ops/s
Iteration   6: 266618.330 ops/s
Iteration   7: 282150.647 ops/s
Iteration   8: 284374.402 ops/s
Iteration   9: 298555.311 ops/s
Iteration  10: 299218.016 ops/s


Result "com.meylism.databind.Serialization.gson":
  281112.046 ?(99.9%) 8689.362 ops/s [Average]
  (min, avg, max) = (260217.701, 281112.046, 299218.016), stdev = 10006.682
  CI (99.9%): [272422.684, 289801.409] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:27
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1263442.140 ops/s
# Warmup Iteration   2: 1296968.062 ops/s
# Warmup Iteration   3: 1305527.257 ops/s
# Warmup Iteration   4: 1395271.676 ops/s
# Warmup Iteration   5: 1289529.735 ops/s
Iteration   1: 1256364.950 ops/s
Iteration   2: 1237096.068 ops/s
Iteration   3: 1273318.307 ops/s
Iteration   4: 1267134.690 ops/s
Iteration   5: 1258479.085 ops/s
Iteration   6: 1252168.764 ops/s
Iteration   7: 1225748.690 ops/s
Iteration   8: 1258568.290 ops/s
Iteration   9: 1225975.746 ops/s
Iteration  10: 1257919.480 ops/s

# Run progress: 70.00% complete, ETA 00:04:05
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 1113262.552 ops/s
# Warmup Iteration   2: 1356388.262 ops/s
# Warmup Iteration   3: 1371814.776 ops/s
# Warmup Iteration   4: 1369957.147 ops/s
# Warmup Iteration   5: 1365448.975 ops/s
Iteration   1: 1361679.002 ops/s
Iteration   2: 1374223.775 ops/s
Iteration   3: 1373927.923 ops/s
Iteration   4: 1366669.733 ops/s
Iteration   5: 1359674.306 ops/s
Iteration   6: 1366735.859 ops/s
Iteration   7: 1381386.429 ops/s
Iteration   8: 1367456.513 ops/s
Iteration   9: 1368010.053 ops/s
Iteration  10: 1380256.780 ops/s


Result "com.meylism.databind.Serialization.jackson":
  1310639.722 ?(99.9%) 53957.322 ops/s [Average]
  (min, avg, max) = (1225748.690, 1310639.722, 1381386.429), stdev = 62137.333
  CI (99.9%): [1256682.400, 1364597.045] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:43
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1164816.412 ops/s
# Warmup Iteration   2: 1306296.780 ops/s
# Warmup Iteration   3: 1313108.382 ops/s
# Warmup Iteration   4: 1311909.755 ops/s
# Warmup Iteration   5: 1311866.508 ops/s
Iteration   1: 1312239.938 ops/s
Iteration   2: 1317867.300 ops/s
Iteration   3: 1307293.258 ops/s
Iteration   4: 1314630.685 ops/s
Iteration   5: 1315643.156 ops/s
Iteration   6: 1315864.607 ops/s
Iteration   7: 1315426.805 ops/s
Iteration   8: 1319595.745 ops/s
Iteration   9: 1308560.501 ops/s
Iteration  10: 1311703.566 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1260859.475 ops/s
# Warmup Iteration   2: 1332581.883 ops/s
# Warmup Iteration   3: 1322891.298 ops/s
# Warmup Iteration   4: 1335699.306 ops/s
# Warmup Iteration   5: 1338931.071 ops/s
Iteration   1: 1285478.022 ops/s
Iteration   2: 1311632.411 ops/s
Iteration   3: 1295537.473 ops/s
Iteration   4: 1327912.888 ops/s
Iteration   5: 1347867.957 ops/s
Iteration   6: 1324579.519 ops/s
Iteration   7: 1348994.226 ops/s
Iteration   8: 1308114.688 ops/s
Iteration   9: 1249340.041 ops/s
Iteration  10: 1280963.140 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  1310962.296 ?(99.9%) 19001.086 ops/s [Average]
  (min, avg, max) = (1249340.041, 1310962.296, 1348994.226), stdev = 21881.679
  CI (99.9%): [1291961.210, 1329963.382] (assumes normal distribution)


# Run complete. Total time: 00:13:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt        Score       Error  Units
Serialization.dsljson              thrpt   20  1983814.406 ? 69717.880  ops/s
Serialization.dsljson_reflection   thrpt   20  1932353.464 ? 87097.993  ops/s
Serialization.gson                 thrpt   20   281112.046 ?  8689.362  ops/s
Serialization.jackson              thrpt   20  1310639.722 ? 53957.322  ops/s
Serialization.jackson_afterburner  thrpt   20  1310962.296 ? 19001.086  ops/s
