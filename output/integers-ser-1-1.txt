# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 1725799.748 ops/s
# Warmup Iteration   2: 1791440.044 ops/s
# Warmup Iteration   3: 1626814.442 ops/s
# Warmup Iteration   4: 1428043.168 ops/s
# Warmup Iteration   5: 1445097.178 ops/s
Iteration   1: 1765724.018 ops/s
Iteration   2: 1813556.712 ops/s
Iteration   3: 1828991.355 ops/s
Iteration   4: 1790073.499 ops/s
Iteration   5: 1819391.248 ops/s
Iteration   6: 1813197.138 ops/s
Iteration   7: 1796623.350 ops/s
Iteration   8: 1806582.439 ops/s
Iteration   9: 1824175.296 ops/s
Iteration  10: 1748921.211 ops/s

# Run progress: 10.00% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 1796058.674 ops/s
# Warmup Iteration   2: 1847154.821 ops/s
# Warmup Iteration   3: 1851228.062 ops/s
# Warmup Iteration   4: 1831603.210 ops/s
# Warmup Iteration   5: 1867313.570 ops/s
Iteration   1: 1848850.273 ops/s
Iteration   2: 1861581.622 ops/s
Iteration   3: 1852122.470 ops/s
Iteration   4: 1870103.399 ops/s
Iteration   5: 1874078.952 ops/s
Iteration   6: 1859379.746 ops/s
Iteration   7: 1794561.732 ops/s
Iteration   8: 1862767.606 ops/s
Iteration   9: 1842434.951 ops/s
Iteration  10: 1837225.397 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  1825517.121 ?(99.9%) 30247.119 ops/s [Average]
  (min, avg, max) = (1748921.211, 1825517.121, 1874078.952), stdev = 34832.628
  CI (99.9%): [1795270.001, 1855764.240] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:27
# Fork: 1 of 2
# Warmup Iteration   1: 1801893.977 ops/s
# Warmup Iteration   2: 1846720.177 ops/s
# Warmup Iteration   3: 1870138.844 ops/s
# Warmup Iteration   4: 1866568.523 ops/s
# Warmup Iteration   5: 1849804.632 ops/s
Iteration   1: 1863508.502 ops/s
Iteration   2: 1884542.778 ops/s
Iteration   3: 1877631.332 ops/s
Iteration   4: 1866607.664 ops/s
Iteration   5: 1857234.633 ops/s
Iteration   6: 1869914.661 ops/s
Iteration   7: 1845025.965 ops/s
Iteration   8: 1871348.798 ops/s
Iteration   9: 1841349.545 ops/s
Iteration  10: 1860996.166 ops/s

# Run progress: 30.00% complete, ETA 00:06:31
# Fork: 2 of 2
# Warmup Iteration   1: 1812026.568 ops/s
# Warmup Iteration   2: 1829166.504 ops/s
# Warmup Iteration   3: 1854738.398 ops/s
# Warmup Iteration   4: 1852413.696 ops/s
# Warmup Iteration   5: 1870218.356 ops/s
Iteration   1: 1868524.502 ops/s
Iteration   2: 1828950.571 ops/s
Iteration   3: 1864727.704 ops/s
Iteration   4: 1861573.724 ops/s
Iteration   5: 1865678.089 ops/s
Iteration   6: 1774972.820 ops/s
Iteration   7: 1869616.637 ops/s
Iteration   8: 1862482.339 ops/s
Iteration   9: 1859603.492 ops/s
Iteration  10: 1859829.086 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  1857705.950 ?(99.9%) 20014.842 ops/s [Average]
  (min, avg, max) = (1774972.820, 1857705.950, 1884542.778), stdev = 23049.122
  CI (99.9%): [1837691.109, 1877720.792] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 53996.961 ops/s
# Warmup Iteration   2: 267171.960 ops/s
# Warmup Iteration   3: 285558.774 ops/s
# Warmup Iteration   4: 215490.609 ops/s
# Warmup Iteration   5: 221430.291 ops/s
Iteration   1: 219788.208 ops/s
Iteration   2: 223240.298 ops/s
Iteration   3: 218447.528 ops/s
Iteration   4: 223246.951 ops/s
Iteration   5: 220024.551 ops/s
Iteration   6: 218463.441 ops/s
Iteration   7: 218213.665 ops/s
Iteration   8: 215913.157 ops/s
Iteration   9: 223286.427 ops/s
Iteration  10: 217958.807 ops/s

# Run progress: 50.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 251549.477 ops/s
# Warmup Iteration   2: 275703.306 ops/s
# Warmup Iteration   3: 273580.794 ops/s
# Warmup Iteration   4: 271305.037 ops/s
# Warmup Iteration   5: 268136.965 ops/s
Iteration   1: 261763.099 ops/s
Iteration   2: 271914.821 ops/s
Iteration   3: 274962.831 ops/s
Iteration   4: 274976.652 ops/s
Iteration   5: 261799.540 ops/s
Iteration   6: 272063.822 ops/s
Iteration   7: 272456.080 ops/s
Iteration   8: 274548.572 ops/s
Iteration   9: 274446.047 ops/s
Iteration  10: 273838.306 ops/s


Result "com.meylism.databind.Serialization.gson":
  245567.640 ?(99.9%) 23161.419 ops/s [Average]
  (min, avg, max) = (215913.157, 245567.640, 274976.652), stdev = 26672.724
  CI (99.9%): [222406.221, 268729.059] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 1465090.463 ops/s
# Warmup Iteration   2: 1601027.893 ops/s
# Warmup Iteration   3: 1498614.000 ops/s
# Warmup Iteration   4: 1635435.797 ops/s
# Warmup Iteration   5: 1634969.939 ops/s
Iteration   1: 1642622.535 ops/s
Iteration   2: 1623513.023 ops/s
Iteration   3: 1579579.267 ops/s
Iteration   4: 1657200.967 ops/s
Iteration   5: 1651275.298 ops/s
Iteration   6: 1644460.090 ops/s
Iteration   7: 1623789.000 ops/s
Iteration   8: 1661694.604 ops/s
Iteration   9: 1610231.023 ops/s
Iteration  10: 1645424.285 ops/s

# Run progress: 70.00% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 1484730.954 ops/s
# Warmup Iteration   2: 1588141.094 ops/s
# Warmup Iteration   3: 1590234.246 ops/s
# Warmup Iteration   4: 1577882.777 ops/s
# Warmup Iteration   5: 1590433.333 ops/s
Iteration   1: 1592083.368 ops/s
Iteration   2: 1678607.768 ops/s
Iteration   3: 1669440.232 ops/s
Iteration   4: 1676869.075 ops/s
Iteration   5: 1686554.882 ops/s
Iteration   6: 1668512.393 ops/s
Iteration   7: 1626322.651 ops/s
Iteration   8: 1594063.330 ops/s
Iteration   9: 1609163.412 ops/s
Iteration  10: 1602724.025 ops/s


Result "com.meylism.databind.Serialization.jackson":
  1637206.561 ?(99.9%) 27815.823 ops/s [Average]
  (min, avg, max) = (1579579.267, 1637206.561, 1686554.882), stdev = 32032.743
  CI (99.9%): [1609390.738, 1665022.385] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 1453984.867 ops/s
# Warmup Iteration   2: 1738791.852 ops/s
# Warmup Iteration   3: 1701187.259 ops/s
# Warmup Iteration   4: 1680191.042 ops/s
# Warmup Iteration   5: 1729832.844 ops/s
Iteration   1: 1721742.679 ops/s
Iteration   2: 1671438.331 ops/s
Iteration   3: 1707079.925 ops/s
Iteration   4: 1665626.761 ops/s
Iteration   5: 1695044.588 ops/s
Iteration   6: 1662782.426 ops/s
Iteration   7: 1700706.712 ops/s
Iteration   8: 1705576.782 ops/s
Iteration   9: 1690491.743 ops/s
Iteration  10: 1705899.865 ops/s

# Run progress: 90.00% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 1446169.953 ops/s
# Warmup Iteration   2: 1601671.862 ops/s
# Warmup Iteration   3: 1614873.202 ops/s
# Warmup Iteration   4: 1601956.558 ops/s
# Warmup Iteration   5: 1619529.699 ops/s
Iteration   1: 1607343.734 ops/s
Iteration   2: 1599941.081 ops/s
Iteration   3: 1597695.453 ops/s
Iteration   4: 1584334.729 ops/s
Iteration   5: 1603331.809 ops/s
Iteration   6: 1597099.640 ops/s
Iteration   7: 1590126.567 ops/s
Iteration   8: 1570274.775 ops/s
Iteration   9: 1561300.942 ops/s
Iteration  10: 1598309.283 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  1641807.391 ?(99.9%) 47650.675 ops/s [Average]
  (min, avg, max) = (1561300.942, 1641807.391, 1721742.679), stdev = 54874.588
  CI (99.9%): [1594156.716, 1689458.066] (assumes normal distribution)


# Run complete. Total time: 00:09:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt        Score       Error  Units
Serialization.dsljson              thrpt   20  1825517.121 ? 30247.119  ops/s
Serialization.dsljson_reflection   thrpt   20  1857705.950 ? 20014.842  ops/s
Serialization.gson                 thrpt   20   245567.640 ? 23161.419  ops/s
Serialization.jackson              thrpt   20  1637206.561 ? 27815.823  ops/s
Serialization.jackson_afterburner  thrpt   20  1641807.391 ? 47650.675  ops/s
