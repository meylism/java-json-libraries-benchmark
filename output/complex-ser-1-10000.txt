# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
14.177 ops/s
# Warmup Iteration   2: 15.593 ops/s
# Warmup Iteration   3: 15.591 ops/s
# Warmup Iteration   4: 15.575 ops/s
# Warmup Iteration   5: 15.586 ops/s
Iteration   1: 15.588 ops/s
Iteration   2: 15.588 ops/s
Iteration   3: 15.595 ops/s
Iteration   4: 15.583 ops/s
Iteration   5: 15.602 ops/s
Iteration   6: 15.600 ops/s
Iteration   7: 15.580 ops/s
Iteration   8: 15.584 ops/s
Iteration   9: 15.581 ops/s
Iteration  10: 15.592 ops/s

# Run progress: 10.00% complete, ETA 00:12:59
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
13.708 ops/s
# Warmup Iteration   2: 14.873 ops/s
# Warmup Iteration   3: 14.881 ops/s
# Warmup Iteration   4: 14.921 ops/s
# Warmup Iteration   5: 14.882 ops/s
Iteration   1: 14.913 ops/s
Iteration   2: 14.943 ops/s
Iteration   3: 14.937 ops/s
Iteration   4: 14.903 ops/s
Iteration   5: 14.871 ops/s
Iteration   6: 15.032 ops/s
Iteration   7: 14.951 ops/s
Iteration   8: 14.879 ops/s
Iteration   9: 14.911 ops/s
Iteration  10: 14.952 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  15.259 ±(99.9%) 0.295 ops/s [Average]
  (min, avg, max) = (14.871, 15.259, 15.602), stdev = 0.340
  CI (99.9%): [14.964, 15.555] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:41
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
13.759 ops/s
# Warmup Iteration   2: 14.969 ops/s
# Warmup Iteration   3: 14.982 ops/s
# Warmup Iteration   4: 14.965 ops/s
# Warmup Iteration   5: 14.969 ops/s
Iteration   1: 15.001 ops/s
Iteration   2: 14.965 ops/s
Iteration   3: 14.968 ops/s
Iteration   4: 14.979 ops/s
Iteration   5: 14.997 ops/s
Iteration   6: 14.954 ops/s
Iteration   7: 14.941 ops/s
Iteration   8: 14.978 ops/s
Iteration   9: 14.979 ops/s
Iteration  10: 15.010 ops/s

# Run progress: 30.00% complete, ETA 00:10:16
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
13.612 ops/s
# Warmup Iteration   2: 14.689 ops/s
# Warmup Iteration   3: 14.686 ops/s
# Warmup Iteration   4: 14.723 ops/s
# Warmup Iteration   5: 14.663 ops/s
Iteration   1: 14.663 ops/s
Iteration   2: 14.669 ops/s
Iteration   3: 14.700 ops/s
Iteration   4: 14.737 ops/s
Iteration   5: 14.692 ops/s
Iteration   6: 14.683 ops/s
Iteration   7: 14.703 ops/s
Iteration   8: 14.677 ops/s
Iteration   9: 14.612 ops/s
Iteration  10: 14.703 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  14.830 ±(99.9%) 0.133 ops/s [Average]
  (min, avg, max) = (14.612, 14.830, 15.010), stdev = 0.153
  CI (99.9%): [14.698, 14.963] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:49
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
10.890 ops/s
# Warmup Iteration   2: 11.656 ops/s
# Warmup Iteration   3: 11.671 ops/s
# Warmup Iteration   4: 11.671 ops/s
# Warmup Iteration   5: 11.691 ops/s
Iteration   1: 11.671 ops/s
Iteration   2: 11.646 ops/s
Iteration   3: 11.728 ops/s
Iteration   4: 11.690 ops/s
Iteration   5: 11.754 ops/s
Iteration   6: 11.658 ops/s
Iteration   7: 11.665 ops/s
Iteration   8: 11.673 ops/s
Iteration   9: 11.711 ops/s
Iteration  10: 11.681 ops/s

# Run progress: 50.00% complete, ETA 00:07:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
10.965 ops/s
# Warmup Iteration   2: 11.638 ops/s
# Warmup Iteration   3: 11.640 ops/s
# Warmup Iteration   4: 11.625 ops/s
# Warmup Iteration   5: 11.698 ops/s
Iteration   1: 11.686 ops/s
Iteration   2: 11.706 ops/s
Iteration   3: 11.706 ops/s
Iteration   4: 11.579 ops/s
Iteration   5: 11.616 ops/s
Iteration   6: 11.619 ops/s
Iteration   7: 11.702 ops/s
Iteration   8: 11.655 ops/s
Iteration   9: 11.698 ops/s
Iteration  10: 11.668 ops/s


Result "com.meylism.databind.Serialization.gson":
  11.676 ±(99.9%) 0.035 ops/s [Average]
  (min, avg, max) = (11.579, 11.676, 11.754), stdev = 0.041
  CI (99.9%): [11.640, 11.711] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:54
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
13.501 ops/s
# Warmup Iteration   2: 14.704 ops/s
# Warmup Iteration   3: 14.714 ops/s
# Warmup Iteration   4: 14.726 ops/s
# Warmup Iteration   5: 14.730 ops/s
Iteration   1: 14.726 ops/s
Iteration   2: 14.718 ops/s
Iteration   3: 14.728 ops/s
Iteration   4: 14.727 ops/s
Iteration   5: 14.713 ops/s
Iteration   6: 14.694 ops/s
Iteration   7: 14.727 ops/s
Iteration   8: 14.739 ops/s
Iteration   9: 14.737 ops/s
Iteration  10: 14.739 ops/s

# Run progress: 70.00% complete, ETA 00:04:25
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
12.780 ops/s
# Warmup Iteration   2: 13.962 ops/s
# Warmup Iteration   3: 13.955 ops/s
# Warmup Iteration   4: 13.972 ops/s
# Warmup Iteration   5: 13.965 ops/s
Iteration   1: 13.984 ops/s
Iteration   2: 13.984 ops/s
Iteration   3: 13.954 ops/s
Iteration   4: 13.974 ops/s
Iteration   5: 13.969 ops/s
Iteration   6: 13.947 ops/s
Iteration   7: 13.758 ops/s
Iteration   8: 13.968 ops/s
Iteration   9: 13.957 ops/s
Iteration  10: 13.976 ops/s


Result "com.meylism.databind.Serialization.jackson":
  14.336 ±(99.9%) 0.349 ops/s [Average]
  (min, avg, max) = (13.758, 14.336, 14.739), stdev = 0.402
  CI (99.9%): [13.987, 14.685] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:56
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
13.133 ops/s
# Warmup Iteration   2: 14.378 ops/s
# Warmup Iteration   3: 14.425 ops/s
# Warmup Iteration   4: 14.397 ops/s
# Warmup Iteration   5: 14.400 ops/s
Iteration   1: 14.405 ops/s
Iteration   2: 14.420 ops/s
Iteration   3: 14.412 ops/s
Iteration   4: 14.402 ops/s
Iteration   5: 14.388 ops/s
Iteration   6: 14.406 ops/s
Iteration   7: 14.390 ops/s
Iteration   8: 14.408 ops/s
Iteration   9: 14.392 ops/s
Iteration  10: 14.373 ops/s

# Run progress: 90.00% complete, ETA 00:01:28
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
13.390 ops/s
# Warmup Iteration   2: 14.510 ops/s
# Warmup Iteration   3: 14.533 ops/s
# Warmup Iteration   4: 14.538 ops/s
# Warmup Iteration   5: 14.552 ops/s
Iteration   1: 14.529 ops/s
Iteration   2: 14.519 ops/s
Iteration   3: 14.553 ops/s
Iteration   4: 14.525 ops/s
Iteration   5: 14.543 ops/s
Iteration   6: 14.505 ops/s
Iteration   7: 14.491 ops/s
Iteration   8: 14.563 ops/s
Iteration   9: 14.570 ops/s
Iteration  10: 14.523 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  14.466 ±(99.9%) 0.061 ops/s [Average]
  (min, avg, max) = (14.373, 14.466, 14.570), stdev = 0.071
  CI (99.9%): [14.404, 14.527] (assumes normal distribution)


# Run complete. Total time: 00:14:41

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt   Score   Error  Units
Serialization.dsljson              thrpt   20  15.259 ± 0.295  ops/s
Serialization.dsljson_reflection   thrpt   20  14.830 ± 0.133  ops/s
Serialization.gson                 thrpt   20  11.676 ± 0.035  ops/s
Serialization.jackson              thrpt   20  14.336 ± 0.349  ops/s
Serialization.jackson_afterburner  thrpt   20  14.466 ± 0.061  ops/s
