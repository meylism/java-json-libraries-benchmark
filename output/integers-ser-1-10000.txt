# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
510.758 ops/s
# Warmup Iteration   2: 502.260 ops/s
# Warmup Iteration   3: 516.008 ops/s
# Warmup Iteration   4: 514.534 ops/s
# Warmup Iteration   5: 514.214 ops/s
Iteration   1: 507.872 ops/s
Iteration   2: 513.218 ops/s
Iteration   3: 509.522 ops/s
Iteration   4: 509.473 ops/s
Iteration   5: 515.253 ops/s
Iteration   6: 512.693 ops/s
Iteration   7: 513.942 ops/s
Iteration   8: 513.789 ops/s
Iteration   9: 514.933 ops/s
Iteration  10: 512.970 ops/s

# Run progress: 10.00% complete, ETA 00:12:16
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
504.948 ops/s
# Warmup Iteration   2: 505.536 ops/s
# Warmup Iteration   3: 513.777 ops/s
# Warmup Iteration   4: 515.878 ops/s
# Warmup Iteration   5: 512.774 ops/s
Iteration   1: 480.436 ops/s
Iteration   2: 515.378 ops/s
Iteration   3: 506.998 ops/s
Iteration   4: 507.554 ops/s
Iteration   5: 510.579 ops/s
Iteration   6: 514.273 ops/s
Iteration   7: 517.894 ops/s
Iteration   8: 516.183 ops/s
Iteration   9: 511.962 ops/s
Iteration  10: 515.292 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  511.011 ?(99.9%) 6.790 ops/s [Average]
  (min, avg, max) = (480.436, 511.011, 517.894), stdev = 7.820
  CI (99.9%): [504.220, 517.801] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:54
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
506.188 ops/s
# Warmup Iteration   2: 516.078 ops/s
# Warmup Iteration   3: 521.390 ops/s
# Warmup Iteration   4: 520.582 ops/s
# Warmup Iteration   5: 520.377 ops/s
Iteration   1: 516.939 ops/s
Iteration   2: 521.309 ops/s
Iteration   3: 523.059 ops/s
Iteration   4: 521.311 ops/s
Iteration   5: 523.648 ops/s
Iteration   6: 522.436 ops/s
Iteration   7: 522.859 ops/s
Iteration   8: 521.311 ops/s
Iteration   9: 523.233 ops/s
Iteration  10: 517.239 ops/s

# Run progress: 30.00% complete, ETA 00:09:32
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
488.221 ops/s
# Warmup Iteration   2: 511.695 ops/s
# Warmup Iteration   3: 514.851 ops/s
# Warmup Iteration   4: 509.683 ops/s
# Warmup Iteration   5: 511.758 ops/s
Iteration   1: 514.385 ops/s
Iteration   2: 512.558 ops/s
Iteration   3: 515.452 ops/s
Iteration   4: 513.852 ops/s
Iteration   5: 517.063 ops/s
Iteration   6: 508.813 ops/s
Iteration   7: 517.279 ops/s
Iteration   8: 516.405 ops/s
Iteration   9: 503.969 ops/s
Iteration  10: 495.659 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  516.439 ?(99.9%) 6.188 ops/s [Average]
  (min, avg, max) = (495.659, 516.439, 523.648), stdev = 7.126
  CI (99.9%): [510.251, 522.627] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:10
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
116.077 ops/s
# Warmup Iteration   2: 118.506 ops/s
# Warmup Iteration   3: 125.074 ops/s
# Warmup Iteration   4: 123.430 ops/s
# Warmup Iteration   5: 121.886 ops/s
Iteration   1: 122.192 ops/s
Iteration   2: 122.534 ops/s
Iteration   3: 123.661 ops/s
Iteration   4: 124.241 ops/s
Iteration   5: 119.056 ops/s
Iteration   6: 123.486 ops/s
Iteration   7: 124.509 ops/s
Iteration   8: 124.933 ops/s
Iteration   9: 123.121 ops/s
Iteration  10: 125.907 ops/s

# Run progress: 50.00% complete, ETA 00:06:52
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
120.545 ops/s
# Warmup Iteration   2: 128.483 ops/s
# Warmup Iteration   3: 125.715 ops/s
# Warmup Iteration   4: 127.289 ops/s
# Warmup Iteration   5: 130.340 ops/s
Iteration   1: 127.702 ops/s
Iteration   2: 133.604 ops/s
Iteration   3: 129.459 ops/s
Iteration   4: 130.432 ops/s
Iteration   5: 120.953 ops/s
Iteration   6: 126.691 ops/s
Iteration   7: 123.448 ops/s
Iteration   8: 125.689 ops/s
Iteration   9: 125.532 ops/s
Iteration  10: 125.237 ops/s


Result "com.meylism.databind.Serialization.gson":
  125.119 ?(99.9%) 2.897 ops/s [Average]
  (min, avg, max) = (119.056, 125.119, 133.604), stdev = 3.336
  CI (99.9%): [122.222, 128.016] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:31
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
585.974 ops/s
# Warmup Iteration   2: 592.652 ops/s
# Warmup Iteration   3: 590.335 ops/s
# Warmup Iteration   4: 588.589 ops/s
# Warmup Iteration   5: 592.492 ops/s
Iteration   1: 589.361 ops/s
Iteration   2: 589.590 ops/s
Iteration   3: 570.743 ops/s
Iteration   4: 565.901 ops/s
Iteration   5: 569.841 ops/s
Iteration   6: 569.223 ops/s
Iteration   7: 569.887 ops/s
Iteration   8: 572.154 ops/s
Iteration   9: 585.740 ops/s
Iteration  10: 588.191 ops/s

# Run progress: 70.00% complete, ETA 00:04:08
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
527.192 ops/s
# Warmup Iteration   2: 548.459 ops/s
# Warmup Iteration   3: 545.482 ops/s
# Warmup Iteration   4: 539.557 ops/s
# Warmup Iteration   5: 544.399 ops/s
Iteration   1: 535.687 ops/s
Iteration   2: 520.457 ops/s
Iteration   3: 537.094 ops/s
Iteration   4: 543.129 ops/s
Iteration   5: 537.473 ops/s
Iteration   6: 537.008 ops/s
Iteration   7: 544.599 ops/s
Iteration   8: 547.305 ops/s
Iteration   9: 545.688 ops/s
Iteration  10: 542.792 ops/s


Result "com.meylism.databind.Serialization.jackson":
  558.093 ?(99.9%) 18.474 ops/s [Average]
  (min, avg, max) = (520.457, 558.093, 589.590), stdev = 21.274
  CI (99.9%): [539.619, 576.567] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:45
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
523.230 ops/s
# Warmup Iteration   2: 540.983 ops/s
# Warmup Iteration   3: 541.958 ops/s
# Warmup Iteration   4: 543.383 ops/s
# Warmup Iteration   5: 539.435 ops/s
Iteration   1: 543.485 ops/s
Iteration   2: 543.355 ops/s
Iteration   3: 543.948 ops/s
Iteration   4: 539.776 ops/s
Iteration   5: 547.015 ops/s
Iteration   6: 543.345 ops/s
Iteration   7: 545.550 ops/s
Iteration   8: 545.301 ops/s
Iteration   9: 544.028 ops/s
Iteration  10: 541.930 ops/s

# Run progress: 90.00% complete, ETA 00:01:22
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
544.437 ops/s
# Warmup Iteration   2: 554.157 ops/s
# Warmup Iteration   3: 556.649 ops/s
# Warmup Iteration   4: 554.207 ops/s
# Warmup Iteration   5: 560.679 ops/s
Iteration   1: 555.903 ops/s
Iteration   2: 532.490 ops/s
Iteration   3: 534.598 ops/s
Iteration   4: 539.111 ops/s
Iteration   5: 542.602 ops/s
Iteration   6: 551.956 ops/s
Iteration   7: 556.985 ops/s
Iteration   8: 547.078 ops/s
Iteration   9: 558.078 ops/s
Iteration  10: 559.280 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  545.791 ?(99.9%) 6.405 ops/s [Average]
  (min, avg, max) = (532.490, 545.791, 559.280), stdev = 7.376
  CI (99.9%): [539.386, 552.196] (assumes normal distribution)


# Run complete. Total time: 00:13:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt    Score    Error  Units
Serialization.dsljson              thrpt   20  511.011 ?  6.790  ops/s
Serialization.dsljson_reflection   thrpt   20  516.439 ?  6.188  ops/s
Serialization.gson                 thrpt   20  125.119 ?  2.897  ops/s
Serialization.jackson              thrpt   20  558.093 ? 18.474  ops/s
Serialization.jackson_afterburner  thrpt   20  545.791 ?  6.405  ops/s
