# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 98.435 ops/s
# Warmup Iteration   2: 92.185 ops/s
# Warmup Iteration   3: 93.894 ops/s
# Warmup Iteration   4: 96.036 ops/s
# Warmup Iteration   5: 94.500 ops/s
Iteration   1: 100.055 ops/s
Iteration   2: 97.849 ops/s
Iteration   3: 101.154 ops/s
Iteration   4: 99.632 ops/s
Iteration   5: 101.015 ops/s
Iteration   6: 98.321 ops/s
Iteration   7: 100.644 ops/s
Iteration   8: 98.641 ops/s
Iteration   9: 99.963 ops/s
Iteration  10: 100.080 ops/s

# Run progress: 10.00% complete, ETA 00:08:31
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 104.408 ops/s
# Warmup Iteration   2: 103.116 ops/s
# Warmup Iteration   3: 98.596 ops/s
# Warmup Iteration   4: 103.035 ops/s
# Warmup Iteration   5: 98.337 ops/s
Iteration   1: 99.894 ops/s
Iteration   2: 103.044 ops/s
Iteration   3: 105.047 ops/s
Iteration   4: 102.865 ops/s
Iteration   5: 99.472 ops/s
Iteration   6: 102.020 ops/s
Iteration   7: 98.907 ops/s
Iteration   8: 98.685 ops/s
Iteration   9: 100.379 ops/s
Iteration  10: 100.693 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  100.418 ?(99.9%) 1.538 ops/s [Average]
  (min, avg, max) = (97.849, 100.418, 105.047), stdev = 1.771
  CI (99.9%): [98.880, 101.956] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:34
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 114.398 ops/s
# Warmup Iteration   2: 120.809 ops/s
# Warmup Iteration   3: 114.366 ops/s
# Warmup Iteration   4: 117.567 ops/s
# Warmup Iteration   5: 108.727 ops/s
Iteration   1: 107.559 ops/s
Iteration   2: 118.513 ops/s
Iteration   3: 113.748 ops/s
Iteration   4: 119.734 ops/s
Iteration   5: 119.794 ops/s
Iteration   6: 125.201 ops/s
Iteration   7: 124.827 ops/s
Iteration   8: 121.626 ops/s
Iteration   9: 123.936 ops/s
Iteration  10: 121.358 ops/s

# Run progress: 30.00% complete, ETA 00:06:37
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 102.834 ops/s
# Warmup Iteration   2: 105.723 ops/s
# Warmup Iteration   3: 106.752 ops/s
# Warmup Iteration   4: 96.110 ops/s
# Warmup Iteration   5: 101.826 ops/s
Iteration   1: 98.090 ops/s
Iteration   2: 92.758 ops/s
Iteration   3: 93.020 ops/s
Iteration   4: 98.806 ops/s
Iteration   5: 104.994 ops/s
Iteration   6: 99.299 ops/s
Iteration   7: 104.451 ops/s
Iteration   8: 97.015 ops/s
Iteration   9: 100.398 ops/s
Iteration  10: 100.162 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  109.264 ?(99.9%) 10.084 ops/s [Average]
  (min, avg, max) = (92.758, 109.264, 125.201), stdev = 11.613
  CI (99.9%): [99.180, 119.349] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:40
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 29.830 ops/s
# Warmup Iteration   2: 32.495 ops/s
# Warmup Iteration   3: 27.438 ops/s
# Warmup Iteration   4: 26.652 ops/s
# Warmup Iteration   5: 27.359 ops/s
Iteration   1: 26.985 ops/s
Iteration   2: 27.673 ops/s
Iteration   3: 26.977 ops/s
Iteration   4: 27.753 ops/s
Iteration   5: 27.619 ops/s
Iteration   6: 27.791 ops/s
Iteration   7: 27.257 ops/s
Iteration   8: 27.201 ops/s
Iteration   9: 27.442 ops/s
Iteration  10: 27.597 ops/s

# Run progress: 50.00% complete, ETA 00:04:45
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 29.968 ops/s
# Warmup Iteration   2: 31.450 ops/s
# Warmup Iteration   3: 31.461 ops/s
# Warmup Iteration   4: 30.238 ops/s
# Warmup Iteration   5: 29.738 ops/s
Iteration   1: 29.028 ops/s
Iteration   2: 29.696 ops/s
Iteration   3: 27.759 ops/s
Iteration   4: 27.655 ops/s
Iteration   5: 31.077 ops/s
Iteration   6: 31.545 ops/s
Iteration   7: 31.378 ops/s
Iteration   8: 31.455 ops/s
Iteration   9: 31.348 ops/s
Iteration  10: 31.488 ops/s


Result "com.meylism.databind.Serialization.gson":
  28.836 ?(99.9%) 1.581 ops/s [Average]
  (min, avg, max) = (26.977, 28.836, 31.545), stdev = 1.821
  CI (99.9%): [27.255, 30.417] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:49
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 103.839 ops/s
# Warmup Iteration   2: 106.366 ops/s
# Warmup Iteration   3: 107.447 ops/s
# Warmup Iteration   4: 105.573 ops/s
# Warmup Iteration   5: 94.450 ops/s
Iteration   1: 95.970 ops/s
Iteration   2: 96.094 ops/s
Iteration   3: 98.565 ops/s
Iteration   4: 96.694 ops/s
Iteration   5: 95.233 ops/s
Iteration   6: 105.137 ops/s
Iteration   7: 102.156 ops/s
Iteration   8: 101.542 ops/s
Iteration   9: 100.816 ops/s
Iteration  10: 101.134 ops/s

# Run progress: 70.00% complete, ETA 00:02:51
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 97.719 ops/s
# Warmup Iteration   2: 95.090 ops/s
# Warmup Iteration   3: 101.514 ops/s
# Warmup Iteration   4: 100.713 ops/s
# Warmup Iteration   5: 99.238 ops/s
Iteration   1: 95.762 ops/s
Iteration   2: 94.639 ops/s
Iteration   3: 97.919 ops/s
Iteration   4: 93.702 ops/s
Iteration   5: 95.318 ops/s
Iteration   6: 91.251 ops/s
Iteration   7: 101.669 ops/s
Iteration   8: 98.597 ops/s
Iteration   9: 101.932 ops/s
Iteration  10: 102.041 ops/s


Result "com.meylism.databind.Serialization.jackson":
  98.309 ?(99.9%) 3.132 ops/s [Average]
  (min, avg, max) = (91.251, 98.309, 105.137), stdev = 3.607
  CI (99.9%): [95.177, 101.441] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
108.608 ops/s
# Warmup Iteration   2: 112.347 ops/s
# Warmup Iteration   3: 109.626 ops/s
# Warmup Iteration   4: 112.185 ops/s
# Warmup Iteration   5: 108.879 ops/s
Iteration   1: 108.840 ops/s
Iteration   2: 109.188 ops/s
Iteration   3: 105.964 ops/s
Iteration   4: 112.363 ops/s
Iteration   5: 110.962 ops/s
Iteration   6: 110.514 ops/s
Iteration   7: 111.873 ops/s
Iteration   8: 112.090 ops/s
Iteration   9: 111.510 ops/s
Iteration  10: 110.278 ops/s

# Run progress: 90.00% complete, ETA 00:00:57
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
99.412 ops/s
# Warmup Iteration   2: 101.507 ops/s
# Warmup Iteration   3: 102.080 ops/s
# Warmup Iteration   4: 102.038 ops/s
# Warmup Iteration   5: 100.870 ops/s
Iteration   1: 99.148 ops/s
Iteration   2: 89.901 ops/s
Iteration   3: 88.879 ops/s
Iteration   4: 90.879 ops/s
Iteration   5: 93.095 ops/s
Iteration   6: 90.821 ops/s
Iteration   7: 90.157 ops/s
Iteration   8: 94.390 ops/s
Iteration   9: 91.628 ops/s
Iteration  10: 92.536 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  101.251 ?(99.9%) 8.384 ops/s [Average]
  (min, avg, max) = (88.879, 101.251, 112.363), stdev = 9.655
  CI (99.9%): [92.866, 109.635] (assumes normal distribution)


# Run complete. Total time: 00:09:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt    Score    Error  Units
Serialization.dsljson              thrpt   20  100.418 ?  1.538  ops/s
Serialization.dsljson_reflection   thrpt   20  109.264 ? 10.084  ops/s
Serialization.gson                 thrpt   20   28.836 ?  1.581  ops/s
Serialization.jackson              thrpt   20   98.309 ?  3.132  ops/s
Serialization.jackson_afterburner  thrpt   20  101.251 ?  8.384  ops/s
