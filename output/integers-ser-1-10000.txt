# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 114.035 ops/s
# Warmup Iteration   2: 114.510 ops/s
# Warmup Iteration   3: 113.786 ops/s
# Warmup Iteration   4: 114.541 ops/s
# Warmup Iteration   5: 114.985 ops/s
Iteration   1: 115.665 ops/s
Iteration   2: 115.217 ops/s
Iteration   3: 114.787 ops/s
Iteration   4: 114.807 ops/s
Iteration   5: 115.549 ops/s
Iteration   6: 115.739 ops/s
Iteration   7: 113.925 ops/s
Iteration   8: 114.139 ops/s
Iteration   9: 115.350 ops/s
Iteration  10: 108.777 ops/s

# Run progress: 10.00% complete, ETA 00:12:46
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 104.847 ops/s
# Warmup Iteration   2: 107.575 ops/s
# Warmup Iteration   3: 109.842 ops/s
# Warmup Iteration   4: 108.817 ops/s
# Warmup Iteration   5: 106.621 ops/s
Iteration   1: 110.468 ops/s
Iteration   2: 109.036 ops/s
Iteration   3: 104.525 ops/s
Iteration   4: 113.217 ops/s
Iteration   5: 110.938 ops/s
Iteration   6: 105.555 ops/s
Iteration   7: 107.598 ops/s
Iteration   8: 109.122 ops/s
Iteration   9: 109.660 ops/s
Iteration  10: 104.299 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  111.419 ?(99.9%) 3.408 ops/s [Average]
  (min, avg, max) = (104.299, 111.419, 115.739), stdev = 3.925
  CI (99.9%): [108.010, 114.827] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:22
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 103.573 ops/s
# Warmup Iteration   2: 103.282 ops/s
# Warmup Iteration   3: 100.660 ops/s
# Warmup Iteration   4: 101.537 ops/s
# Warmup Iteration   5: 107.034 ops/s
Iteration   1: 106.228 ops/s
Iteration   2: 106.994 ops/s
Iteration   3: 106.854 ops/s
Iteration   4: 107.104 ops/s
Iteration   5: 108.644 ops/s
Iteration   6: 107.421 ops/s
Iteration   7: 107.411 ops/s
Iteration   8: 107.234 ops/s
Iteration   9: 107.672 ops/s
Iteration  10: 107.908 ops/s

# Run progress: 30.00% complete, ETA 00:09:56
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 96.783 ops/s
# Warmup Iteration   2: 96.624 ops/s
# Warmup Iteration   3: 94.545 ops/s
# Warmup Iteration   4: 93.461 ops/s
# Warmup Iteration   5: 97.818 ops/s
Iteration   1: 102.295 ops/s
Iteration   2: 95.826 ops/s
Iteration   3: 101.873 ops/s
Iteration   4: 98.553 ops/s
Iteration   5: 100.116 ops/s
Iteration   6: 96.584 ops/s
Iteration   7: 101.739 ops/s
Iteration   8: 102.408 ops/s
Iteration   9: 102.038 ops/s
Iteration  10: 101.453 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  103.818 ?(99.9%) 3.491 ops/s [Average]
  (min, avg, max) = (95.826, 103.818, 108.644), stdev = 4.021
  CI (99.9%): [100.327, 107.309] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:32
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 30.527 ops/s
# Warmup Iteration   2: 31.235 ops/s
# Warmup Iteration   3: 30.283 ops/s
# Warmup Iteration   4: 31.340 ops/s
# Warmup Iteration   5: 31.366 ops/s
Iteration   1: 31.596 ops/s
Iteration   2: 31.928 ops/s
Iteration   3: 28.332 ops/s
Iteration   4: 31.223 ops/s
Iteration   5: 27.508 ops/s
Iteration   6: 31.059 ops/s
Iteration   7: 31.828 ops/s
Iteration   8: 28.631 ops/s
Iteration   9: 31.470 ops/s
Iteration  10: 31.406 ops/s

# Run progress: 50.00% complete, ETA 00:07:14
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 34.332 ops/s
# Warmup Iteration   2: 34.507 ops/s
# Warmup Iteration   3: 35.354 ops/s
# Warmup Iteration   4: 33.332 ops/s
# Warmup Iteration   5: 34.719 ops/s
Iteration   1: 33.655 ops/s
Iteration   2: 35.126 ops/s
Iteration   3: 35.568 ops/s
Iteration   4: 33.973 ops/s
Iteration   5: 34.457 ops/s
Iteration   6: 35.695 ops/s
Iteration   7: 34.975 ops/s
Iteration   8: 34.764 ops/s
Iteration   9: 35.472 ops/s
Iteration  10: 34.686 ops/s


Result "com.meylism.databind.Serialization.gson":
  32.668 ?(99.9%) 2.209 ops/s [Average]
  (min, avg, max) = (27.508, 32.668, 35.695), stdev = 2.544
  CI (99.9%): [30.458, 34.877] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:51
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 111.582 ops/s
# Warmup Iteration   2: 113.370 ops/s
# Warmup Iteration   3: 114.266 ops/s
# Warmup Iteration   4: 108.287 ops/s
# Warmup Iteration   5: 112.505 ops/s
Iteration   1: 115.299 ops/s
Iteration   2: 117.108 ops/s
Iteration   3: 118.130 ops/s
Iteration   4: 112.584 ops/s
Iteration   5: 112.630 ops/s
Iteration   6: 114.988 ops/s
Iteration   7: 114.716 ops/s
Iteration   8: 118.725 ops/s
Iteration   9: 119.357 ops/s
Iteration  10: 118.623 ops/s

# Run progress: 70.00% complete, ETA 00:04:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 113.244 ops/s
# Warmup Iteration   2: 102.903 ops/s
# Warmup Iteration   3: 103.924 ops/s
# Warmup Iteration   4: 103.961 ops/s
# Warmup Iteration   5: 108.258 ops/s
Iteration   1: 114.678 ops/s
Iteration   2: 115.701 ops/s
Iteration   3: 111.848 ops/s
Iteration   4: 118.979 ops/s
Iteration   5: 117.741 ops/s
Iteration   6: 119.186 ops/s
Iteration   7: 113.461 ops/s
Iteration   8: 117.880 ops/s
Iteration   9: 114.612 ops/s
Iteration  10: 110.359 ops/s


Result "com.meylism.databind.Serialization.jackson":
  115.830 ?(99.9%) 2.372 ops/s [Average]
  (min, avg, max) = (110.359, 115.830, 119.357), stdev = 2.732
  CI (99.9%): [113.458, 118.203] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
110.389 ops/s
# Warmup Iteration   2: 107.220 ops/s
# Warmup Iteration   3: 111.120 ops/s
# Warmup Iteration   4: 108.391 ops/s
# Warmup Iteration   5: 109.526 ops/s
Iteration   1: 112.642 ops/s
Iteration   2: 116.665 ops/s
Iteration   3: 116.195 ops/s
Iteration   4: 111.782 ops/s
Iteration   5: 112.165 ops/s
Iteration   6: 112.126 ops/s
Iteration   7: 113.843 ops/s
Iteration   8: 106.162 ops/s
Iteration   9: 111.089 ops/s
Iteration  10: 112.018 ops/s

# Run progress: 90.00% complete, ETA 00:01:26
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
93.558 ops/s
# Warmup Iteration   2: 96.634 ops/s
# Warmup Iteration   3: 90.007 ops/s
# Warmup Iteration   4: 96.294 ops/s
# Warmup Iteration   5: 97.064 ops/s
Iteration   1: 96.983 ops/s
Iteration   2: 95.234 ops/s
Iteration   3: 86.126 ops/s
Iteration   4: 88.161 ops/s
Iteration   5: 89.139 ops/s
Iteration   6: 94.687 ops/s
Iteration   7: 95.421 ops/s
Iteration   8: 95.311 ops/s
Iteration   9: 94.832 ops/s
Iteration  10: 85.560 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  102.307 ?(99.9%) 9.581 ops/s [Average]
  (min, avg, max) = (85.560, 102.307, 116.665), stdev = 11.034
  CI (99.9%): [92.726, 111.888] (assumes normal distribution)


# Run complete. Total time: 00:14:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt    Score   Error  Units
Serialization.dsljson              thrpt   20  111.419 ? 3.408  ops/s
Serialization.dsljson_reflection   thrpt   20  103.818 ? 3.491  ops/s
Serialization.gson                 thrpt   20   32.668 ? 2.209  ops/s
Serialization.jackson              thrpt   20  115.830 ? 2.372  ops/s
Serialization.jackson_afterburner  thrpt   20  102.307 ? 9.581  ops/s
