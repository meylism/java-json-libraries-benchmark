# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 147.071 ops/s
# Warmup Iteration   2: 158.521 ops/s
# Warmup Iteration   3: 160.368 ops/s
# Warmup Iteration   4: 160.140 ops/s
# Warmup Iteration   5: 158.741 ops/s
Iteration   1: 158.631 ops/s
Iteration   2: 155.389 ops/s
Iteration   3: 159.029 ops/s
Iteration   4: 158.511 ops/s
Iteration   5: 161.599 ops/s
Iteration   6: 160.554 ops/s
Iteration   7: 160.259 ops/s
Iteration   8: 159.175 ops/s
Iteration   9: 158.938 ops/s
Iteration  10: 154.843 ops/s

# Run progress: 10.00% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 129.869 ops/s
# Warmup Iteration   2: 133.336 ops/s
# Warmup Iteration   3: 133.262 ops/s
# Warmup Iteration   4: 136.972 ops/s
# Warmup Iteration   5: 136.405 ops/s
Iteration   1: 137.423 ops/s
Iteration   2: 136.748 ops/s
Iteration   3: 136.139 ops/s
Iteration   4: 136.653 ops/s
Iteration   5: 136.493 ops/s
Iteration   6: 135.613 ops/s
Iteration   7: 135.510 ops/s
Iteration   8: 137.671 ops/s
Iteration   9: 137.661 ops/s
Iteration  10: 135.868 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  147.635 ?(99.9%) 9.944 ops/s [Average]
  (min, avg, max) = (135.510, 147.635, 161.599), stdev = 11.452
  CI (99.9%): [137.691, 157.580] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:33
# Fork: 1 of 2
# Warmup Iteration   1: 156.711 ops/s
# Warmup Iteration   2: 173.083 ops/s
# Warmup Iteration   3: 169.148 ops/s
# Warmup Iteration   4: 173.047 ops/s
# Warmup Iteration   5: 165.675 ops/s
Iteration   1: 171.878 ops/s
Iteration   2: 170.738 ops/s
Iteration   3: 172.560 ops/s
Iteration   4: 170.486 ops/s
Iteration   5: 172.914 ops/s
Iteration   6: 172.924 ops/s
Iteration   7: 172.766 ops/s
Iteration   8: 173.244 ops/s
Iteration   9: 172.796 ops/s
Iteration  10: 173.097 ops/s

# Run progress: 30.00% complete, ETA 00:06:36
# Fork: 2 of 2
# Warmup Iteration   1: 130.205 ops/s
# Warmup Iteration   2: 144.061 ops/s
# Warmup Iteration   3: 142.683 ops/s
# Warmup Iteration   4: 142.617 ops/s
# Warmup Iteration   5: 141.900 ops/s
Iteration   1: 144.444 ops/s
Iteration   2: 145.031 ops/s
Iteration   3: 143.177 ops/s
Iteration   4: 145.564 ops/s
Iteration   5: 139.277 ops/s
Iteration   6: 143.052 ops/s
Iteration   7: 143.915 ops/s
Iteration   8: 145.395 ops/s
Iteration   9: 144.291 ops/s
Iteration  10: 145.448 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  158.150 ?(99.9%) 12.706 ops/s [Average]
  (min, avg, max) = (139.277, 158.150, 173.244), stdev = 14.632
  CI (99.9%): [145.444, 170.856] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:05:40
# Fork: 1 of 2
# Warmup Iteration   1: 99.857 ops/s
# Warmup Iteration   2: 102.904 ops/s
# Warmup Iteration   3: 105.577 ops/s
# Warmup Iteration   4: 104.019 ops/s
# Warmup Iteration   5: 104.949 ops/s
Iteration   1: 104.535 ops/s
Iteration   2: 104.755 ops/s
Iteration   3: 104.800 ops/s
Iteration   4: 102.112 ops/s
Iteration   5: 104.414 ops/s
Iteration   6: 105.136 ops/s
Iteration   7: 104.668 ops/s
Iteration   8: 105.100 ops/s
Iteration   9: 104.319 ops/s
Iteration  10: 103.778 ops/s

# Run progress: 50.00% complete, ETA 00:04:43
# Fork: 2 of 2
# Warmup Iteration   1: 100.099 ops/s
# Warmup Iteration   2: 106.276 ops/s
# Warmup Iteration   3: 99.729 ops/s
# Warmup Iteration   4: 103.917 ops/s
# Warmup Iteration   5: 103.886 ops/s
Iteration   1: 104.675 ops/s
Iteration   2: 105.783 ops/s
Iteration   3: 104.810 ops/s
Iteration   4: 107.091 ops/s
Iteration   5: 104.383 ops/s
Iteration   6: 104.289 ops/s
Iteration   7: 104.627 ops/s
Iteration   8: 103.249 ops/s
Iteration   9: 100.227 ops/s
Iteration  10: 104.271 ops/s


Result "com.meylism.databind.Deserialization.gson":
  104.351 ?(99.9%) 1.182 ops/s [Average]
  (min, avg, max) = (100.227, 104.351, 107.091), stdev = 1.361
  CI (99.9%): [103.169, 105.533] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:03:47
# Fork: 1 of 2
# Warmup Iteration   1: 132.488 ops/s
# Warmup Iteration   2: 137.353 ops/s
# Warmup Iteration   3: 134.644 ops/s
# Warmup Iteration   4: 132.967 ops/s
# Warmup Iteration   5: 134.276 ops/s
Iteration   1: 134.632 ops/s
Iteration   2: 131.933 ops/s
Iteration   3: 135.401 ops/s
Iteration   4: 139.123 ops/s
Iteration   5: 134.334 ops/s
Iteration   6: 132.953 ops/s
Iteration   7: 134.646 ops/s
Iteration   8: 141.121 ops/s
Iteration   9: 143.378 ops/s
Iteration  10: 143.972 ops/s

# Run progress: 70.00% complete, ETA 00:02:50
# Fork: 2 of 2
# Warmup Iteration   1: 136.074 ops/s
# Warmup Iteration   2: 144.069 ops/s
# Warmup Iteration   3: 140.391 ops/s
# Warmup Iteration   4: 142.904 ops/s
# Warmup Iteration   5: 145.049 ops/s
Iteration   1: 145.747 ops/s
Iteration   2: 145.126 ops/s
Iteration   3: 144.383 ops/s
Iteration   4: 142.489 ops/s
Iteration   5: 140.027 ops/s
Iteration   6: 142.939 ops/s
Iteration   7: 142.890 ops/s
Iteration   8: 139.155 ops/s
Iteration   9: 139.425 ops/s
Iteration  10: 141.015 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  139.734 ?(99.9%) 3.764 ops/s [Average]
  (min, avg, max) = (131.933, 139.734, 145.747), stdev = 4.335
  CI (99.9%): [135.970, 143.499] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:53
# Fork: 1 of 2
# Warmup Iteration   1: 155.404 ops/s
# Warmup Iteration   2: 172.442 ops/s
# Warmup Iteration   3: 174.431 ops/s
# Warmup Iteration   4: 170.840 ops/s
# Warmup Iteration   5: 173.961 ops/s
Iteration   1: 176.010 ops/s
Iteration   2: 173.341 ops/s
Iteration   3: 168.299 ops/s
Iteration   4: 166.227 ops/s
Iteration   5: 161.856 ops/s
Iteration   6: 169.321 ops/s
Iteration   7: 170.786 ops/s
Iteration   8: 164.641 ops/s
Iteration   9: 169.966 ops/s
Iteration  10: 170.496 ops/s

# Run progress: 90.00% complete, ETA 00:00:56
# Fork: 2 of 2
# Warmup Iteration   1: 136.822 ops/s
# Warmup Iteration   2: 140.614 ops/s
# Warmup Iteration   3: 143.561 ops/s
# Warmup Iteration   4: 143.066 ops/s
# Warmup Iteration   5: 143.937 ops/s
Iteration   1: 143.896 ops/s
Iteration   2: 135.972 ops/s
Iteration   3: 140.093 ops/s
Iteration   4: 142.400 ops/s
Iteration   5: 137.685 ops/s
Iteration   6: 138.961 ops/s
Iteration   7: 139.448 ops/s
Iteration   8: 136.428 ops/s
Iteration   9: 138.302 ops/s
Iteration  10: 140.174 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  154.215 ?(99.9%) 13.563 ops/s [Average]
  (min, avg, max) = (135.972, 154.215, 176.010), stdev = 15.620
  CI (99.9%): [140.652, 167.779] (assumes normal distribution)


# Run complete. Total time: 00:09:27

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt    Score    Error  Units
Deserialization.dsljson              thrpt   20  147.635 ?  9.944  ops/s
Deserialization.dsljson_reflection   thrpt   20  158.150 ? 12.706  ops/s
Deserialization.gson                 thrpt   20  104.351 ?  1.182  ops/s
Deserialization.jackson              thrpt   20  139.734 ?  3.764  ops/s
Deserialization.jackson_afterburner  thrpt   20  154.215 ? 13.563  ops/s
