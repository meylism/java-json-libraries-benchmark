# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 83.863 ops/s
# Warmup Iteration   2: 86.113 ops/s
# Warmup Iteration   3: 86.417 ops/s
# Warmup Iteration   4: 86.527 ops/s
# Warmup Iteration   5: 90.360 ops/s
Iteration   1: 92.635 ops/s
Iteration   2: 94.088 ops/s
Iteration   3: 91.958 ops/s
Iteration   4: 91.643 ops/s
Iteration   5: 93.864 ops/s
Iteration   6: 88.891 ops/s
Iteration   7: 87.634 ops/s
Iteration   8: 83.771 ops/s
Iteration   9: 80.334 ops/s
Iteration  10: 85.693 ops/s

# Run progress: 10.00% complete, ETA 00:13:17
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 85.476 ops/s
# Warmup Iteration   2: 93.912 ops/s
# Warmup Iteration   3: 85.976 ops/s
# Warmup Iteration   4: 85.904 ops/s
# Warmup Iteration   5: 85.168 ops/s
Iteration   1: 81.868 ops/s
Iteration   2: 80.769 ops/s
Iteration   3: 84.427 ops/s
Iteration   4: 88.947 ops/s
Iteration   5: 95.379 ops/s
Iteration   6: 87.885 ops/s
Iteration   7: 82.899 ops/s
Iteration   8: 89.548 ops/s
Iteration   9: 93.403 ops/s
Iteration  10: 93.697 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  88.467 ?(99.9%) 4.219 ops/s [Average]
  (min, avg, max) = (80.334, 88.467, 95.379), stdev = 4.859
  CI (99.9%): [84.248, 92.686] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:49
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 85.427 ops/s
# Warmup Iteration   2: 88.721 ops/s
# Warmup Iteration   3: 87.632 ops/s
# Warmup Iteration   4: 87.388 ops/s
# Warmup Iteration   5: 92.149 ops/s
Iteration   1: 92.515 ops/s
Iteration   2: 89.905 ops/s
Iteration   3: 90.428 ops/s
Iteration   4: 94.074 ops/s
Iteration   5: 82.101 ops/s
Iteration   6: 93.541 ops/s
Iteration   7: 96.361 ops/s
Iteration   8: 94.269 ops/s
Iteration   9: 88.773 ops/s
Iteration  10: 85.473 ops/s

# Run progress: 30.00% complete, ETA 00:10:21
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 90.326 ops/s
# Warmup Iteration   2: 84.725 ops/s
# Warmup Iteration   3: 88.417 ops/s
# Warmup Iteration   4: 91.602 ops/s
# Warmup Iteration   5: 88.846 ops/s
Iteration   1: 86.034 ops/s
Iteration   2: 87.788 ops/s
Iteration   3: 88.404 ops/s
Iteration   4: 87.427 ops/s
Iteration   5: 89.297 ops/s
Iteration   6: 92.416 ops/s
Iteration   7: 93.824 ops/s
Iteration   8: 89.820 ops/s
Iteration   9: 92.792 ops/s
Iteration  10: 91.705 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  90.347 ?(99.9%) 3.072 ops/s [Average]
  (min, avg, max) = (82.101, 90.347, 96.361), stdev = 3.538
  CI (99.9%): [87.275, 93.419] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:52
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 42.359 ops/s
# Warmup Iteration   2: 52.958 ops/s
# Warmup Iteration   3: 51.932 ops/s
# Warmup Iteration   4: 52.606 ops/s
# Warmup Iteration   5: 53.441 ops/s
Iteration   1: 53.234 ops/s
Iteration   2: 52.312 ops/s
Iteration   3: 53.663 ops/s
Iteration   4: 52.960 ops/s
Iteration   5: 53.269 ops/s
Iteration   6: 53.106 ops/s
Iteration   7: 52.896 ops/s
Iteration   8: 53.666 ops/s
Iteration   9: 53.314 ops/s
Iteration  10: 52.098 ops/s

# Run progress: 50.00% complete, ETA 00:07:25
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 53.056 ops/s
# Warmup Iteration   2: 61.909 ops/s
# Warmup Iteration   3: 61.780 ops/s
# Warmup Iteration   4: 62.069 ops/s
# Warmup Iteration   5: 62.090 ops/s
Iteration   1: 61.636 ops/s
Iteration   2: 57.045 ops/s
Iteration   3: 62.024 ops/s
Iteration   4: 61.677 ops/s
Iteration   5: 62.148 ops/s
Iteration   6: 61.215 ops/s
Iteration   7: 61.928 ops/s
Iteration   8: 61.872 ops/s
Iteration   9: 62.025 ops/s
Iteration  10: 61.542 ops/s


Result "com.meylism.databind.Deserialization.gson":
  57.181 ?(99.9%) 3.803 ops/s [Average]
  (min, avg, max) = (52.098, 57.181, 62.148), stdev = 4.379
  CI (99.9%): [53.379, 60.984] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 151.914 ops/s
# Warmup Iteration   2: 170.264 ops/s
# Warmup Iteration   3: 163.924 ops/s
# Warmup Iteration   4: 163.223 ops/s
# Warmup Iteration   5: 169.084 ops/s
Iteration   1: 170.797 ops/s
Iteration   2: 170.166 ops/s
Iteration   3: 167.919 ops/s
Iteration   4: 171.826 ops/s
Iteration   5: 170.856 ops/s
Iteration   6: 170.765 ops/s
Iteration   7: 156.617 ops/s
Iteration   8: 160.071 ops/s
Iteration   9: 154.691 ops/s
Iteration  10: 167.194 ops/s

# Run progress: 70.00% complete, ETA 00:04:25
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 188.033 ops/s
# Warmup Iteration   2: 214.159 ops/s
# Warmup Iteration   3: 215.749 ops/s
# Warmup Iteration   4: 216.058 ops/s
# Warmup Iteration   5: 215.423 ops/s
Iteration   1: 215.760 ops/s
Iteration   2: 218.266 ops/s
Iteration   3: 214.861 ops/s
Iteration   4: 214.169 ops/s
Iteration   5: 211.514 ops/s
Iteration   6: 214.414 ops/s
Iteration   7: 220.452 ops/s
Iteration   8: 218.857 ops/s
Iteration   9: 218.633 ops/s
Iteration  10: 217.796 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  191.281 ?(99.9%) 22.833 ops/s [Average]
  (min, avg, max) = (154.691, 191.281, 220.452), stdev = 26.295
  CI (99.9%): [168.448, 214.114] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:55
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
192.693 ops/s
# Warmup Iteration   2: 212.460 ops/s
# Warmup Iteration   3: 212.705 ops/s
# Warmup Iteration   4: 213.263 ops/s
# Warmup Iteration   5: 214.053 ops/s
Iteration   1: 215.332 ops/s
Iteration   2: 215.886 ops/s
Iteration   3: 212.770 ops/s
Iteration   4: 215.570 ops/s
Iteration   5: 211.035 ops/s
Iteration   6: 213.559 ops/s
Iteration   7: 212.492 ops/s
Iteration   8: 213.569 ops/s
Iteration   9: 216.771 ops/s
Iteration  10: 215.936 ops/s

# Run progress: 90.00% complete, ETA 00:01:27
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
187.099 ops/s
# Warmup Iteration   2: 207.685 ops/s
# Warmup Iteration   3: 207.245 ops/s
# Warmup Iteration   4: 207.919 ops/s
# Warmup Iteration   5: 209.143 ops/s
Iteration   1: 209.107 ops/s
Iteration   2: 211.039 ops/s
Iteration   3: 208.725 ops/s
Iteration   4: 209.772 ops/s
Iteration   5: 208.286 ops/s
Iteration   6: 206.248 ops/s
Iteration   7: 200.955 ops/s
Iteration   8: 192.501 ops/s
Iteration   9: 203.080 ops/s
Iteration  10: 206.901 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  209.977 ?(99.9%) 5.201 ops/s [Average]
  (min, avg, max) = (192.501, 209.977, 216.771), stdev = 5.990
  CI (99.9%): [204.776, 215.178] (assumes normal distribution)


# Run complete. Total time: 00:14:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt    Score    Error  Units
Deserialization.dsljson              thrpt   20   88.467 ?  4.219  ops/s
Deserialization.dsljson_reflection   thrpt   20   90.347 ?  3.072  ops/s
Deserialization.gson                 thrpt   20   57.181 ?  3.803  ops/s
Deserialization.jackson              thrpt   20  191.281 ? 22.833  ops/s
Deserialization.jackson_afterburner  thrpt   20  209.977 ?  5.201  ops/s
