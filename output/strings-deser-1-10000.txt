# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 83.877 ops/s
# Warmup Iteration   2: 87.335 ops/s
# Warmup Iteration   3: 88.298 ops/s
# Warmup Iteration   4: 90.020 ops/s
# Warmup Iteration   5: 87.071 ops/s
Iteration   1: 86.077 ops/s
Iteration   2: 89.188 ops/s
Iteration   3: 84.053 ops/s
Iteration   4: 86.984 ops/s
Iteration   5: 89.784 ops/s
Iteration   6: 89.649 ops/s
Iteration   7: 87.526 ops/s
Iteration   8: 86.584 ops/s
Iteration   9: 89.140 ops/s
Iteration  10: 85.859 ops/s

# Run progress: 10.00% complete, ETA 00:13:18
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 82.884 ops/s
# Warmup Iteration   2: 88.836 ops/s
# Warmup Iteration   3: 89.128 ops/s
# Warmup Iteration   4: 87.025 ops/s
# Warmup Iteration   5: 85.446 ops/s
Iteration   1: 92.725 ops/s
Iteration   2: 84.469 ops/s
Iteration   3: 84.544 ops/s
Iteration   4: 76.815 ops/s
Iteration   5: 84.239 ops/s
Iteration   6: 84.490 ops/s
Iteration   7: 85.418 ops/s
Iteration   8: 84.107 ops/s
Iteration   9: 88.912 ops/s
Iteration  10: 90.123 ops/s


Result "com.meylism.databind.Deserialization.dsljson":
  86.534 ?(99.9%) 2.943 ops/s [Average]
  (min, avg, max) = (76.815, 86.534, 92.725), stdev = 3.389
  CI (99.9%): [83.591, 89.477] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:11:49
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 83.822 ops/s
# Warmup Iteration   2: 93.964 ops/s
# Warmup Iteration   3: 83.798 ops/s
# Warmup Iteration   4: 84.207 ops/s
# Warmup Iteration   5: 84.019 ops/s
Iteration   1: 90.185 ops/s
Iteration   2: 84.451 ops/s
Iteration   3: 79.589 ops/s
Iteration   4: 78.013 ops/s
Iteration   5: 84.108 ops/s
Iteration   6: 82.908 ops/s
Iteration   7: 81.479 ops/s
Iteration   8: 84.302 ops/s
Iteration   9: 81.520 ops/s
Iteration  10: 85.456 ops/s

# Run progress: 30.00% complete, ETA 00:10:22
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 82.287 ops/s
# Warmup Iteration   2: 85.505 ops/s
# Warmup Iteration   3: 87.277 ops/s
# Warmup Iteration   4: 88.140 ops/s
# Warmup Iteration   5: 85.785 ops/s
Iteration   1: 93.090 ops/s
Iteration   2: 85.907 ops/s
Iteration   3: 83.138 ops/s
Iteration   4: 84.324 ops/s
Iteration   5: 81.526 ops/s
Iteration   6: 85.813 ops/s
Iteration   7: 88.992 ops/s
Iteration   8: 90.544 ops/s
Iteration   9: 81.718 ops/s
Iteration  10: 86.754 ops/s


Result "com.meylism.databind.Deserialization.dsljson_reflection":
  84.691 ?(99.9%) 3.317 ops/s [Average]
  (min, avg, max) = (78.013, 84.691, 93.090), stdev = 3.819
  CI (99.9%): [81.374, 88.007] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.gson

# Run progress: 40.00% complete, ETA 00:08:53
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 79.130 ops/s
# Warmup Iteration   2: 89.859 ops/s
# Warmup Iteration   3: 93.089 ops/s
# Warmup Iteration   4: 93.380 ops/s
# Warmup Iteration   5: 93.309 ops/s
Iteration   1: 92.164 ops/s
Iteration   2: 95.964 ops/s
Iteration   3: 91.850 ops/s
Iteration   4: 93.336 ops/s
Iteration   5: 91.965 ops/s
Iteration   6: 96.399 ops/s
Iteration   7: 101.363 ops/s
Iteration   8: 101.667 ops/s
Iteration   9: 91.993 ops/s
Iteration  10: 90.016 ops/s

# Run progress: 50.00% complete, ETA 00:07:22
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 83.429 ops/s
# Warmup Iteration   2: 116.383 ops/s
# Warmup Iteration   3: 110.331 ops/s
# Warmup Iteration   4: 109.992 ops/s
# Warmup Iteration   5: 108.105 ops/s
Iteration   1: 106.536 ops/s
Iteration   2: 110.257 ops/s
Iteration   3: 119.937 ops/s
Iteration   4: 112.388 ops/s
Iteration   5: 116.991 ops/s
Iteration   6: 111.261 ops/s
Iteration   7: 108.507 ops/s
Iteration   8: 113.384 ops/s
Iteration   9: 114.893 ops/s
Iteration  10: 117.096 ops/s


Result "com.meylism.databind.Deserialization.gson":
  103.898 ?(99.9%) 8.933 ops/s [Average]
  (min, avg, max) = (90.016, 103.898, 119.937), stdev = 10.287
  CI (99.9%): [94.966, 112.831] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson

# Run progress: 60.00% complete, ETA 00:05:52
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 150.800 ops/s
# Warmup Iteration   2: 182.644 ops/s
# Warmup Iteration   3: 195.865 ops/s
# Warmup Iteration   4: 198.181 ops/s
# Warmup Iteration   5: 198.202 ops/s
Iteration   1: 195.832 ops/s
Iteration   2: 186.805 ops/s
Iteration   3: 188.612 ops/s
Iteration   4: 190.724 ops/s
Iteration   5: 189.984 ops/s
Iteration   6: 190.102 ops/s
Iteration   7: 185.295 ops/s
Iteration   8: 183.733 ops/s
Iteration   9: 181.447 ops/s
Iteration  10: 182.689 ops/s

# Run progress: 70.00% complete, ETA 00:04:23
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 174.329 ops/s
# Warmup Iteration   2: 189.906 ops/s
# Warmup Iteration   3: 188.729 ops/s
# Warmup Iteration   4: 194.140 ops/s
# Warmup Iteration   5: 202.749 ops/s
Iteration   1: 204.237 ops/s
Iteration   2: 207.664 ops/s
Iteration   3: 204.984 ops/s
Iteration   4: 195.500 ops/s
Iteration   5: 206.304 ops/s
Iteration   6: 200.463 ops/s
Iteration   7: 198.869 ops/s
Iteration   8: 217.278 ops/s
Iteration   9: 196.272 ops/s
Iteration  10: 196.930 ops/s


Result "com.meylism.databind.Deserialization.jackson":
  195.186 ?(99.9%) 8.338 ops/s [Average]
  (min, avg, max) = (181.447, 195.186, 217.278), stdev = 9.602
  CI (99.9%): [186.849, 203.524] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Deserialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:54
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
172.256 ops/s
# Warmup Iteration   2: 209.391 ops/s
# Warmup Iteration   3: 201.560 ops/s
# Warmup Iteration   4: 213.914 ops/s
# Warmup Iteration   5: 207.932 ops/s
Iteration   1: 213.382 ops/s
Iteration   2: 216.356 ops/s
Iteration   3: 213.146 ops/s
Iteration   4: 211.973 ops/s
Iteration   5: 213.817 ops/s
Iteration   6: 212.268 ops/s
Iteration   7: 213.241 ops/s
Iteration   8: 216.132 ops/s
Iteration   9: 216.246 ops/s
Iteration  10: 211.519 ops/s

# Run progress: 90.00% complete, ETA 00:01:27
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
181.131 ops/s
# Warmup Iteration   2: 201.261 ops/s
# Warmup Iteration   3: 208.810 ops/s
# Warmup Iteration   4: 200.032 ops/s
# Warmup Iteration   5: 200.083 ops/s
Iteration   1: 193.921 ops/s
Iteration   2: 197.081 ops/s
Iteration   3: 209.077 ops/s
Iteration   4: 209.290 ops/s
Iteration   5: 209.407 ops/s
Iteration   6: 209.705 ops/s
Iteration   7: 210.686 ops/s
Iteration   8: 211.026 ops/s
Iteration   9: 212.348 ops/s
Iteration  10: 210.198 ops/s


Result "com.meylism.databind.Deserialization.jackson_afterburner":
  210.541 ?(99.9%) 4.893 ops/s [Average]
  (min, avg, max) = (193.921, 210.541, 216.356), stdev = 5.635
  CI (99.9%): [205.648, 215.434] (assumes normal distribution)


# Run complete. Total time: 00:14:29

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt    Score   Error  Units
Deserialization.dsljson              thrpt   20   86.534 ? 2.943  ops/s
Deserialization.dsljson_reflection   thrpt   20   84.691 ? 3.317  ops/s
Deserialization.gson                 thrpt   20  103.898 ? 8.933  ops/s
Deserialization.jackson              thrpt   20  195.186 ? 8.338  ops/s
Deserialization.jackson_afterburner  thrpt   20  210.541 ? 4.893  ops/s
