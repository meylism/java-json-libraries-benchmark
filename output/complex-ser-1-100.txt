# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
5504.712 ops/s
# Warmup Iteration   2: 5427.048 ops/s
# Warmup Iteration   3: 5415.578 ops/s
# Warmup Iteration   4: 5371.635 ops/s
# Warmup Iteration   5: 5372.940 ops/s
Iteration   1: 5402.503 ops/s
Iteration   2: 5230.786 ops/s
Iteration   3: 5386.236 ops/s
Iteration   4: 5283.791 ops/s
Iteration   5: 5206.495 ops/s
Iteration   6: 5123.928 ops/s
Iteration   7: 5146.023 ops/s
Iteration   8: 5427.528 ops/s
Iteration   9: 5419.066 ops/s
Iteration  10: 5404.349 ops/s

# Run progress: 10.00% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
5459.272 ops/s
# Warmup Iteration   2: 5530.444 ops/s
# Warmup Iteration   3: 5468.407 ops/s
# Warmup Iteration   4: 5506.742 ops/s
# Warmup Iteration   5: 5352.961 ops/s
Iteration   1: 5436.399 ops/s
Iteration   2: 5436.509 ops/s
Iteration   3: 5479.427 ops/s
Iteration   4: 5503.702 ops/s
Iteration   5: 5526.664 ops/s
Iteration   6: 5490.127 ops/s
Iteration   7: 5517.792 ops/s
Iteration   8: 5498.076 ops/s
Iteration   9: 5523.843 ops/s
Iteration  10: 5332.597 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  5388.792 ?(99.9%) 110.270 ops/s [Average]
  (min, avg, max) = (5123.928, 5388.792, 5526.664), stdev = 126.987
  CI (99.9%): [5278.522, 5499.062] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:48
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
5712.172 ops/s
# Warmup Iteration   2: 6418.478 ops/s
# Warmup Iteration   3: 6421.620 ops/s
# Warmup Iteration   4: 6318.172 ops/s
# Warmup Iteration   5: 6504.852 ops/s
Iteration   1: 6474.211 ops/s
Iteration   2: 6437.045 ops/s
Iteration   3: 6495.146 ops/s
Iteration   4: 6590.802 ops/s
Iteration   5: 6611.028 ops/s
Iteration   6: 6352.592 ops/s
Iteration   7: 6241.483 ops/s
Iteration   8: 6476.167 ops/s
Iteration   9: 6418.984 ops/s
Iteration  10: 6447.742 ops/s

# Run progress: 30.00% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
5149.667 ops/s
# Warmup Iteration   2: 4992.243 ops/s
# Warmup Iteration   3: 4931.603 ops/s
# Warmup Iteration   4: 5000.873 ops/s
# Warmup Iteration   5: 4853.614 ops/s
Iteration   1: 4929.188 ops/s
Iteration   2: 4823.611 ops/s
Iteration   3: 4915.740 ops/s
Iteration   4: 4960.774 ops/s
Iteration   5: 4963.262 ops/s
Iteration   6: 4942.952 ops/s
Iteration   7: 5017.447 ops/s
Iteration   8: 4978.164 ops/s
Iteration   9: 5013.469 ops/s
Iteration  10: 4934.102 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  5701.196 ?(99.9%) 674.994 ops/s [Average]
  (min, avg, max) = (4823.611, 5701.196, 6611.028), stdev = 777.324
  CI (99.9%): [5026.202, 6376.189] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
5890.416 ops/s
# Warmup Iteration   2: 6257.283 ops/s
# Warmup Iteration   3: 6132.677 ops/s
# Warmup Iteration   4: 6205.763 ops/s
# Warmup Iteration   5: 6202.545 ops/s
Iteration   1: 6113.959 ops/s
Iteration   2: 6002.207 ops/s
Iteration   3: 6302.273 ops/s
Iteration   4: 6396.151 ops/s
Iteration   5: 6031.026 ops/s
Iteration   6: 6009.445 ops/s
Iteration   7: 6233.392 ops/s
Iteration   8: 5867.517 ops/s
Iteration   9: 5686.353 ops/s
Iteration  10: 5978.303 ops/s

# Run progress: 50.00% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
4984.164 ops/s
# Warmup Iteration   2: 4981.716 ops/s
# Warmup Iteration   3: 5077.193 ops/s
# Warmup Iteration   4: 5063.873 ops/s
# Warmup Iteration   5: 5036.000 ops/s
Iteration   1: 4937.388 ops/s
Iteration   2: 4977.951 ops/s
Iteration   3: 5027.762 ops/s
Iteration   4: 5102.978 ops/s
Iteration   5: 5032.488 ops/s
Iteration   6: 5019.224 ops/s
Iteration   7: 4900.492 ops/s
Iteration   8: 4941.200 ops/s
Iteration   9: 4883.571 ops/s
Iteration  10: 5129.382 ops/s


Result "com.meylism.databind.Serialization.gson":
  5528.653 ?(99.9%) 493.869 ops/s [Average]
  (min, avg, max) = (4883.571, 5528.653, 6396.151), stdev = 568.740
  CI (99.9%): [5034.784, 6022.522] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
6674.082 ops/s
# Warmup Iteration   2: 6698.291 ops/s
# Warmup Iteration   3: 6699.931 ops/s
# Warmup Iteration   4: 6691.301 ops/s
# Warmup Iteration   5: 6709.071 ops/s
Iteration   1: 6576.877 ops/s
Iteration   2: 6626.688 ops/s
Iteration   3: 6750.672 ops/s
Iteration   4: 6782.457 ops/s
Iteration   5: 6674.794 ops/s
Iteration   6: 6764.056 ops/s
Iteration   7: 6618.783 ops/s
Iteration   8: 6673.909 ops/s
Iteration   9: 6565.849 ops/s
Iteration  10: 6453.801 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
6198.677 ops/s
# Warmup Iteration   2: 6365.493 ops/s
# Warmup Iteration   3: 6375.182 ops/s
# Warmup Iteration   4: 6400.608 ops/s
# Warmup Iteration   5: 6281.334 ops/s
Iteration   1: 6252.176 ops/s
Iteration   2: 6404.690 ops/s
Iteration   3: 6474.769 ops/s
Iteration   4: 6559.211 ops/s
Iteration   5: 6332.440 ops/s
Iteration   6: 6391.008 ops/s
Iteration   7: 6441.401 ops/s
Iteration   8: 6524.174 ops/s
Iteration   9: 6630.731 ops/s
Iteration  10: 6498.930 ops/s


Result "com.meylism.databind.Serialization.jackson":
  6549.871 ?(99.9%) 126.254 ops/s [Average]
  (min, avg, max) = (6252.176, 6549.871, 6782.457), stdev = 145.394
  CI (99.9%): [6423.617, 6676.124] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/java-11-openjdk-11.0.8.10-0.el7_8.x86_64/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6179.673 ops/s
# Warmup Iteration   2: 6104.225 ops/s
# Warmup Iteration   3: 6192.572 ops/s
# Warmup Iteration   4: 6191.086 ops/s
# Warmup Iteration   5: 6069.339 ops/s
Iteration   1: 6149.635 ops/s
Iteration   2: 6205.568 ops/s
Iteration   3: 6088.729 ops/s
Iteration   4: 6185.778 ops/s
Iteration   5: 6160.010 ops/s
Iteration   6: 6157.235 ops/s
Iteration   7: 6023.867 ops/s
Iteration   8: 6168.415 ops/s
Iteration   9: 6237.532 ops/s
Iteration  10: 6181.838 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=8678 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/projects/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
6322.651 ops/s
# Warmup Iteration   2: 6403.937 ops/s
# Warmup Iteration   3: 6535.488 ops/s
# Warmup Iteration   4: 6577.936 ops/s
# Warmup Iteration   5: 6450.699 ops/s
Iteration   1: 6408.620 ops/s
Iteration   2: 6528.694 ops/s
Iteration   3: 6606.901 ops/s
Iteration   4: 6695.944 ops/s
Iteration   5: 6661.974 ops/s
Iteration   6: 6569.318 ops/s
Iteration   7: 6609.198 ops/s
Iteration   8: 6681.033 ops/s
Iteration   9: 6222.318 ops/s
Iteration  10: 6487.879 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  6351.524 ?(99.9%) 198.042 ops/s [Average]
  (min, avg, max) = (6023.867, 6351.524, 6695.944), stdev = 228.065
  CI (99.9%): [6153.483, 6549.566] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt     Score     Error  Units
Serialization.dsljson              thrpt   20  5388.792 ? 110.270  ops/s
Serialization.dsljson_reflection   thrpt   20  5701.196 ? 674.994  ops/s
Serialization.gson                 thrpt   20  5528.653 ? 493.869  ops/s
Serialization.jackson              thrpt   20  6549.871 ? 126.254  ops/s
Serialization.jackson_afterburner  thrpt   20  6351.524 ? 198.042  ops/s
