# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1426.553 ops/s
# Warmup Iteration   2: 1466.916 ops/s
# Warmup Iteration   3: 1459.502 ops/s
# Warmup Iteration   4: 1462.113 ops/s
# Warmup Iteration   5: 1457.562 ops/s
Iteration   1: 1460.460 ops/s
Iteration   2: 1455.097 ops/s
Iteration   3: 1455.812 ops/s
Iteration   4: 1458.814 ops/s
Iteration   5: 1459.903 ops/s
Iteration   6: 1459.994 ops/s
Iteration   7: 1456.556 ops/s
Iteration   8: 1453.662 ops/s
Iteration   9: 1456.216 ops/s
Iteration  10: 1458.015 ops/s

# Run progress: 10.00% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1378.465 ops/s
# Warmup Iteration   2: 1411.577 ops/s
# Warmup Iteration   3: 1396.087 ops/s
# Warmup Iteration   4: 1395.260 ops/s
# Warmup Iteration   5: 1395.816 ops/s
Iteration   1: 1402.751 ops/s
Iteration   2: 1394.326 ops/s
Iteration   3: 1396.552 ops/s
Iteration   4: 1401.763 ops/s
Iteration   5: 1400.724 ops/s
Iteration   6: 1397.476 ops/s
Iteration   7: 1401.892 ops/s
Iteration   8: 1391.003 ops/s
Iteration   9: 1400.490 ops/s
Iteration  10: 1391.246 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  1427.638 ±(99.9%) 26.730 ops/s [Average]
  (min, avg, max) = (1391.003, 1427.638, 1460.460), stdev = 30.782
  CI (99.9%): [1400.908, 1454.367] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:10:49
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1395.068 ops/s
# Warmup Iteration   2: 1454.996 ops/s
# Warmup Iteration   3: 1449.709 ops/s
# Warmup Iteration   4: 1447.382 ops/s
# Warmup Iteration   5: 1448.560 ops/s
Iteration   1: 1450.967 ops/s
Iteration   2: 1448.167 ops/s
Iteration   3: 1443.906 ops/s
Iteration   4: 1441.990 ops/s
Iteration   5: 1453.023 ops/s
Iteration   6: 1450.511 ops/s
Iteration   7: 1448.405 ops/s
Iteration   8: 1447.870 ops/s
Iteration   9: 1447.843 ops/s
Iteration  10: 1442.591 ops/s

# Run progress: 30.00% complete, ETA 00:09:28
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1399.267 ops/s
# Warmup Iteration   2: 1492.841 ops/s
# Warmup Iteration   3: 1499.337 ops/s
# Warmup Iteration   4: 1498.231 ops/s
# Warmup Iteration   5: 1494.765 ops/s
Iteration   1: 1495.105 ops/s
Iteration   2: 1491.190 ops/s
Iteration   3: 1494.955 ops/s
Iteration   4: 1494.752 ops/s
Iteration   5: 1491.597 ops/s
Iteration   6: 1490.226 ops/s
Iteration   7: 1486.102 ops/s
Iteration   8: 1493.247 ops/s
Iteration   9: 1492.882 ops/s
Iteration  10: 1492.962 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  1469.914 ±(99.9%) 20.131 ops/s [Average]
  (min, avg, max) = (1441.990, 1469.914, 1495.105), stdev = 23.183
  CI (99.9%): [1449.784, 1490.045] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:08:07
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1082.117 ops/s
# Warmup Iteration   2: 1181.680 ops/s
# Warmup Iteration   3: 1163.399 ops/s
# Warmup Iteration   4: 1161.984 ops/s
# Warmup Iteration   5: 1161.946 ops/s
Iteration   1: 1160.091 ops/s
Iteration   2: 1139.370 ops/s
Iteration   3: 1158.660 ops/s
Iteration   4: 1162.210 ops/s
Iteration   5: 1160.834 ops/s
Iteration   6: 1163.631 ops/s
Iteration   7: 1161.118 ops/s
Iteration   8: 1161.541 ops/s
Iteration   9: 1159.311 ops/s
Iteration  10: 1163.579 ops/s

# Run progress: 50.00% complete, ETA 00:06:46
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1140.026 ops/s
# Warmup Iteration   2: 1254.438 ops/s
# Warmup Iteration   3: 1266.739 ops/s
# Warmup Iteration   4: 1266.271 ops/s
# Warmup Iteration   5: 1267.177 ops/s
Iteration   1: 1240.127 ops/s
Iteration   2: 1265.865 ops/s
Iteration   3: 1264.801 ops/s
Iteration   4: 1264.569 ops/s
Iteration   5: 1265.366 ops/s
Iteration   6: 1264.771 ops/s
Iteration   7: 1266.154 ops/s
Iteration   8: 1265.993 ops/s
Iteration   9: 1265.492 ops/s
Iteration  10: 1266.402 ops/s


Result "com.meylism.databind.Serialization.gson":
  1210.994 ±(99.9%) 46.734 ops/s [Average]
  (min, avg, max) = (1139.370, 1210.994, 1266.402), stdev = 53.819
  CI (99.9%): [1164.261, 1257.728] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1346.212 ops/s
# Warmup Iteration   2: 1461.773 ops/s
# Warmup Iteration   3: 1445.636 ops/s
# Warmup Iteration   4: 1442.215 ops/s
# Warmup Iteration   5: 1441.674 ops/s
Iteration   1: 1441.524 ops/s
Iteration   2: 1443.283 ops/s
Iteration   3: 1446.642 ops/s
Iteration   4: 1441.429 ops/s
Iteration   5: 1441.866 ops/s
Iteration   6: 1442.438 ops/s
Iteration   7: 1439.168 ops/s
Iteration   8: 1440.797 ops/s
Iteration   9: 1438.544 ops/s
Iteration  10: 1437.689 ops/s

# Run progress: 70.00% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
1274.696 ops/s
# Warmup Iteration   2: 1391.693 ops/s
# Warmup Iteration   3: 1387.842 ops/s
# Warmup Iteration   4: 1387.067 ops/s
# Warmup Iteration   5: 1387.769 ops/s
Iteration   1: 1383.295 ops/s
Iteration   2: 1383.174 ops/s
Iteration   3: 1387.364 ops/s
Iteration   4: 1383.581 ops/s
Iteration   5: 1386.298 ops/s
Iteration   6: 1380.317 ops/s
Iteration   7: 1386.992 ops/s
Iteration   8: 1352.567 ops/s
Iteration   9: 1383.128 ops/s
Iteration  10: 1384.918 ops/s


Result "com.meylism.databind.Serialization.jackson":
  1411.251 ±(99.9%) 27.542 ops/s [Average]
  (min, avg, max) = (1352.567, 1411.251, 1446.642), stdev = 31.718
  CI (99.9%): [1383.709, 1438.793] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+1
# VM invoker: /usr/lib/jvm/jdk-11.0.14.1+1/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1361.989 ops/s
# Warmup Iteration   2: 1489.908 ops/s
# Warmup Iteration   3: 1489.420 ops/s
# Warmup Iteration   4: 1490.328 ops/s
# Warmup Iteration   5: 1488.324 ops/s
Iteration   1: 1491.978 ops/s
Iteration   2: 1484.828 ops/s
Iteration   3: 1488.815 ops/s
Iteration   4: 1486.942 ops/s
Iteration   5: 1487.004 ops/s
Iteration   6: 1489.089 ops/s
Iteration   7: 1486.805 ops/s
Iteration   8: 1488.661 ops/s
Iteration   9: 1484.735 ops/s
Iteration  10: 1488.820 ops/s

# Run progress: 90.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: Using SEED=10461 as seed for Random
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/home/meylism/Documents/java-json-libraries-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
1316.032 ops/s
# Warmup Iteration   2: 1423.510 ops/s
# Warmup Iteration   3: 1420.879 ops/s
# Warmup Iteration   4: 1423.098 ops/s
# Warmup Iteration   5: 1418.983 ops/s
Iteration   1: 1417.164 ops/s
Iteration   2: 1420.793 ops/s
Iteration   3: 1416.921 ops/s
Iteration   4: 1417.923 ops/s
Iteration   5: 1414.244 ops/s
Iteration   6: 1417.092 ops/s
Iteration   7: 1418.674 ops/s
Iteration   8: 1416.429 ops/s
Iteration   9: 1421.249 ops/s
Iteration  10: 1414.898 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  1452.653 ±(99.9%) 31.340 ops/s [Average]
  (min, avg, max) = (1414.244, 1452.653, 1491.978), stdev = 36.091
  CI (99.9%): [1421.313, 1483.993] (assumes normal distribution)


# Run complete. Total time: 00:13:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt     Score    Error  Units
Serialization.dsljson              thrpt   20  1427.638 ± 26.730  ops/s
Serialization.dsljson_reflection   thrpt   20  1469.914 ± 20.131  ops/s
Serialization.gson                 thrpt   20  1210.994 ± 46.734  ops/s
Serialization.jackson              thrpt   20  1411.251 ± 27.542  ops/s
Serialization.jackson_afterburner  thrpt   20  1452.653 ± 31.340  ops/s
