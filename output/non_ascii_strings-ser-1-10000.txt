# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 35.975 ops/s
# Warmup Iteration   2: 36.716 ops/s
# Warmup Iteration   3: 37.733 ops/s
# Warmup Iteration   4: 37.972 ops/s
# Warmup Iteration   5: 37.876 ops/s
Iteration   1: 37.995 ops/s
Iteration   2: 37.876 ops/s
Iteration   3: 35.726 ops/s
Iteration   4: 34.368 ops/s
Iteration   5: 36.676 ops/s
Iteration   6: 35.532 ops/s
Iteration   7: 36.041 ops/s
Iteration   8: 37.437 ops/s
Iteration   9: 34.260 ops/s
Iteration  10: 36.547 ops/s

# Run progress: 10.00% complete, ETA 00:13:52
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 35.661 ops/s
# Warmup Iteration   2: 36.304 ops/s
# Warmup Iteration   3: 36.826 ops/s
# Warmup Iteration   4: 35.795 ops/s
# Warmup Iteration   5: 35.153 ops/s
Iteration   1: 33.750 ops/s
Iteration   2: 35.099 ops/s
Iteration   3: 36.047 ops/s
Iteration   4: 34.353 ops/s
Iteration   5: 34.578 ops/s
Iteration   6: 35.123 ops/s
Iteration   7: 34.294 ops/s
Iteration   8: 34.689 ops/s
Iteration   9: 36.460 ops/s
Iteration  10: 34.143 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  35.550 ?(99.9%) 1.126 ops/s [Average]
  (min, avg, max) = (33.750, 35.550, 37.995), stdev = 1.296
  CI (99.9%): [34.424, 36.675] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:12:22
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 33.940 ops/s
# Warmup Iteration   2: 33.505 ops/s
# Warmup Iteration   3: 35.754 ops/s
# Warmup Iteration   4: 34.802 ops/s
# Warmup Iteration   5: 36.279 ops/s
Iteration   1: 36.631 ops/s
Iteration   2: 33.376 ops/s
Iteration   3: 33.536 ops/s
Iteration   4: 35.164 ops/s
Iteration   5: 37.188 ops/s
Iteration   6: 34.972 ops/s
Iteration   7: 35.016 ops/s
Iteration   8: 35.022 ops/s
Iteration   9: 33.443 ops/s
Iteration  10: 33.644 ops/s

# Run progress: 30.00% complete, ETA 00:10:50
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 33.358 ops/s
# Warmup Iteration   2: 33.375 ops/s
# Warmup Iteration   3: 32.923 ops/s
# Warmup Iteration   4: 35.952 ops/s
# Warmup Iteration   5: 35.151 ops/s
Iteration   1: 36.614 ops/s
Iteration   2: 37.486 ops/s
Iteration   3: 36.900 ops/s
Iteration   4: 36.631 ops/s
Iteration   5: 37.167 ops/s
Iteration   6: 37.083 ops/s
Iteration   7: 37.058 ops/s
Iteration   8: 36.722 ops/s
Iteration   9: 32.214 ops/s
Iteration  10: 32.237 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  35.405 ?(99.9%) 1.542 ops/s [Average]
  (min, avg, max) = (32.214, 35.405, 37.486), stdev = 1.776
  CI (99.9%): [33.863, 36.947] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:09:18
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 59.481 ops/s
# Warmup Iteration   2: 60.469 ops/s
# Warmup Iteration   3: 59.956 ops/s
# Warmup Iteration   4: 65.445 ops/s
# Warmup Iteration   5: 67.381 ops/s
Iteration   1: 61.874 ops/s
Iteration   2: 65.251 ops/s
Iteration   3: 63.459 ops/s
Iteration   4: 63.514 ops/s
Iteration   5: 62.897 ops/s
Iteration   6: 61.808 ops/s
Iteration   7: 61.506 ops/s
Iteration   8: 64.336 ops/s
Iteration   9: 66.087 ops/s
Iteration  10: 64.985 ops/s

# Run progress: 50.00% complete, ETA 00:07:41
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 71.297 ops/s
# Warmup Iteration   2: 70.757 ops/s
# Warmup Iteration   3: 69.432 ops/s
# Warmup Iteration   4: 71.481 ops/s
# Warmup Iteration   5: 72.081 ops/s
Iteration   1: 67.992 ops/s
Iteration   2: 70.935 ops/s
Iteration   3: 72.894 ops/s
Iteration   4: 73.973 ops/s
Iteration   5: 74.644 ops/s
Iteration   6: 74.987 ops/s
Iteration   7: 70.330 ops/s
Iteration   8: 70.273 ops/s
Iteration   9: 72.879 ops/s
Iteration  10: 68.163 ops/s


Result "com.meylism.databind.Serialization.gson":
  67.639 ?(99.9%) 4.041 ops/s [Average]
  (min, avg, max) = (61.506, 67.639, 74.987), stdev = 4.654
  CI (99.9%): [63.598, 71.681] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:06:06
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 29.471 ops/s
# Warmup Iteration   2: 29.318 ops/s
# Warmup Iteration   3: 29.883 ops/s
# Warmup Iteration   4: 31.508 ops/s
# Warmup Iteration   5: 31.401 ops/s
Iteration   1: 31.529 ops/s
Iteration   2: 31.793 ops/s
Iteration   3: 31.857 ops/s
Iteration   4: 32.181 ops/s
Iteration   5: 32.034 ops/s
Iteration   6: 31.725 ops/s
Iteration   7: 31.781 ops/s
Iteration   8: 31.709 ops/s
Iteration   9: 31.839 ops/s
Iteration  10: 29.383 ops/s

# Run progress: 70.00% complete, ETA 00:04:36
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: 34.589 ops/s
# Warmup Iteration   2: 34.059 ops/s
# Warmup Iteration   3: 33.638 ops/s
# Warmup Iteration   4: 33.243 ops/s
# Warmup Iteration   5: 32.541 ops/s
Iteration   1: 34.454 ops/s
Iteration   2: 34.262 ops/s
Iteration   3: 32.863 ops/s
Iteration   4: 31.973 ops/s
Iteration   5: 32.769 ops/s
Iteration   6: 31.948 ops/s
Iteration   7: 32.658 ops/s
Iteration   8: 34.453 ops/s
Iteration   9: 33.638 ops/s
Iteration  10: 34.105 ops/s


Result "com.meylism.databind.Serialization.jackson":
  32.448 ?(99.9%) 1.081 ops/s [Average]
  (min, avg, max) = (29.383, 32.448, 34.454), stdev = 1.245
  CI (99.9%): [31.367, 33.529] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 11.0.14, OpenJDK 64-Bit Server VM, 11.0.14+9-post-Debian-1deb11u1
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -XX:+AggressiveOpts -Xms2g -Xmx2g
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:03:04
# Fork: 1 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
32.953 ops/s
# Warmup Iteration   2: 33.425 ops/s
# Warmup Iteration   3: 33.914 ops/s
# Warmup Iteration   4: 34.722 ops/s
# Warmup Iteration   5: 33.958 ops/s
Iteration   1: 36.723 ops/s
Iteration   2: 37.235 ops/s
Iteration   3: 37.371 ops/s
Iteration   4: 37.769 ops/s
Iteration   5: 36.305 ops/s
Iteration   6: 36.971 ops/s
Iteration   7: 36.555 ops/s
Iteration   8: 37.032 ops/s
Iteration   9: 37.128 ops/s
Iteration  10: 33.918 ops/s

# Run progress: 90.00% complete, ETA 00:01:32
# Fork: 2 of 2
OpenJDK 64-Bit Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/root/java-json-parser-benchmark/target/benchmark-with-dependencies.jar) to method java.lang.ClassLoader.findLoadedClass(java.lang.String)
WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
30.571 ops/s
# Warmup Iteration   2: 30.770 ops/s
# Warmup Iteration   3: 33.460 ops/s
# Warmup Iteration   4: 33.445 ops/s
# Warmup Iteration   5: 33.420 ops/s
Iteration   1: 29.993 ops/s
Iteration   2: 31.160 ops/s
Iteration   3: 30.810 ops/s
Iteration   4: 30.609 ops/s
Iteration   5: 29.222 ops/s
Iteration   6: 30.681 ops/s
Iteration   7: 30.576 ops/s
Iteration   8: 30.895 ops/s
Iteration   9: 31.506 ops/s
Iteration  10: 32.304 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  33.738 ?(99.9%) 2.759 ops/s [Average]
  (min, avg, max) = (29.222, 33.738, 37.769), stdev = 3.178
  CI (99.9%): [30.979, 36.497] (assumes normal distribution)


# Run complete. Total time: 00:15:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt   Score   Error  Units
Serialization.dsljson              thrpt   20  35.550 ? 1.126  ops/s
Serialization.dsljson_reflection   thrpt   20  35.405 ? 1.542  ops/s
Serialization.gson                 thrpt   20  67.639 ? 4.041  ops/s
Serialization.jackson              thrpt   20  32.448 ? 1.081  ops/s
Serialization.jackson_afterburner  thrpt   20  33.738 ? 2.759  ops/s
