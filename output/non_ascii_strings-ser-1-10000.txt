# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson

# Run progress: 0.00% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 71.260 ops/s
# Warmup Iteration   2: 70.024 ops/s
# Warmup Iteration   3: 70.671 ops/s
# Warmup Iteration   4: 71.136 ops/s
# Warmup Iteration   5: 70.942 ops/s
Iteration   1: 70.484 ops/s
Iteration   2: 70.615 ops/s
Iteration   3: 71.050 ops/s
Iteration   4: 70.322 ops/s
Iteration   5: 70.580 ops/s
Iteration   6: 70.325 ops/s
Iteration   7: 71.326 ops/s
Iteration   8: 70.461 ops/s
Iteration   9: 69.688 ops/s
Iteration  10: 70.168 ops/s

# Run progress: 10.00% complete, ETA 00:08:38
# Fork: 2 of 2
# Warmup Iteration   1: 73.643 ops/s
# Warmup Iteration   2: 73.256 ops/s
# Warmup Iteration   3: 73.793 ops/s
# Warmup Iteration   4: 73.504 ops/s
# Warmup Iteration   5: 74.754 ops/s
Iteration   1: 73.551 ops/s
Iteration   2: 73.200 ops/s
Iteration   3: 70.653 ops/s
Iteration   4: 71.659 ops/s
Iteration   5: 74.389 ops/s
Iteration   6: 74.640 ops/s
Iteration   7: 72.237 ops/s
Iteration   8: 73.789 ops/s
Iteration   9: 73.470 ops/s
Iteration  10: 72.629 ops/s


Result "com.meylism.databind.Serialization.dsljson":
  71.762 ?(99.9%) 1.372 ops/s [Average]
  (min, avg, max) = (69.688, 71.762, 74.640), stdev = 1.580
  CI (99.9%): [70.390, 73.133] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.dsljson_reflection

# Run progress: 20.00% complete, ETA 00:07:40
# Fork: 1 of 2
# Warmup Iteration   1: 70.452 ops/s
# Warmup Iteration   2: 70.728 ops/s
# Warmup Iteration   3: 70.346 ops/s
# Warmup Iteration   4: 70.390 ops/s
# Warmup Iteration   5: 70.307 ops/s
Iteration   1: 67.910 ops/s
Iteration   2: 69.747 ops/s
Iteration   3: 70.695 ops/s
Iteration   4: 71.109 ops/s
Iteration   5: 69.548 ops/s
Iteration   6: 69.942 ops/s
Iteration   7: 68.626 ops/s
Iteration   8: 69.954 ops/s
Iteration   9: 70.632 ops/s
Iteration  10: 71.273 ops/s

# Run progress: 30.00% complete, ETA 00:06:42
# Fork: 2 of 2
# Warmup Iteration   1: 70.700 ops/s
# Warmup Iteration   2: 73.320 ops/s
# Warmup Iteration   3: 72.152 ops/s
# Warmup Iteration   4: 72.465 ops/s
# Warmup Iteration   5: 71.946 ops/s
Iteration   1: 72.544 ops/s
Iteration   2: 72.598 ops/s
Iteration   3: 72.739 ops/s
Iteration   4: 72.451 ops/s
Iteration   5: 72.576 ops/s
Iteration   6: 73.082 ops/s
Iteration   7: 72.663 ops/s
Iteration   8: 71.591 ops/s
Iteration   9: 72.136 ops/s
Iteration  10: 72.323 ops/s


Result "com.meylism.databind.Serialization.dsljson_reflection":
  71.207 ?(99.9%) 1.315 ops/s [Average]
  (min, avg, max) = (67.910, 71.207, 73.082), stdev = 1.515
  CI (99.9%): [69.892, 72.522] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.gson

# Run progress: 40.00% complete, ETA 00:05:45
# Fork: 1 of 2
# Warmup Iteration   1: 160.659 ops/s
# Warmup Iteration   2: 165.478 ops/s
# Warmup Iteration   3: 165.369 ops/s
# Warmup Iteration   4: 164.557 ops/s
# Warmup Iteration   5: 165.401 ops/s
Iteration   1: 164.575 ops/s
Iteration   2: 165.458 ops/s
Iteration   3: 165.889 ops/s
Iteration   4: 164.235 ops/s
Iteration   5: 164.873 ops/s
Iteration   6: 157.623 ops/s
Iteration   7: 159.337 ops/s
Iteration   8: 157.299 ops/s
Iteration   9: 160.699 ops/s
Iteration  10: 162.136 ops/s

# Run progress: 50.00% complete, ETA 00:04:47
# Fork: 2 of 2
# Warmup Iteration   1: 141.939 ops/s
# Warmup Iteration   2: 142.873 ops/s
# Warmup Iteration   3: 143.330 ops/s
# Warmup Iteration   4: 142.686 ops/s
# Warmup Iteration   5: 139.318 ops/s
Iteration   1: 144.227 ops/s
Iteration   2: 143.196 ops/s
Iteration   3: 143.750 ops/s
Iteration   4: 142.881 ops/s
Iteration   5: 142.393 ops/s
Iteration   6: 142.838 ops/s
Iteration   7: 142.898 ops/s
Iteration   8: 137.842 ops/s
Iteration   9: 139.407 ops/s
Iteration  10: 139.769 ops/s


Result "com.meylism.databind.Serialization.gson":
  152.066 ?(99.9%) 9.336 ops/s [Average]
  (min, avg, max) = (137.842, 152.066, 165.889), stdev = 10.752
  CI (99.9%): [142.730, 161.402] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson

# Run progress: 60.00% complete, ETA 00:03:49
# Fork: 1 of 2
# Warmup Iteration   1: 64.490 ops/s
# Warmup Iteration   2: 67.170 ops/s
# Warmup Iteration   3: 65.515 ops/s
# Warmup Iteration   4: 66.543 ops/s
# Warmup Iteration   5: 68.207 ops/s
Iteration   1: 67.874 ops/s
Iteration   2: 67.558 ops/s
Iteration   3: 68.183 ops/s
Iteration   4: 68.608 ops/s
Iteration   5: 68.287 ops/s
Iteration   6: 67.983 ops/s
Iteration   7: 66.620 ops/s
Iteration   8: 68.268 ops/s
Iteration   9: 68.222 ops/s
Iteration  10: 68.765 ops/s

# Run progress: 70.00% complete, ETA 00:02:52
# Fork: 2 of 2
# Warmup Iteration   1: 69.247 ops/s
# Warmup Iteration   2: 70.422 ops/s
# Warmup Iteration   3: 70.626 ops/s
# Warmup Iteration   4: 68.956 ops/s
# Warmup Iteration   5: 66.799 ops/s
Iteration   1: 66.777 ops/s
Iteration   2: 70.553 ops/s
Iteration   3: 70.813 ops/s
Iteration   4: 70.406 ops/s
Iteration   5: 67.804 ops/s
Iteration   6: 67.672 ops/s
Iteration   7: 69.121 ops/s
Iteration   8: 68.122 ops/s
Iteration   9: 70.416 ops/s
Iteration  10: 70.308 ops/s


Result "com.meylism.databind.Serialization.jackson":
  68.618 ?(99.9%) 1.091 ops/s [Average]
  (min, avg, max) = (66.620, 68.618, 70.813), stdev = 1.256
  CI (99.9%): [67.527, 69.708] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /root/jdk-17.0.2/bin/java
# VM options: -Xms2g -Xmx5g
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.meylism.databind.Serialization.jackson_afterburner

# Run progress: 80.00% complete, ETA 00:01:54
# Fork: 1 of 2
# Warmup Iteration   1: 67.249 ops/s
# Warmup Iteration   2: 67.405 ops/s
# Warmup Iteration   3: 67.967 ops/s
# Warmup Iteration   4: 67.124 ops/s
# Warmup Iteration   5: 68.651 ops/s
Iteration   1: 67.267 ops/s
Iteration   2: 67.802 ops/s
Iteration   3: 66.697 ops/s
Iteration   4: 68.222 ops/s
Iteration   5: 68.249 ops/s
Iteration   6: 68.493 ops/s
Iteration   7: 67.460 ops/s
Iteration   8: 68.393 ops/s
Iteration   9: 68.322 ops/s
Iteration  10: 68.452 ops/s

# Run progress: 90.00% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 65.843 ops/s
# Warmup Iteration   2: 67.150 ops/s
# Warmup Iteration   3: 67.384 ops/s
# Warmup Iteration   4: 66.615 ops/s
# Warmup Iteration   5: 65.089 ops/s
Iteration   1: 66.948 ops/s
Iteration   2: 63.701 ops/s
Iteration   3: 67.196 ops/s
Iteration   4: 66.082 ops/s
Iteration   5: 64.986 ops/s
Iteration   6: 66.254 ops/s
Iteration   7: 67.002 ops/s
Iteration   8: 67.483 ops/s
Iteration   9: 67.580 ops/s
Iteration  10: 67.352 ops/s


Result "com.meylism.databind.Serialization.jackson_afterburner":
  67.197 ?(99.9%) 1.061 ops/s [Average]
  (min, avg, max) = (63.701, 67.197, 68.493), stdev = 1.222
  CI (99.9%): [66.136, 68.259] (assumes normal distribution)


# Run complete. Total time: 00:09:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                           Mode  Cnt    Score   Error  Units
Serialization.dsljson              thrpt   20   71.762 ? 1.372  ops/s
Serialization.dsljson_reflection   thrpt   20   71.207 ? 1.315  ops/s
Serialization.gson                 thrpt   20  152.066 ? 9.336  ops/s
Serialization.jackson              thrpt   20   68.618 ? 1.091  ops/s
Serialization.jackson_afterburner  thrpt   20   67.197 ? 1.061  ops/s
